# app/services/flipbook_builder.py
import json
from pathlib import Path
from jinja2 import Environment, FileSystemLoader
import markdown

# –ø–æ–¥–∫–ª—é—á–∞–µ–º —à–∞–±–ª–æ–Ω—ã –∏–∑ –ø–∞–ø–∫–∏ app/templates
env = Environment(loader=FileSystemLoader('app/templates'))

def generate_pages_html(run_id: str, image_paths: list[str], text_pages: list[str]) -> list[str]:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç HTML-—Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è —Ñ–ª–∏–ø–±—É–∫–∞, –∏—Å–ø–æ–ª—å–∑—É—è –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã.
    """
    print("üìö –°–æ–±–∏—Ä–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è —Ñ–ª–∏–ø–±—É–∫–∞...")
    
    pages = []

    pages.append("""
      <div class="cover-page">
        <h1>–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è –ò—Å—Ç–æ—Ä–∏—è</h1>
        <p><i>–° –ª—é–±–æ–≤—å—é...</i></p>
      </div>
    """)

    for idx, img_path in enumerate(image_paths):
        fn = Path(img_path).name
        pages.append(f"""
          <div class="page-image">
            <img src="/data/{run_id}/images/{fn}" alt="Image {idx+1}" />
          </div>
        """)

        if idx < len(text_pages):
            # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º Markdown –≤ HTML
            html_txt = markdown.markdown(text_pages[idx])
            pages.append(f"""
              <div class="text-content">
                {html_txt}
              </div>
            """)

    return pages


def build_flipbook_html(run_id: str, pages: list[str]):
    tpl = env.get_template('flipbook_template.html')
    html = tpl.render(pages=pages, run_id=run_id)
    out = Path('data') / run_id / 'book.html'
    out.parent.mkdir(parents=True, exist_ok=True)
    out.write_text(html, encoding='utf-8')
    print(f"‚úÖ Flipbook HTML —Å–æ–∑–¥–∞–Ω: {out}") 