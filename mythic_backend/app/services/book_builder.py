import json
import base64
from io import BytesIO
from pathlib import Path
from PIL import Image, ImageFilter, ImageEnhance, ImageDraw, ImageFont
from app.services.llm_client import strip_cliches, analyze_photo_for_memoir, generate_memoir_chapter
from typing import List, Tuple
import random

def analyze_profile_data(posts_data: list) -> dict:
    if not posts_data:
        return {}
    
    profile = posts_data[0]
    posts = profile.get("latestPosts", [])
    
    analysis = {
        "username": profile.get("username", "Unknown"),
        "full_name": profile.get("fullName", ""),
        "bio": profile.get("biography", ""),
        "followers": profile.get("followersCount", 0),
        "following": profile.get("followsCount", 0),
        "posts_count": len(posts),
        "verified": profile.get("verified", False),
        "profile_pic": profile.get("profilePicUrl", ""),
        "locations": [],
        "captions": [],
        "hashtags": set(),
        "mentions": set(),
        "post_details": [],
        "total_likes": 0,
        "total_comments": 0,
        "post_dates": [],
        "most_liked_post": None,
        "most_commented_post": None,
        "common_hashtags": [],
        "mentioned_users": []
    }
    
    # –°–æ–±–∏—Ä–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å—Ç–∞—Ö
    for post in posts:
        post_info = {
            "caption": post.get("caption", ""),
            "location": post.get("locationName", ""),
            "likes": post.get("likesCount", 0),
            "comments": post.get("commentsCount", 0),
            "type": post.get("type", ""),
            "alt": post.get("alt", ""),
            "timestamp": post.get("timestamp", ""),
            "hashtags": post.get("hashtags", []),
            "mentions": post.get("mentions", []),
            "url": post.get("url", "")
        }
        analysis["post_details"].append(post_info)
        
        # –ù–∞–∫–∞–ø–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        if post.get("likesCount"):
            analysis["total_likes"] += post["likesCount"]
            if not analysis["most_liked_post"] or post["likesCount"] > analysis["most_liked_post"]["likes"]:
                analysis["most_liked_post"] = post_info
                
        if post.get("commentsCount"):
            analysis["total_comments"] += post["commentsCount"]
            if not analysis["most_commented_post"] or post["commentsCount"] > analysis["most_commented_post"]["comments"]:
                analysis["most_commented_post"] = post_info
        
        if post.get("locationName"):
            analysis["locations"].append(post["locationName"])
        
        if post.get("caption"):
            analysis["captions"].append(post["caption"])
        
        if post.get("timestamp"):
            analysis["post_dates"].append(post["timestamp"])
            
        analysis["hashtags"].update(post.get("hashtags", []))
        analysis["mentions"].update(post.get("mentions", []))
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ö—ç—à—Ç–µ–≥–∏
    hashtag_count = {}
    for post in posts:
        for hashtag in post.get("hashtags", []):
            hashtag_count[hashtag] = hashtag_count.get(hashtag, 0) + 1
    
    analysis["common_hashtags"] = sorted(hashtag_count.items(), key=lambda x: x[1], reverse=True)[:5]
    analysis["mentioned_users"] = list(analysis["mentions"])[:10]
    
    return analysis

def build_romantic_book(run_id: str, images: list[Path], texts: str, book_format: str = "classic"):
    """–°–æ–∑–¥–∞–Ω–∏–µ HTML –∫–Ω–∏–≥–∏ (—Å –≤—ã–±–æ—Ä–æ–º —Ñ–æ—Ä–º–∞—Ç–∞: classic –∏–ª–∏ zine)"""
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è
        run_dir = Path("data") / run_id
        posts_json = run_dir / "posts.json"
        images_dir = run_dir / "images"
        
        if posts_json.exists():
            posts_data = json.loads(posts_json.read_text(encoding="utf-8"))
        else:
            posts_data = []
        
        # –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ —Å–æ–±–∏—Ä–∞–µ–º –∏—Ö
        actual_images = []
        if images_dir.exists():
            # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –ø–∞–ø–∫–∏
            for img_file in sorted(images_dir.glob("*")):
                if img_file.suffix.lower() in ['.jpg', '.jpeg', '.png', '.webp']:
                    actual_images.append(img_file)
        
        print(f"üíï –°–æ–∑–¥–∞–µ–º {book_format} –∫–Ω–∏–≥—É –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è")
        print(f"üì∏ –ù–∞–π–¥–µ–Ω–æ {len(actual_images)} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ {images_dir}")
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—Ä–æ—Ñ–∏–ª—å
        analysis = analyze_profile_data(posts_data)
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ñ–æ—Ä–º–∞—Ç–∞
        if book_format == "zine":
            # –ú–æ–∑–∞–∏—á–Ω—ã–π –∑–∏–Ω - –∫–æ—Ä–æ—Ç–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç
            content = generate_zine_content(analysis, actual_images)
            html = create_zine_html(content, analysis, actual_images)
        else:
            # –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω–∞—è Instagram-–∫–Ω–∏–≥–∞ –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞
            content = {"format": "literary"}  # –ü–µ—Ä–µ–¥–∞–µ–º –º–∏–Ω–∏–º—É–º –¥–∞–Ω–Ω—ã—Ö
            html = create_literary_instagram_book_html(content, analysis, actual_images)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–ª—å–∫–æ HTML —Ñ–∞–π–ª
        out = Path("data") / run_id
        out.mkdir(parents=True, exist_ok=True)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º HTML —Ñ–∞–π–ª
        html_file = out / "book.html"
        html_file.write_text(html, encoding="utf-8")
        
        print(f"‚úÖ {book_format.title()} –∫–Ω–∏–≥–∞ —Å–æ–∑–¥–∞–Ω–∞!")
        print(f"üìñ HTML –≤–µ—Ä—Å–∏—è: {out / 'book.html'}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–Ω–∏–≥–∏: {e}")
        # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—É—é –≤–µ—Ä—Å–∏—é –ø—Ä–∏ –æ—à–∏–±–∫–µ
        try:
            basic_html = f"""
            <html>
            <head>
                <title>–ö–Ω–∏–≥–∞</title>
                <style>
                    body {{ background: white; font-family: serif; padding: 20px; }}
                    .error {{ background: #f8f9fa; padding: 20px; border-radius: 10px; text-align: center; }}
                </style>
            </head>
            <body>
                <div class="error">
                    <h1>üìñ –ö–Ω–∏–≥–∞</h1>
                    <p>–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–Ω–∏–≥–∏: {e}</p>
                    <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ</p>
                </div>
            </body>
            </html>
            """
            out = Path("data") / run_id
            out.mkdir(parents=True, exist_ok=True)
            
            html_file = out / "book.html"
            html_file.write_text(basic_html, encoding="utf-8")
            
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –±–∞–∑–æ–≤–∞—è HTML –≤–µ—Ä—Å–∏—è: {out / 'book.html'}")
            
        except Exception as final_error:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {final_error}")

def apply_dream_pastel_effect(img: Image.Image) -> Image.Image:
    """–ü—Ä–∏–º–µ–Ω—è–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç Dream-Pastel –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–∞–ª–∏–¥–Ω–æ–µ
        if img is None or img.size[0] == 0 or img.size[1] == 0:
            print("‚ùå –ù–µ–¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏")
            return img
            
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ RGB –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if img.mode != 'RGB':
            img = img.convert('RGB')
        
        # –õ—ë–≥–∫–æ–µ —Ä–∞–∑–º—ã—Ç–∏–µ
        img = img.filter(ImageFilter.GaussianBlur(1.2))
        
        # –¶–≤–µ—Ç–æ–≤–∞—è –∫–æ—Ä—Ä–µ–∫—Ü–∏—è –≤ —Ç–µ–ø–ª—ã–µ —Ç–æ–Ω–∞
        enhancer = ImageEnhance.Color(img)
        img = enhancer.enhance(1.15)
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ–ø–ª—ã–π overlay
        overlay = Image.new('RGBA', img.size, (255, 220, 210, 25))  # peach #ffdcd2
        img = img.convert('RGBA')
        img = Image.alpha_composite(img, overlay)
        
        # –î–æ–±–∞–≤–ª—è–µ–º grain (–±–µ–∑–æ–ø–∞—Å–Ω–æ)
        try:
            noise = np.random.randint(0, 15, (img.size[1], img.size[0], 3), dtype=np.uint8)
            noise_img = Image.fromarray(noise, 'RGB').convert('RGBA')
            noise_overlay = Image.new('RGBA', img.size, (0, 0, 0, 0))
            noise_overlay.paste(noise_img, (0, 0))
            img = Image.alpha_composite(img, noise_overlay)
        except Exception as noise_error:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —à—É–º–∞: {noise_error}")
        
        # –õ–µ–≥–∫–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ —è—Ä–∫–æ—Å—Ç–∏
        enhancer = ImageEnhance.Brightness(img)
        img = enhancer.enhance(1.05)
        
        return img.convert('RGB')
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ Dream-Pastel —ç—Ñ—Ñ–µ–∫—Ç–∞: {e}")
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
        try:
            return img.convert('RGB') if img.mode != 'RGB' else img
        except:
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ-–∑–∞–≥–ª—É—à–∫—É
            placeholder = Image.new('RGB', (400, 300), (240, 240, 240))
            return placeholder

def create_collage_spread(img1: Image.Image, img2: Image.Image, caption: str) -> str:
    """–°–æ–∑–¥–∞–µ—Ç –∫–æ–ª–ª–∞–∂-—Ä–∞–∑–≤–æ—Ä–æ—Ç –∏–∑ –¥–≤—É—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        if img1 is None or img2 is None:
            print("‚ùå –û–¥–Ω–æ –∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –∫–æ–ª–ª–∞–∂–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            return ""
            
        if img1.size[0] == 0 or img1.size[1] == 0 or img2.size[0] == 0 or img2.size[1] == 0:
            print("‚ùå –ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π —Ä–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –∫–æ–ª–ª–∞–∂–∞")
            return ""
        
        # –°–æ–∑–¥–∞–µ–º —Ö–æ–ª—Å—Ç –¥–ª—è –∫–æ–ª–ª–∞–∂–∞
        canvas_width = 1200
        canvas_height = 800
        canvas = Image.new('RGB', (canvas_width, canvas_height), (255, 250, 245))
        
        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        img1_size = (500, 350)
        img2_size = (500, 350)
        
        # –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞
        try:
            img1 = img1.resize(img1_size, Image.Resampling.LANCZOS)
            img2 = img2.resize(img2_size, Image.Resampling.LANCZOS)
        except Exception as resize_error:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞: {resize_error}")
            return ""
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º dream-pastel —ç—Ñ—Ñ–µ–∫—Ç
        img1 = apply_dream_pastel_effect(img1)
        img2 = apply_dream_pastel_effect(img2)
        
        # –†–∞–∑–º–µ—â–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –Ω–µ–±–æ–ª—å—à–∏–º –ø–æ–≤–æ—Ä–æ—Ç–æ–º
        try:
            img1_rotated = img1.rotate(-2, expand=True, fillcolor=(255, 250, 245))
            img2_rotated = img2.rotate(3, expand=True, fillcolor=(255, 250, 245))
            
            # –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –Ω–∞ —Ö–æ–ª—Å—Ç–µ
            pos1 = (50, 150)
            pos2 = (650, 200)
            
            canvas.paste(img1_rotated, pos1)
            canvas.paste(img2_rotated, pos2)
        except Exception as rotation_error:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–≤–æ—Ä–æ—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {rotation_error}")
            # –†–∞–∑–º–µ—â–∞–µ–º –±–µ–∑ –ø–æ–≤–æ—Ä–æ—Ç–∞
            canvas.paste(img1, (50, 150))
            canvas.paste(img2, (650, 200))
        
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å—å –ø–æ—Å–µ—Ä–µ–¥–∏–Ω–µ
        try:
            draw = ImageDraw.Draw(canvas)
            try:
                font = ImageFont.truetype("/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf", 24)
            except:
                font = ImageFont.load_default()
            
            # –¢–µ–∫—Å—Ç —Å —Ç–µ–Ω—å—é
            text_x = canvas_width // 2
            text_y = canvas_height - 100
            
            # –û–±—Ä–µ–∑–∞–µ–º —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π caption
            if len(caption) > 50:
                caption = caption[:47] + "..."
            
            # –¢–µ–Ω—å
            draw.text((text_x + 2, text_y + 2), caption, font=font, fill=(0, 0, 0, 100), anchor="mm")
            # –û—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–∫—Å—Ç
            draw.text((text_x, text_y), caption, font=font, fill=(80, 60, 40), anchor="mm")
        except Exception as text_error:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —Ç–µ–∫—Å—Ç–∞: {text_error}")
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ base64
        buffer = BytesIO()
        canvas.save(buffer, format='JPEG', quality=92)
        img_str = base64.b64encode(buffer.getvalue()).decode()
        return f"data:image/jpeg;base64,{img_str}"
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–ª–ª–∞–∂–∞: {e}")
        return ""

def generate_zine_content(analysis: dict, images: list[Path]) -> dict:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ—Ä–æ—Ç–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –º–æ–∑–∞–∏—á–Ω–æ–≥–æ –∑–∏–Ω–∞"""
    
    # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    username = analysis.get('username', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π')
    followers = analysis.get('followers', 0)
    bio = analysis.get('bio', '')
    
    # –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    real_captions = analysis.get('captions', ['–ë–µ–∑ —Å–ª–æ–≤'])[:3]
    locations = analysis.get('locations', ['–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –º–µ—Å—Ç–æ'])[:2]
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ (–º–∞–∫—Å–∏–º—É–º 15 —Ñ–æ—Ç–æ)
    photo_cards = []
    valid_images = []
    context = f"Instagram –ø—Ä–æ—Ñ–∏–ª—å @{username}, {followers} –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤, –±–∏–æ: {bio}"
    
    for i, img_path in enumerate(images[:15]):  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–æ 15 —Ñ–æ—Ç–æ –¥–ª—è –∑–∏–Ω–∞
        if img_path.exists():
            try:
                # –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤
                card_types = ["micro", "trigger", "sms"]
                card_type = card_types[i % 3]
                
                # –ó–∞–º–µ–Ω—è–µ–º —É–¥–∞–ª–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞ –ø—Ä—è–º–æ–π –≤—ã–∑–æ–≤
                focus_mapping = {
                    "micro": "first_impression",
                    "trigger": "story_creation", 
                    "sms": "hidden_emotions"
                }
                focus = focus_mapping.get(card_type, "first_impression")
                card_content = analyze_photo_for_memoir(img_path, context, focus)
                
                photo_cards.append({
                    'type': card_type,
                    'content': card_content,
                    'path': img_path
                })
                valid_images.append(img_path)
                
                print(f"üì∏ –ö–∞—Ä—Ç–æ—á–∫–∞ {i+1}/15 ({card_type}): {card_content[:40]}...")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ {img_path}: {e}")
    
    # –ï—Å–ª–∏ —Ñ–æ—Ç–æ –º–µ–Ω—å—à–µ 3, —Å–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∑–∏–Ω
    if len(valid_images) < 3:
        print(f"‚ö†Ô∏è –ú–∞–ª–æ —Ñ–æ—Ç–æ –¥–ª—è –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–≥–æ –∑–∏–Ω–∞: {len(valid_images)}")
    
    print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {len(valid_images)} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∏–∑ {len(images)} –¥–æ—Å—Ç—É–ø–Ω—ã—Ö")
    
    scene_data = {
        'username': username,
        'followers': followers,
        'bio': bio,
        'captions': real_captions,
        'locations': locations,
        'photo_cards': photo_cards
    }
    
    content = {}
    
    # –ó–∞–º–µ–Ω—è–µ–º —É–¥–∞–ª–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞ –ø—Ä—è–º—ã–µ –≤—ã–∑–æ–≤—ã memoir —Ñ—É–Ω–∫—Ü–∏–π
    scene_mapping = {
        "hook": "meeting",
        "conflict": "social_analysis",
        "turn": "between_lines",
        "climax": "story_creation",
        "epilogue": "farewell_portrait"
    }
    
    try:
        # 1. –ó–ê–í–Ø–ó–ö–ê - –¥–Ω–µ–≤–Ω–∏–∫–æ–≤–∞—è –∑–∞–ø–∏—Å—å (–º–∞–∫—Å–∏–º—É–º 3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
        hook = generate_memoir_chapter(scene_mapping["hook"], scene_data)
        content['prologue'] = strip_cliches(hook)
        print(f"‚úÖ –ó–∞–≤—è–∑–∫–∞: {hook[:50]}...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≤—è–∑–∫–∏: {e}")
        content['prologue'] = f"–ù–∞—Ç–∫–Ω—É–ª—Å—è –Ω–∞ @{username} —Å–ª—É—á–∞–π–Ω–æ. –ß—Ç–æ-—Ç–æ –∑–∞—Ü–µ–ø–∏–ª–æ."
    
    try:
        # 2. –ö–û–ù–§–õ–ò–ö–¢ - SMS-—Å—Ç–∏–ª—å (–º–∞–∫—Å–∏–º—É–º 4 —Å—Ç—Ä–æ–∫–∏)
        conflict = generate_memoir_chapter(scene_mapping["conflict"], scene_data)
        content['emotions'] = strip_cliches(conflict)
        print(f"‚úÖ –ö–æ–Ω—Ñ–ª–∏–∫—Ç: {conflict[:50]}...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞: {e}")
        content['emotions'] = f"‚Äî {real_captions[0] if real_captions else '–í—Å–µ —Ö–æ—Ä–æ—à–æ'}\n‚Äî –ù–æ –≥–ª–∞–∑–∞ –≥–æ–≤–æ—Ä—è—Ç –¥—Ä—É–≥–æ–µ."
    
    try:
        # 3. –ü–û–í–û–†–û–¢ - –º–æ–º–µ–Ω—Ç –æ–∑–∞—Ä–µ–Ω–∏—è (–º–∞–∫—Å–∏–º—É–º 3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
        turn = generate_memoir_chapter(scene_mapping["turn"], scene_data)
        content['places'] = strip_cliches(turn)
        print(f"‚úÖ –ü–æ–≤–æ—Ä–æ—Ç: {turn[:50]}...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–≤–æ—Ä–æ—Ç–∞: {e}")
        content['places'] = f"–û–¥–∏–Ω –∫–∞–¥—Ä –∏–∑ {locations[0] if locations else '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ –º–µ—Å—Ç–∞'} –∏–∑–º–µ–Ω–∏–ª –≤—Å–µ. –ó–¥–µ—Å—å –ø–∞—Ö–ª–æ —á–µ—Å—Ç–Ω–æ—Å—Ç—å—é."
    
    try:
        # 4. –ö–£–õ–¨–ú–ò–ù–ê–¶–ò–Ø - —Ü–∏—Ç–∞—Ç—ã –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
        climax = generate_memoir_chapter(scene_mapping["climax"], scene_data)
        content['community'] = strip_cliches(climax)
        print(f"‚úÖ –ö—É–ª—å–º–∏–Ω–∞—Ü–∏—è: {climax[:50]}...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫—É–ª—å–º–∏–Ω–∞—Ü–∏–∏: {e}")
        content['community'] = f"{followers} —á–µ–ª–æ–≤–µ–∫ –æ—Ç—Ä–µ–∞–≥–∏—Ä–æ–≤–∞–ª–∏:\n‚Äî –ù–∞–∫–æ–Ω–µ—Ü-—Ç–æ —Ç—ã –ø–æ–∫–∞–∑–∞–ª —Å–µ–±—è –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ\n‚Äî –°–ø–∞—Å–∏–±–æ –∑–∞ —á–µ—Å—Ç–Ω–æ—Å—Ç—å"
    
    try:
        # 5. –≠–ü–ò–õ–û–ì - –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ (–º–∞–∫—Å–∏–º—É–º 2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
        epilogue = generate_memoir_chapter(scene_mapping["epilogue"], scene_data)
        content['legacy'] = strip_cliches(epilogue)
        print(f"‚úÖ –≠–ø–∏–ª–æ–≥: {epilogue[:50]}...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —ç–ø–∏–ª–æ–≥–∞: {e}")
        content['legacy'] = "–õ–∏—Å—Ç–∞—é –ª–µ–Ω—Ç—É –≤ –ø–æ–∏—Å–∫–µ –Ω–æ–≤–æ–≥–æ –¥–∏–∫–æ–≥–æ —Ü–≤–µ—Ç–∫–∞. –ê –≤–¥—Ä—É–≥ —ç—Ç–æ –±—É–¥–µ—à—å —Ç—ã?"
    
    # –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
    content['title'] = f"–ó–∏–Ω @{username}"
    content['photo_cards'] = photo_cards
    content['valid_images_count'] = len(valid_images)
    content['reading_time'] = "5 –º–∏–Ω—É—Ç"
    
    return content

def create_literary_instagram_book_html(content: dict, analysis: dict, images: list[Path]) -> str:
    """–°–æ–∑–¥–∞–µ—Ç HTML —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫—É—é –∫–Ω–∏–≥—É-–º–µ–º—É–∞—Ä –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞ –≤ —Å—Ç–∏–ª–µ –ª–∏—á–Ω–æ–≥–æ –¥–Ω–µ–≤–Ω–∏–∫–∞"""
    
    # –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    username = analysis.get('username', '–Ω–µ–∑–Ω–∞–∫–æ–º–µ—Ü')
    full_name = analysis.get('full_name', username)
    followers = analysis.get('followers', 0)
    following = analysis.get('following', 0)
    posts_count = analysis.get('posts_count', 0)
    bio = analysis.get('bio', '')
    
    # –†–µ–∞–ª—å–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∏ –∏ –¥–∞–Ω–Ω—ã–µ
    real_captions = analysis.get('captions', [])[:6]
    common_hashtags = analysis.get('common_hashtags', [])[:5]
    locations = analysis.get('locations', [])[:3]
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–º–∞–∫—Å–∏–º—É–º 6 –¥–ª—è –∫–∞–∂–¥–æ–π –≥–ª–∞–≤—ã)
    processed_images = []
    for i, img_path in enumerate(images[:6]):
        if img_path.exists():
            try:
                with Image.open(img_path) as img:
                    if img.mode != 'RGB':
                        img = img.convert('RGB')
                    
                    # –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –¥–ª—è —á—Ç–µ–Ω–∏—è
                    max_size = (700, 500)
                    img.thumbnail(max_size, Image.Resampling.LANCZOS)
                    
                    # –ú—è–≥–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å—Ç–∏–ª—è
                    enhancer = ImageEnhance.Contrast(img)
                    img = enhancer.enhance(1.05)
                    enhancer = ImageEnhance.Color(img)
                    img = enhancer.enhance(1.1)
                    
                    buffer = BytesIO()
                    img.save(buffer, format='JPEG', quality=90)
                    img_str = base64.b64encode(buffer.getvalue()).decode()
                    processed_images.append(f"data:image/jpeg;base64,{img_str}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è {img_path}: {e}")
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –≥–ª–∞–≤—ã –º–µ–º—É–∞—Ä–æ–≤
    memoir_data = {
        'username': username,
        'followers': followers,
        'following': following,
        'posts_count': posts_count,
        'bio': bio,
        'captions': real_captions,
        'locations': locations,
        'common_hashtags': common_hashtags
    }
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤—Å–µ 6 –≥–ª–∞–≤ –º–µ–º—É–∞—Ä–æ–≤
    chapters = {}
    
    # –ì–ª–∞–≤–∞ 1: –í—Å—Ç—Ä–µ—á–∞
    try:
        chapters['meeting'] = generate_memoir_chapter("meeting", memoir_data)
        print("‚úÖ –ì–ª–∞–≤–∞ 1 '–í—Å—Ç—Ä–µ—á–∞' —Å–æ–∑–¥–∞–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–ª–∞–≤—ã '–í—Å—Ç—Ä–µ—á–∞': {e}")
        chapters['meeting'] = f"–ü–æ–∑–¥–Ω–∏–º –≤–µ—á–µ—Ä–æ–º —è –ª–∏—Å—Ç–∞–ª –ª–µ–Ω—Ç—É Instagram –∏ –Ω–∞—Ç–∫–Ω—É–ª—Å—è –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å @{username}. –í —Å–≤–µ—Ç–µ —ç–∫—Ä–∞–Ω–∞ –µ–≥–æ –ª–∏—Ü–æ –∫–∞–∑–∞–ª–æ—Å—å –≤—ã—Ä–µ–∑–∞–Ω–Ω—ã–º –∏–∑ —Å—Ç–∞—Ä–∏–Ω–Ω–æ–π –∫–∏–Ω–æ–ø–ª—ë–Ω–∫–∏ ‚Äî –∑–∞–≥–∞–¥–æ—á–Ω—ã–º –∏ –ø—Ä–∏—Ç—è–≥–∞—Ç–µ–ª—å–Ω—ã–º. '–ß—Ç–æ-—Ç–æ –∑–¥–µ—Å—å –Ω–µ —Ç–∞–∫,' ‚Äî –ø–æ–¥—É–º–∞–ª —è, —á—É–≤—Å—Ç–≤—É—è –∑–∞–ø–∞—Ö –æ—Å—Ç—ã–≤—à–µ–≥–æ –∫–æ—Ñ–µ –Ω–∞ —Å—Ç–æ–ª–µ. –ó–∞ –æ–∫–Ω–æ–º —à—É–º–µ–ª –Ω–æ—á–Ω–æ–π –≥–æ—Ä–æ–¥, –Ω–æ –≤–Ω–∏–º–∞–Ω–∏–µ –ø–æ–≥–ª–æ—Ç–∏–ª —ç—Ç–æ—Ç –Ω–µ–∑–Ω–∞–∫–æ–º—ã–π –º–∏—Ä –≤ –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–º –∫–∞–¥—Ä–µ."
    
    # –ì–ª–∞–≤–∞ 2: –ü–µ—Ä–≤–æ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ (—Å –∞–Ω–∞–ª–∏–∑–æ–º —Ñ–æ—Ç–æ)
    try:
        photo_analysis = ""
        if processed_images:
            photo_analysis = analyze_photo_for_memoir(images[0], f"@{username}", "first_impression")
        chapters['first_impression'] = generate_memoir_chapter("first_impression", memoir_data, photo_analysis)
        print("‚úÖ –ì–ª–∞–≤–∞ 2 '–ü–µ—Ä–≤–æ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ' —Å–æ–∑–¥–∞–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–ª–∞–≤—ã '–ü–µ—Ä–≤–æ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ': {e}")
        caption = real_captions[0] if real_captions else "–ú–æ–º–µ–Ω—Ç –∂–∏–∑–Ω–∏"
        chapters['first_impression'] = f"–ü–µ—Ä–≤–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ø–æ—Ä–∞–∑–∏–ª–∞ –º–µ–Ω—è –∏–≥—Ä–æ–π —Å–≤–µ—Ç–∞ –∏ —Ç–µ–Ω–∏. '{caption}' ‚Äî –±—ã–ª–æ –Ω–∞–ø–∏—Å–∞–Ω–æ –ø–æ–¥ —Å–Ω–∏–º–∫–æ–º, –∏ —ç—Ç–∏ —Å–ª–æ–≤–∞ –∑–∞–∑–≤—É—á–∞–ª–∏ –≤ –º–æ–µ–π –≥–æ–ª–æ–≤–µ, –∫–∞–∫ –º–µ–ª–æ–¥–∏—è. –Ø –º–æ–≥ –ø–æ—á—Ç–∏ —É—Å–ª—ã—à–∞—Ç—å —à–µ–ª–µ—Å—Ç –ª–∏—Å—Ç—å–µ–≤, –∫–æ—Ç–æ—Ä—ã–π, –∫–∞–∑–∞–ª–æ—Å—å, —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞–ª —ç—Ç–æ—Ç –∫–∞–¥—Ä. '–ö—Ç–æ —ç—Ç–æ—Ç —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π —É–º–µ–µ—Ç —Ç–∞–∫ –ª–æ–≤–∏—Ç—å –∫—Ä–∞—Å–æ—Ç—É?' ‚Äî –¥—É–º–∞–ª —è, —Ä–∞–∑–≥–ª—è–¥—ã–≤–∞—è –∫–∞–∂–¥—É—é –¥–µ—Ç–∞–ª—å. –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ø–∞—Ö–ª–∞ –¥–æ–∂–¥—ë–º –∏ —Å–≤–æ–±–æ–¥–æ–π."
    
    # –ì–ª–∞–≤–∞ 3: –ò—Å—Ç–æ—Ä–∏—è –æ–¥–Ω–æ–≥–æ –∫–∞–¥—Ä–∞
    try:
        chapters['story_creation'] = generate_memoir_chapter("story_creation", memoir_data)
        print("‚úÖ –ì–ª–∞–≤–∞ 3 '–ò—Å—Ç–æ—Ä–∏—è –æ–¥–Ω–æ–≥–æ –∫–∞–¥—Ä–∞' —Å–æ–∑–¥–∞–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–ª–∞–≤—ã '–ò—Å—Ç–æ—Ä–∏—è –æ–¥–Ω–æ–≥–æ –∫–∞–¥—Ä–∞': {e}")
        location = locations[0] if locations else "–∫–∞—Ñ–µ –Ω–∞ —Ç–∏—Ö–æ–π —É–ª–∏—Ü–µ"
        chapters['story_creation'] = f"–ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é, –∫–∞–∫ —Å–æ–∑–¥–∞–≤–∞–ª—Å—è –æ–¥–∏–Ω –∏–∑ —Å–Ω–∏–º–∫–æ–≤. {username} —à—ë–ª –ø–æ {location}, –∫–æ–≥–¥–∞ —Å–≤–µ—Ç —É–ø–∞–ª –∏–º–µ–Ω–Ω–æ —Ç–∞–∫, –∫–∞–∫ –Ω—É–∂–Ω–æ. –û–Ω –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è, –¥–æ—Å—Ç–∞–ª —Ç–µ–ª–µ—Ñ–æ–Ω ‚Äî –∏ –≤ —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç –≤—Ä–µ–º—è –∑–∞–º–µ—Ä–ª–æ. '–°–µ–π—á–∞—Å –∏–ª–∏ –Ω–∏–∫–æ–≥–¥–∞,' ‚Äî –ø—Ä–æ—à–µ–ø—Ç–∞–ª –æ–Ω, –Ω–∞–∂–∏–º–∞—è –Ω–∞ –∑–∞—Ç–≤–æ—Ä.\n\n–í –∫–∞–¥—Ä–µ –∑–∞–ø–µ—á–∞—Ç–ª–µ–ª—Å—è –Ω–µ –ø—Ä–æ—Å—Ç–æ –º–æ–º–µ–Ω—Ç, –∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥—É—à–∏. –ú–æ–∂–Ω–æ –±—ã–ª–æ –ø–æ—á—É–≤—Å—Ç–≤–æ–≤–∞—Ç—å –≤–∫—É—Å –≤–æ–∑–¥—É—Ö–∞, —É—Å–ª—ã—à–∞—Ç—å –¥–∞–ª—ë–∫—É—é –º—É–∑—ã–∫—É –∏–∑ –æ–∫–Ω–∞.\n\n–ü–æ–∑–∂–µ, –∑–∞–≥—Ä—É–∂–∞—è —Ñ–æ—Ç–æ, –æ–Ω –ø–æ–Ω–∏–º–∞–ª: —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ –∫–∞—Ä—Ç–∏–Ω–∫–∞. –≠—Ç–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –¥—Ä—É–≥–∏–º —É–≤–∏–¥–µ—Ç—å –º–∏—Ä –µ–≥–æ –≥–ª–∞–∑–∞–º–∏."
    
    # –ì–ª–∞–≤–∞ 4: –°–æ—Ü–∏–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑
    try:
        chapters['social_analysis'] = generate_memoir_chapter("social_analysis", memoir_data)
        print("‚úÖ –ì–ª–∞–≤–∞ 4 '–°–æ—Ü–∏–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑' —Å–æ–∑–¥–∞–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–ª–∞–≤—ã '–°–æ—Ü–∏–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑': {e}")
        chapters['social_analysis'] = f"{followers} –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ ‚Äî –Ω–µ —Ç–æ–ª–ø–∞, –∞ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤. –í –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö —è —á–∏—Ç–∞–ª: '–ù–∞–∫–æ–Ω–µ—Ü-—Ç–æ —á—Ç–æ-—Ç–æ –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤ —ç—Ç–æ–º –º–æ—Ä–µ —Ñ–∞–ª—å—à–∏.' –≠—Ç–∏ –ª—é–¥–∏ –∏—Å–∫–∞–ª–∏ –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç—å, –∫–∞–∫ —è —Å–µ–π—á–∞—Å. '–ú—ã –≤—Å–µ —É—Å—Ç–∞–ª–∏ –æ—Ç –∏–¥–µ–∞–ª—å–Ω–æ—Å—Ç–∏,' ‚Äî –ø–æ–Ω—è–ª —è, –ø—Ä–æ–∫—Ä—É—á–∏–≤–∞—è –ª–µ–Ω—Ç—É. –í —Ü–∏—Ñ—Ä–æ–≤—É—é —ç–ø–æ—Ö—É –∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç—å —Å—Ç–∞–ª–∞ —Ä–æ—Å–∫–æ—à—å—é."
    
    # –ì–ª–∞–≤–∞ 5: –ú–µ–∂–¥—É —Å—Ç—Ä–æ–∫
    try:
        chapters['between_lines'] = generate_memoir_chapter("between_lines", memoir_data)
        print("‚úÖ –ì–ª–∞–≤–∞ 5 '–ú–µ–∂–¥—É —Å—Ç—Ä–æ–∫' —Å–æ–∑–¥–∞–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–ª–∞–≤—ã '–ú–µ–∂–¥—É —Å—Ç—Ä–æ–∫': {e}")
        chapters['between_lines'] = f"–ó–∞ –∏–¥–µ–∞–ª—å–Ω—ã–º–∏ –∫–∞–¥—Ä–∞–º–∏ @{username} —è —á—É–≤—Å—Ç–≤–æ–≤–∞–ª –Ω–∞—Å—Ç–æ—è—â—É—é –∂–∏–∑–Ω—å. –ù–µ —Ç—É, —á—Ç–æ –ø–∞—Ö–Ω–µ—Ç —Å—Ç—É–¥–∏–π–Ω—ã–º —Å–≤–µ—Ç–æ–º, –∞ —Ç—É, —á—Ç–æ –ø–∞—Ö–Ω–µ—Ç —É—Ç—Ä–µ–Ω–Ω–∏–º –∫–æ—Ñ–µ –∏ –Ω–µ–¥–æ—Å–∫–∞–∑–∞–Ω–Ω–æ—Å—Ç—å—é. '–ß—Ç–æ –æ–Ω –ù–ï –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç?' ‚Äî —Å–ø—Ä–∞—à–∏–≤–∞–ª —è —Å–µ–±—è. –£—Å—Ç–∞–ª–æ—Å—Ç—å –≤ –≥–ª–∞–∑–∞—Ö, —Å–æ–º–Ω–µ–Ω–∏—è –≤ 3 —É—Ç—Ä–∞, —Ä–∞–¥–æ—Å—Ç—å –æ—Ç –ø—Ä–æ—Å—Ç—ã—Ö –≤–µ—â–µ–π. –ú—ã –Ω–æ—Å–∏–º –º–∞—Å–∫–∏ –¥–∞–∂–µ –≤ Instagram, –Ω–æ —É –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –º–∞—Å–∫–∏ –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–µ. –°–∫–≤–æ–∑—å —Ñ–∏–ª—å—Ç—Ä—ã –ø—Ä–æ–±–∏–≤–∞–µ—Ç—Å—è –¥—É—à–∞ ‚Äî –∏ —ç—Ç–æ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ."
    
    # –ì–ª–∞–≤–∞ 6: –ü—Ä–æ—â–∞–ª—å–Ω—ã–π –ø–æ—Ä—Ç—Ä–µ—Ç
    try:
        chapters['farewell_portrait'] = generate_memoir_chapter("farewell_portrait", memoir_data)
        print("‚úÖ –ì–ª–∞–≤–∞ 6 '–ü—Ä–æ—â–∞–ª—å–Ω—ã–π –ø–æ—Ä—Ç—Ä–µ—Ç' —Å–æ–∑–¥–∞–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≥–ª–∞–≤—ã '–ü—Ä–æ—â–∞–ª—å–Ω—ã–π –ø–æ—Ä—Ç—Ä–µ—Ç': {e}")
        chapters['farewell_portrait'] = f"–ò–∑—É—á–∏–≤ –ø—Ä–æ—Ñ–∏–ª—å @{username}, —è –ø–æ–Ω—è–ª ‚Äî –∫—Ä–∞—Å–æ—Ç–∞ –∂–∏–≤—ë—Ç –≤ –¥–µ—Ç–∞–ª—è—Ö, –∫–æ—Ç–æ—Ä—ã–µ –º—ã –æ–±—ã—á–Ω–æ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º. –ñ–µ–ª–∞—é —Ç–µ–±–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —ç—Ç–æ—Ç —Ä–µ–¥–∫–∏–π –¥–∞—Ä –≤–∏–¥–µ—Ç—å –Ω–µ–æ–±—ã—á–Ω–æ–µ –≤ –æ–±—ã—á–Ω–æ–º. –°–ø–∞—Å–∏–±–æ –∑–∞ —É—Ä–æ–∫ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∫ –º–∏—Ä—É. –ù–∞—à–∏ –ø—É—Ç–∏ –ø–µ—Ä–µ—Å–µ–∫–ª–∏—Å—å –≤ —Ü–∏—Ñ—Ä–æ–≤–æ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ, –∫–∞–∫ –¥–≤–µ –∫–æ–º–µ—Ç—ã –≤ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ—Å—Ç–∏. –í —ç–ø–æ—Ö—É —Å–µ–ª—Ñ–∏ –∏ –ª–∞–π–∫–æ–≤ —Ç—ã –Ω–∞–ø–æ–º–Ω–∏–ª: –Ω–∞—Å—Ç–æ—è—â–µ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ ‚Äî —ç—Ç–æ —á–µ—Å—Ç–Ω–æ—Å—Ç—å."
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏
    book_titles = [
        f"–î–Ω–µ–≤–Ω–∏–∫ –æ @{username}",
        f"–ú–µ–º—É–∞—Ä—ã –Ω–µ–∑–Ω–∞–∫–æ–º—Ü–∞",
        f"–í—Å—Ç—Ä–µ—á–∞ –≤ Instagram",
        f"–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ –∑–∞–º–µ—Ç–∫–∏ –æ {username}",
        f"–ò—Å—Ç–æ—Ä–∏—è –æ–¥–Ω–æ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è"
    ]
    book_title = random.choice(book_titles)
    
    # HTML –≤ —Å—Ç–∏–ª–µ —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏—Ö –º–µ–º—É–∞—Ä–æ–≤
    html = f"""<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{book_title}</title>
    <link href="https://fonts.googleapis.com/css2?family=Crimson+Text:ital,wght@0,400;0,600;1,400;1,600&family=Playfair+Display:ital,wght@0,400;0,700;1,400;1,700&family=Libre+Baskerville:ital,wght@0,400;0,700;1,400&display=swap" rel="stylesheet">
    
    <style>
    :root {{
        --paper: #fefcf8;
        --ink: #2c2a26;
        --soft-ink: #5a5652;
        --accent: #b85450;
        --gold: #d4af8c;
        --shadow: rgba(60, 50, 40, 0.15);
        --warm-cream: #f9f7f4;
    }}
    
    body {{
        font-family: 'Crimson Text', serif;
        background: var(--paper);
        color: var(--ink);
        line-height: 1.8;
        font-size: 17px;
        margin: 0;
        padding: 0;
        max-width: 900px;
        margin: 0 auto;
    }}
    
    .memoir-page {{
        min-height: 95vh;
        padding: 3cm 3cm 4cm 3cm;
        background: white;
        box-shadow: 0 8px 40px var(--shadow);
        margin: 20px auto;
        page-break-after: always;
        position: relative;
        border-left: 5px solid var(--gold);
    }}
    
    .memoir-page:last-child {{
        page-break-after: auto;
    }}
    
    /* –û–±–ª–æ–∂–∫–∞ –º–µ–º—É–∞—Ä–æ–≤ */
    .cover-memoir {{
        text-align: center;
        padding: 5cm 2cm;
        background: linear-gradient(135deg, var(--paper) 0%, var(--warm-cream) 100%);
        border: 2px solid var(--gold);
        border-left: 8px solid var(--accent);
    }}
    
    .cover-title {{
        font-family: 'Playfair Display', serif;
        font-size: 3.5rem;
        font-weight: 700;
        color: var(--ink);
        margin-bottom: 1.5rem;
        letter-spacing: -1px;
        line-height: 1.2;
    }}
    
    .cover-subtitle {{
        font-family: 'Libre Baskerville', serif;
        font-style: italic;
        font-size: 1.4rem;
        color: var(--soft-ink);
        margin-bottom: 3rem;
    }}
    
    .cover-epigraph {{
        font-style: italic;
        color: var(--soft-ink);
        border-top: 2px solid var(--gold);
        border-bottom: 2px solid var(--gold);
        padding: 2.5rem 1rem;
        max-width: 500px;
        margin: 0 auto 3rem auto;
        position: relative;
        font-size: 1.2rem;
    }}
    
    .cover-epigraph::before {{
        content: '¬´';
        position: absolute;
        left: -25px;
        top: 2rem;
        font-size: 3rem;
        color: var(--accent);
        font-family: 'Playfair Display', serif;
    }}
    
    .cover-epigraph::after {{
        content: '¬ª';
        position: absolute;
        right: -25px;
        bottom: 2rem;
        font-size: 3rem;
        color: var(--accent);
        font-family: 'Playfair Display', serif;
    }}
    
    .memoir-author {{
        font-size: 1.2rem;
        color: var(--soft-ink);
        margin-top: 2rem;
    }}
    
    /* –ó–∞–≥–æ–ª–æ–≤–∫–∏ –≥–ª–∞–≤ */
    .chapter-header {{
        margin-bottom: 3rem;
        padding-bottom: 1rem;
        border-bottom: 2px solid var(--gold);
    }}
    
    .chapter-number {{
        font-family: 'Libre Baskerville', serif;
        font-size: 1rem;
        color: var(--soft-ink);
        text-transform: uppercase;
        letter-spacing: 3px;
        margin-bottom: 0.5rem;
    }}
    
    .chapter-title {{
        font-family: 'Playfair Display', serif;
        font-size: 2.5rem;
        font-weight: 700;
        color: var(--accent);
        margin: 0;
        font-style: italic;
    }}
    
    /* –ü–∞—Ä–∞–≥—Ä–∞—Ñ—ã –º–µ–º—É–∞—Ä–æ–≤ */
    .memoir-paragraph {{
        text-align: justify;
        text-indent: 2.5rem;
        margin-bottom: 2.5rem;
        line-height: 1.9;
        font-size: 1.1rem;
    }}
    
    .memoir-paragraph.first {{
        text-indent: 0;
        font-weight: 500;
        font-size: 1.2rem;
    }}
    
    .memoir-text {{
        white-space: pre-line;
        text-align: justify;
        line-height: 1.9;
        font-size: 1.1rem;
    }}
    
    /* –¶–∏—Ç–∞—Ç—ã –∏ –¥–∏–∞–ª–æ–≥–∏ */
    .quote {{
        font-style: italic;
        color: var(--accent);
        text-indent: 0;
        margin: 2rem 0;
        padding: 1.5rem 2rem;
        background: var(--warm-cream);
        border-left: 4px solid var(--accent);
        border-radius: 8px;
        position: relative;
    }}
    
    .quote::before {{
        content: '"';
        position: absolute;
        left: 0.5rem;
        top: 0.8rem;
        font-size: 2rem;
        color: var(--accent);
        font-family: 'Playfair Display', serif;
    }}
    
    .inner-voice {{
        font-style: italic;
        color: var(--soft-ink);
        text-align: center;
        margin: 2rem 0;
        padding: 1rem;
        background: #f7f5f0;
        border-radius: 12px;
        text-indent: 0;
        border: 1px dashed var(--gold);
    }}
    
    /* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –º–µ–º—É–∞—Ä–∞—Ö */
    .memoir-photo {{
        margin: 3rem 0;
        text-align: center;
        page-break-inside: avoid;
    }}
    
    .photo-frame {{
        display: inline-block;
        padding: 20px;
        background: var(--warm-cream);
        border-radius: 15px;
        box-shadow: 0 8px 30px var(--shadow);
        border: 2px solid var(--gold);
        transform: rotate(-1deg);
        transition: transform 0.3s ease;
    }}
    
    .photo-frame:nth-child(even) {{
        transform: rotate(1deg);
    }}
    
    .photo-frame img {{
        max-width: 100%;
        max-height: 400px;
        border-radius: 8px;
        border: 3px solid white;
    }}
    
    .photo-caption {{
        font-family: 'Libre Baskerville', serif;
        font-style: italic;
        font-size: 1rem;
        color: var(--soft-ink);
        margin-top: 1.5rem;
        text-align: center;
        max-width: 500px;
        margin-left: auto;
        margin-right: auto;
    }}
    
    .photo-caption::before {{
        content: '‚Äì ';
        color: var(--accent);
        font-weight: bold;
    }}
    
    /* –§–∏–Ω–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ */
    .memoir-finale {{
        text-align: center;
        margin-top: 4rem;
        padding: 3rem 2rem;
        background: var(--warm-cream);
        border-radius: 15px;
        border: 2px solid var(--gold);
    }}
    
    .memoir-signature {{
        font-family: 'Playfair Display', serif;
        font-style: italic;
        font-size: 1.3rem;
        color: var(--accent);
        margin-top: 2rem;
    }}
    
    /* –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ */
    .memoir-meta {{
        margin-top: 3rem;
        padding-top: 2rem;
        border-top: 1px solid var(--gold);
        font-size: 0.9rem;
        color: var(--soft-ink);
        text-align: center;
        line-height: 1.6;
    }}
    
    /* –û–≥–ª–∞–≤–ª–µ–Ω–∏–µ */
    .table-of-contents {{
        margin: 3rem 0;
        padding: 2rem;
        background: var(--warm-cream);
        border-radius: 15px;
        border: 1px solid var(--gold);
    }}
    
    .toc-title {{
        font-family: 'Playfair Display', serif;
        font-size: 2rem;
        color: var(--accent);
        text-align: center;
        margin-bottom: 2rem;
    }}
    
    .toc-item {{
        margin-bottom: 1rem;
        padding: 0.5rem 0;
        border-bottom: 1px dotted var(--gold);
        display: flex;
        justify-content: space-between;
    }}
    
    .toc-chapter {{
        font-weight: 500;
        color: var(--ink);
    }}
    
    .toc-page {{
        color: var(--soft-ink);
        font-style: italic;
    }}
    
    @media (max-width: 768px) {{
        .memoir-page {{
            padding: 2cm 1.5cm;
            margin: 10px;
        }}
        
        .cover-title {{
            font-size: 2.5rem;
        }}
        
        .chapter-title {{
            font-size: 2rem;
        }}
    }}
    
    @media print {{
        body {{
            background: white;
            margin: 0;
        }}
        
        .memoir-page {{
            box-shadow: none;
            margin: 0;
            border: none;
        }}
        
        .photo-frame {{
            transform: none;
        }}
    }}
    </style>
</head>
<body>

<!-- –û–ë–õ–û–ñ–ö–ê –ú–ï–ú–£–ê–†–û–í -->
<div class="memoir-page cover-memoir">
    <h1 class="cover-title">{book_title}</h1>
    <p class="cover-subtitle">–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ –º–µ–º—É–∞—Ä—ã –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞</p>
    
    <div class="cover-epigraph">
        –ö–∞–∂–¥–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è ‚Äî –æ–∫–Ω–æ –≤ —á—å—é-—Ç–æ –¥—É—à—É,<br>
        –∞ –∫–∞–∂–¥—ã–π –ø—Ä–æ—Ñ–∏–ª—å ‚Äî –Ω–µ–æ–∫–æ–Ω—á–µ–Ω–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è,<br>
        –∂–¥—É—â–∞—è —Å–≤–æ–µ–≥–æ —á–∏—Ç–∞—Ç–µ–ª—è
    </div>
    
    <div class="memoir-author">
        <strong>–û –ø—Ä–æ—Ñ–∏–ª–µ:</strong> @{username}<br>
        <small>{full_name}</small><br>
        <small>{followers:,} –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ ‚Ä¢ {posts_count} –ø—É–±–ª–∏–∫–∞—Ü–∏–π</small>
    </div>
</div>

<!-- –û–ì–õ–ê–í–õ–ï–ù–ò–ï -->
<div class="memoir-page">
    <div class="table-of-contents">
        <h2 class="toc-title">–û–≥–ª–∞–≤–ª–µ–Ω–∏–µ</h2>
        
        <div class="toc-item">
            <span class="toc-chapter">–ì–ª–∞–≤–∞ I. –í—Å—Ç—Ä–µ—á–∞</span>
            <span class="toc-page">—Å—Ç—Ä. 3</span>
        </div>
        <div class="toc-item">
            <span class="toc-chapter">–ì–ª–∞–≤–∞ II. –ü–µ—Ä–≤–æ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ</span>
            <span class="toc-page">—Å—Ç—Ä. 4</span>
        </div>
        <div class="toc-item">
            <span class="toc-chapter">–ì–ª–∞–≤–∞ III. –ò—Å—Ç–æ—Ä–∏—è –æ–¥–Ω–æ–≥–æ –∫–∞–¥—Ä–∞</span>
            <span class="toc-page">—Å—Ç—Ä. 5</span>
        </div>
        <div class="toc-item">
            <span class="toc-chapter">–ì–ª–∞–≤–∞ IV. –£–≥–ª—É–±–ª—è—è—Å—å –≤ –¥–µ—Ç–∞–ª–∏</span>
            <span class="toc-page">—Å—Ç—Ä. 6</span>
        </div>
        <div class="toc-item">
            <span class="toc-chapter">–ì–ª–∞–≤–∞ V. –°–æ—Ü–∏–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑</span>
            <span class="toc-page">—Å—Ç—Ä. 7</span>
        </div>
        <div class="toc-item">
            <span class="toc-chapter">–ì–ª–∞–≤–∞ VI. –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø–æ—Ä—Ç—Ä–µ—Ç</span>
            <span class="toc-page">—Å—Ç—Ä. 8</span>
        </div>
        <div class="toc-item">
            <span class="toc-chapter">–ì–ª–∞–≤–∞ VII. –ì–µ–æ–≥—Ä–∞—Ñ–∏—è –¥—É—à–∏</span>
            <span class="toc-page">—Å—Ç—Ä. 9</span>
        </div>
        <div class="toc-item">
            <span class="toc-chapter">–ì–ª–∞–≤–∞ VIII. –ú–µ–∂–¥—É —Å—Ç—Ä–æ–∫</span>
            <span class="toc-page">—Å—Ç—Ä. 10</span>
        </div>
        <div class="toc-item">
            <span class="toc-chapter">–ì–ª–∞–≤–∞ IX. –ú—É–∑—ã–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π</span>
            <span class="toc-page">—Å—Ç—Ä. 11</span>
        </div>
        <div class="toc-item">
            <span class="toc-chapter">–ì–ª–∞–≤–∞ X. –û—Ç—Ä–∞–∂–µ–Ω–∏—è –∏ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è</span>
            <span class="toc-page">—Å—Ç—Ä. 12</span>
        </div>
        <div class="toc-item">
            <span class="toc-chapter">–ì–ª–∞–≤–∞ XI. –ü—Ä–æ—â–∞–ª—å–Ω—ã–π –ø–æ—Ä—Ç—Ä–µ—Ç</span>
            <span class="toc-page">—Å—Ç—Ä. 13</span>
        </div>
        <div class="toc-item">
            <span class="toc-chapter">–≠–ø–∏–ª–æ–≥. –ß—Ç–æ –æ—Å—Ç–∞–µ—Ç—Å—è</span>
            <span class="toc-page">—Å—Ç—Ä. 14</span>
        </div>
    </div>
</div>

<!-- –ì–õ–ê–í–ê 1: –í–°–¢–†–ï–ß–ê -->
<div class="memoir-page">
    <div class="chapter-header">
        <div class="chapter-number">–ì–ª–∞–≤–∞ –ø–µ—Ä–≤–∞—è</div>
        <h2 class="chapter-title">–í—Å—Ç—Ä–µ—á–∞</h2>
    </div>
    
    <div class="memoir-text">
        {chapters.get('meeting', '–ü–æ–∑–¥–Ω–∏–º –≤–µ—á–µ—Ä–æ–º —è –ª–∏—Å—Ç–∞–ª –ª–µ–Ω—Ç—É Instagram...')}
    </div>
</div>

<!-- –ì–õ–ê–í–ê 2: –ü–ï–†–í–û–ï –í–ü–ï–ß–ê–¢–õ–ï–ù–ò–ï -->
<div class="memoir-page">
    <div class="chapter-header">
        <div class="chapter-number">–ì–ª–∞–≤–∞ –≤—Ç–æ—Ä–∞—è</div>
        <h2 class="chapter-title">–ü–µ—Ä–≤–æ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ</h2>
    </div>
    
    {'<div class="memoir-photo"><div class="photo-frame"><img src="' + processed_images[0] + '" alt="–ü–µ—Ä–≤–æ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ"></div><div class="photo-caption">' + (real_captions[0] if real_captions else '–ü–µ—Ä–≤–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è, –∫–æ—Ç–æ—Ä–∞—è –∑–∞—Ü–µ–ø–∏–ª–∞ –º–µ–Ω—è') + '</div></div>' if processed_images else ''}
    
    <div class="memoir-text">
        {chapters.get('first_impression', '–ü–µ—Ä–≤–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ø–æ—Ä–∞–∑–∏–ª–∞ –º–µ–Ω—è –∏–≥—Ä–æ–π —Å–≤–µ—Ç–∞ –∏ —Ç–µ–Ω–∏...')}
    </div>
</div>

<!-- –ì–õ–ê–í–ê 3: –ò–°–¢–û–†–ò–Ø –û–î–ù–û–ì–û –ö–ê–î–†–ê -->
<div class="memoir-page">
    <div class="chapter-header">
        <div class="chapter-number">–ì–ª–∞–≤–∞ —Ç—Ä–µ—Ç—å—è</div>
        <h2 class="chapter-title">–ò—Å—Ç–æ—Ä–∏—è –æ–¥–Ω–æ–≥–æ –∫–∞–¥—Ä–∞</h2>
    </div>
    
    {'<div class="memoir-photo"><div class="photo-frame"><img src="' + processed_images[1] + '" alt="–ö–∞–¥—Ä —Å –∏—Å—Ç–æ—Ä–∏–µ–π"></div><div class="photo-caption">' + (real_captions[1] if len(real_captions) > 1 else '–ó–∞ –∫–∞–∂–¥—ã–º –∫–∞–¥—Ä–æ–º ‚Äî —Ü–µ–ª–∞—è –∂–∏–∑–Ω—å') + '</div></div>' if len(processed_images) > 1 else ''}
    
    <div class="memoir-text">
        {chapters.get('story_creation', '–ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é, –∫–∞–∫ —Å–æ–∑–¥–∞–≤–∞–ª—Å—è –æ–¥–∏–Ω –∏–∑ —Å–Ω–∏–º–∫–æ–≤...')}
    </div>
</div>

<!-- –ì–õ–ê–í–ê 4: –£–ì–õ–£–ë–õ–Ø–Ø–°–¨ –í –î–ï–¢–ê–õ–ò -->
<div class="memoir-page">
    <div class="chapter-header">
        <div class="chapter-number">–ì–ª–∞–≤–∞ —á–µ—Ç–≤—ë—Ä—Ç–∞—è</div>
        <h2 class="chapter-title">–£–≥–ª—É–±–ª—è—è—Å—å –≤ –¥–µ—Ç–∞–ª–∏</h2>
    </div>
    
    <div class="memoir-text">
        {chapters.get('deeper_details', '–ß–µ–º –¥–æ–ª—å—à–µ —è –∏–∑—É—á–∞–ª –ø—Ä–æ—Ñ–∏–ª—å, —Ç–µ–º –±–æ–ª—å—à–µ –∑–∞–º–µ—á–∞–ª –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–µ—Å—è –º–æ—Ç–∏–≤—ã...')}
    </div>
    
    {'<div class="memoir-photo"><div class="photo-frame"><img src="' + processed_images[2] + '" alt="–î–µ—Ç–∞–ª–∏ —Å—Ç–∏–ª—è"></div></div>' if len(processed_images) > 2 else ''}
</div>

<!-- –ì–õ–ê–í–ê 5: –°–û–¶–ò–ê–õ–¨–ù–´–ô –ê–ù–ê–õ–ò–ó -->
<div class="memoir-page">
    <div class="chapter-header">
        <div class="chapter-number">–ì–ª–∞–≤–∞ –ø—è—Ç–∞—è</div>
        <h2 class="chapter-title">–°–æ—Ü–∏–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑</h2>
    </div>
    
    <div class="memoir-text">
        {chapters.get('social_analysis', f'–ê—É–¥–∏—Ç–æ—Ä–∏—è @{username} ‚Äî —ç—Ç–æ –Ω–µ —Å–ª—É—á–∞–π–Ω–∞—è —Ç–æ–ª–ø–∞...')}
    </div>
    
    <div class="quote">
        –ù–∞–∫–æ–Ω–µ—Ü-—Ç–æ —á—Ç–æ-—Ç–æ –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤ —ç—Ç–æ–º –º–æ—Ä–µ —Ñ–∞–ª—å—à–∏
        <br><small>‚Äî –∏–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤</small>
    </div>
</div>

<!-- –ì–õ–ê–í–ê 6: –ü–°–ò–•–û–õ–û–ì–ò–ß–ï–°–ö–ò–ô –ü–û–†–¢–†–ï–¢ -->
<div class="memoir-page">
    <div class="chapter-header">
        <div class="chapter-number">–ì–ª–∞–≤–∞ —à–µ—Å—Ç–∞—è</div>
        <h2 class="chapter-title">–ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø–æ—Ä—Ç—Ä–µ—Ç</h2>
    </div>
    
    <div class="memoir-text">
        {chapters.get('psychological_portrait', '–í—ã–±–æ—Ä —Å—é–∂–µ—Ç–æ–≤ –º–Ω–æ–≥–æ–µ –≥–æ–≤–æ—Ä–∏–ª –æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–µ...')}
    </div>
    
    {'<div class="memoir-photo"><div class="photo-frame"><img src="' + processed_images[3] + '" alt="–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è –≤ –∫–∞–¥—Ä–µ"></div></div>' if len(processed_images) > 3 else ''}
</div>

<!-- –ì–õ–ê–í–ê 7: –ì–ï–û–ì–†–ê–§–ò–Ø –î–£–®–ò -->
<div class="memoir-page">
    <div class="chapter-header">
        <div class="chapter-number">–ì–ª–∞–≤–∞ —Å–µ–¥—å–º–∞—è</div>
        <h2 class="chapter-title">–ì–µ–æ–≥—Ä–∞—Ñ–∏—è –¥—É—à–∏</h2>
    </div>
    
    <div class="memoir-text">
        {chapters.get('geography_soul', '–ú–µ—Å—Ç–∞, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–±–∏—Ä–∞–ª –¥–ª—è —Å—ä—ë–º–æ–∫, —Å–∫–ª–∞–¥—ã–≤–∞–ª–∏—Å—å –≤ –∫–∞—Ä—Ç—É –µ–≥–æ –¥—É—à–∏...')}
    </div>
    
    {'<div class="memoir-photo"><div class="photo-frame"><img src="' + processed_images[4] + '" alt="–õ—é–±–∏–º—ã–µ –º–µ—Å—Ç–∞"></div></div>' if len(processed_images) > 4 else ''}
</div>

<!-- –ì–õ–ê–í–ê 8: –ú–ï–ñ–î–£ –°–¢–†–û–ö -->
<div class="memoir-page">
    <div class="chapter-header">
        <div class="chapter-number">–ì–ª–∞–≤–∞ –≤–æ—Å—å–º–∞—è</div>
        <h2 class="chapter-title">–ú–µ–∂–¥—É —Å—Ç—Ä–æ–∫</h2>
    </div>
    
    <div class="memoir-text">
        {chapters.get('between_lines', f'–ó–∞ –∏–¥–µ–∞–ª—å–Ω—ã–º–∏ –∫–∞–¥—Ä–∞–º–∏ @{username} —è —á—É–≤—Å—Ç–≤–æ–≤–∞–ª –Ω–∞—Å—Ç–æ—è—â—É—é –∂–∏–∑–Ω—å...')}
    </div>
    
    <div class="inner-voice">
        <em>–ú—ã –Ω–æ—Å–∏–º –º–∞—Å–∫–∏ –¥–∞–∂–µ –≤ Instagram, –Ω–æ —É –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –º–∞—Å–∫–∏ –ø—Ä–æ–∑—Ä–∞—á–Ω—ã–µ...</em>
    </div>
</div>

<!-- –ì–õ–ê–í–ê 9: –ú–£–ó–´–ö–ê –§–û–¢–û–ì–†–ê–§–ò–ô -->
<div class="memoir-page">
    <div class="chapter-header">
        <div class="chapter-number">–ì–ª–∞–≤–∞ –¥–µ–≤—è—Ç–∞—è</div>
        <h2 class="chapter-title">–ú—É–∑—ã–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π</h2>
    </div>
    
    <div class="memoir-text">
        {chapters.get('music_photography', '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∑–≤—É—á–∞–ª–∏. –ù–µ –º–µ—Ç–∞—Ñ–æ—Ä–∏—á–µ—Å–∫–∏, –∞ –±—É–∫–≤–∞–ª—å–Ω–æ...')}
    </div>
    
    {'<div class="memoir-photo"><div class="photo-frame"><img src="' + processed_images[5] + '" alt="–í–∏–∑—É–∞–ª—å–Ω–∞—è –º—É–∑—ã–∫–∞"></div></div>' if len(processed_images) > 5 else ''}
</div>

<!-- –ì–õ–ê–í–ê 10: –û–¢–†–ê–ñ–ï–ù–ò–Ø –ò –†–ê–ó–ú–´–®–õ–ï–ù–ò–Ø -->
<div class="memoir-page">
    <div class="chapter-header">
        <div class="chapter-number">–ì–ª–∞–≤–∞ –¥–µ—Å—è—Ç–∞—è</div>
        <h2 class="chapter-title">–û—Ç—Ä–∞–∂–µ–Ω–∏—è –∏ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è</h2>
    </div>
    
    <div class="memoir-text">
        {chapters.get('reflections_changes', '–ò–∑—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –∏–∑–º–µ–Ω–∏–ª–æ –º–µ–Ω—è...')}
    </div>
    
    <div class="inner-voice">
        <em>–¶–µ–ø–Ω–∞—è —Ä–µ–∞–∫—Ü–∏—è –∫—Ä–∞—Å–æ—Ç—ã ‚Äî –æ–¥–∏–Ω —á–µ–ª–æ–≤–µ–∫ –∑–∞–º–µ—á–∞–µ—Ç –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ, –¥–µ–ª–∏—Ç—Å—è –∏–º, –∏ —ç—Ç–æ –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç –¥—Ä—É–≥–∏—Ö...</em>
    </div>
</div>

<!-- –ì–õ–ê–í–ê 11: –ü–†–û–©–ê–õ–¨–ù–´–ô –ü–û–†–¢–†–ï–¢ -->
<div class="memoir-page">
    <div class="chapter-header">
        <div class="chapter-number">–ì–ª–∞–≤–∞ –æ–¥–∏–Ω–Ω–∞–¥—Ü–∞—Ç–∞—è</div>
        <h2 class="chapter-title">–ü—Ä–æ—â–∞–ª—å–Ω—ã–π –ø–æ—Ä—Ç—Ä–µ—Ç</h2>
    </div>
    
    <div class="memoir-text">
        {chapters.get('farewell_portrait', f'–ü–æ–ø—ã—Ç–∞—è—Å—å —Å–æ–∑–¥–∞—Ç—å —Ü–µ–ª—å–Ω—ã–π –ø–æ—Ä—Ç—Ä–µ—Ç @{username}...')}
    </div>
    
    <div class="quote">
        {real_captions[-1] if real_captions else '–í —ç–ø–æ—Ö—É —Å–µ–ª—Ñ–∏ –∏ –ª–∞–π–∫–æ–≤ —Ç—ã –Ω–∞–ø–æ–º–Ω–∏–ª: –Ω–∞—Å—Ç–æ—è—â–µ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ ‚Äî —ç—Ç–æ —á–µ—Å—Ç–Ω–æ—Å—Ç—å'}
    </div>
</div>

<!-- –≠–ü–ò–õ–û–ì -->
<div class="memoir-page">
    <div class="chapter-header">
        <div class="chapter-number">–≠–ø–∏–ª–æ–≥</div>
        <h2 class="chapter-title">–ß—Ç–æ –æ—Å—Ç–∞–µ—Ç—Å—è</h2>
    </div>
    
    <div class="memoir-text">
        {chapters.get('epilogue', '–í —Ü–∏—Ñ—Ä–æ–≤—É—é —ç–ø–æ—Ö—É —Ç–∞–∫–∏–µ –≤—Å—Ç—Ä–µ—á–∏ –ø—Ä–∏–æ–±—Ä–µ—Ç–∞—é—Ç –æ—Å–æ–±–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ...')}
    </div>
    
    <div class="memoir-finale">
        <div class="memoir-signature">
            –° –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å—é –∑–∞ –≤—Å—Ç—Ä–µ—á—É<br>
            –∏ —É—Ä–æ–∫ –∫—Ä–∞—Å–æ—Ç—ã,<br>
            <em>—Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å</em>
        </div>
    </div>
    
    <div class="memoir-meta">
        <strong>@{username}</strong><br>
        {followers:,} –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ ‚Ä¢ {following:,} –ø–æ–¥–ø–∏—Å–æ–∫ ‚Ä¢ {posts_count} –ø—É–±–ª–∏–∫–∞—Ü–∏–π<br>
        {f'¬´{bio}¬ª<br>' if bio else ''}
        <br>
        <em>–ú–µ–º—É–∞—Ä—ã –Ω–∞–ø–∏—Å–∞–Ω—ã {random.choice(['—Ç–∏—Ö–∏–º –≤–µ—á–µ—Ä–æ–º', '–ø–æ–∑–¥–Ω–µ–π –Ω–æ—á—å—é', '–Ω–∞ —Ä–∞—Å—Å–≤–µ—Ç–µ'])} –≤ {random.choice(['—è–Ω–≤–∞—Ä–µ', '—Ñ–µ–≤—Ä–∞–ª–µ', '–º–∞—Ä—Ç–µ'])} 2024 –≥–æ–¥–∞</em><br>
        <em>–õ–æ–∫–∞—Ü–∏–∏: {", ".join(locations[:3]) if locations else "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –º–µ—Å—Ç–∞ —Å–µ—Ä–¥—Ü–∞"}</em><br>
        <em>–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ {len(processed_images)} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –∏–∑ {len(images)} –¥–æ—Å—Ç—É–ø–Ω—ã—Ö</em>
    </div>
</div>

</body>
</html>"""
    
    return html

