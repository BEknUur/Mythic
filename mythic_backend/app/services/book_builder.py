import json
import base64
from io import BytesIO
from pathlib import Path
from PIL import Image, ImageFilter, ImageEnhance, ImageDraw, ImageFont
from app.services.llm_client import strip_cliches, analyze_photo_for_memoir, generate_memoir_chapter
from typing import List, Tuple
import random
import time
import re
import asyncio
from fpdf import FPDF

try:
    import numpy as np
    NUMPY_AVAILABLE = True
except ImportError:
    NUMPY_AVAILABLE = False
    print("‚ö†Ô∏è NumPy –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –±—É–¥—É—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")

def analyze_profile_data(posts_data: list) -> dict:
    if not posts_data:
        return {}
    
    profile = posts_data[0]
    posts = profile.get("latestPosts", [])
    
    analysis = {
        "username": profile.get("username", "Unknown"),
        "full_name": profile.get("fullName", ""),
        "bio": profile.get("biography", ""),
        "followers": profile.get("followersCount", 0),
        "following": profile.get("followsCount", 0),
        "posts_count": len(posts),
        "verified": profile.get("verified", False),
        "profile_pic": profile.get("profilePicUrl", ""),
        "locations": [],
        "captions": [],
        "hashtags": set(),
        "mentions": set(),
        "post_details": [],
        "total_likes": 0,
        "total_comments": 0,
        "post_dates": [],
        "most_liked_post": None,
        "most_commented_post": None,
        "common_hashtags": [],
        "mentioned_users": []
    }
    
    # –°–æ–±–∏—Ä–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å—Ç–∞—Ö
    for post in posts:
        post_info = {
            "caption": post.get("caption", ""),
            "location": post.get("locationName", ""),
            "likes": post.get("likesCount", 0),
            "comments": post.get("commentsCount", 0),
            "type": post.get("type", ""),
            "alt": post.get("alt", ""),
            "timestamp": post.get("timestamp", ""),
            "hashtags": post.get("hashtags", []),
            "mentions": post.get("mentions", []),
            "url": post.get("url", "")
        }
        analysis["post_details"].append(post_info)
        
        # –ù–∞–∫–∞–ø–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        if post.get("likesCount"):
            analysis["total_likes"] += post["likesCount"]
            if not analysis["most_liked_post"] or post["likesCount"] > analysis["most_liked_post"]["likes"]:
                analysis["most_liked_post"] = post_info
                
        if post.get("commentsCount"):
            analysis["total_comments"] += post["commentsCount"]
            if not analysis["most_commented_post"] or post["commentsCount"] > analysis["most_commented_post"]["comments"]:
                analysis["most_commented_post"] = post_info
        
        if post.get("locationName"):
            analysis["locations"].append(post["locationName"])
        
        if post.get("caption"):
            analysis["captions"].append(post["caption"])
        
        if post.get("timestamp"):
            analysis["post_dates"].append(post["timestamp"])
            
        analysis["hashtags"].update(post.get("hashtags", []))
        analysis["mentions"].update(post.get("mentions", []))
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ —Ö—ç—à—Ç–µ–≥–∏
    hashtag_count = {}
    for post in posts:
        for hashtag in post.get("hashtags", []):
            hashtag_count[hashtag] = hashtag_count.get(hashtag, 0) + 1
    
    analysis["common_hashtags"] = sorted(hashtag_count.items(), key=lambda x: x[1], reverse=True)[:5]
    analysis["mentioned_users"] = list(analysis["mentions"])[:10]
    
    return analysis

def build_romantic_book(run_id: str, images: list[Path], texts: str, book_format: str = "classic", user_id: str = None):
    """–°–æ–∑–¥–∞–Ω–∏–µ HTML –∫–Ω–∏–≥–∏"""
    try:
        
        run_dir = Path("data") / run_id
        posts_json = run_dir / "posts.json"
        images_dir = run_dir / "images"
        
        if posts_json.exists():
            posts_data = json.loads(posts_json.read_text(encoding="utf-8"))
        else:
            posts_data = []
        
        
        analysis = analyze_profile_data(posts_data)
        username = analysis.get("username", "...")
        
        
        actual_images = []
        if images_dir.exists():
            # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –ø–∞–ø–∫–∏
            for img_file in sorted(images_dir.glob("*")):
                if img_file.suffix.lower() in ['.jpg', '.jpeg', '.png', '.webp']:
                    actual_images.append(img_file)
        
        # –†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –ø—Ä–æ—Ü–µ—Å—Å–µ –∞–Ω–∞–ª–∏–∑–∞
        romantic_analysis_messages = [
            f"–ü–æ–≥—Ä—É–∂–∞—é—Å—å –≤ –≥–ª—É–±–∏–Ω—É –≤–∑–≥–ª—è–¥–∞ @{username}... –ö–∞–∂–¥—ã–π –ø–∏–∫—Å–µ–ª—å —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é",
            f"–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –º–∞–≥–∏—é –≤–∞—à–∏—Ö –≥–ª–∞–∑... –í –Ω–∏—Ö —á–∏—Ç–∞–µ—Ç—Å—è —Ü–µ–ª–∞—è –∂–∏–∑–Ω—å –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä",
            f"–ò–∑—É—á–∞—é –∏–∑–≥–∏–±—ã –≤–∞—à–µ–π —É–ª—ã–±–∫–∏ ‚Äî –æ–Ω–∞ —Å–ø–æ—Å–æ–±–Ω–∞ —Ä–∞—Å—Ç–æ–ø–∏—Ç—å —Å–∞–º—ã–µ —Ö–æ–ª–æ–¥–Ω—ã–µ —Å–µ—Ä–¥—Ü–∞",
            f"–†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—é –∏–≥—Ä—É —Å–≤–µ—Ç–∞ –Ω–∞ –≤–∞—à–∏—Ö —á–µ—Ä—Ç–∞—Ö –ª–∏—Ü–∞... –ü—Ä–∏—Ä–æ–¥–∞ —Å–æ–∑–¥–∞–ª–∞ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–æ",
            f"–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤—ã—Ä–∞–∂–µ–Ω–∏—è –≤–∞—à–∏—Ö –≥–ª–∞–∑ ‚Äî –∫–∞–∂–¥–æ–µ —Ñ–æ—Ç–æ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–æ–≤—É—é –≥–ª–∞–≤—É –∏—Å—Ç–æ—Ä–∏–∏"
        ]
        
        romantic_photo_messages = [
            f"–ë–µ—Ä–µ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è—é {len(actual_images)} –≤–∞—à–∏—Ö –¥—Ä–∞–≥–æ—Ü–µ–Ω–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤ –∂–∏–∑–Ω–∏...",
            f"–ö–∞–∂–¥–æ–µ –∏–∑ {len(actual_images)} —Ñ–æ—Ç–æ ‚Äî –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∏—Å–∫—É—Å—Å—Ç–≤–∞ –≤ –º–æ–µ–π –ª–∏—á–Ω–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏",
            f"–°–æ–±—Ä–∞–ª {len(actual_images)} –∫–∞–¥—Ä–æ–≤ –≤–∞—à–µ–π –∫—Ä–∞—Å–æ—Ç—ã ‚Äî —Ç–µ–ø–µ—Ä—å –æ–Ω–∏ –Ω–∞–≤—Å–µ–≥–¥–∞ –æ—Å—Ç–∞–Ω—É—Ç—Å—è —Å–æ –º–Ω–æ–π",
            f"{len(actual_images)} —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤–∞—à–µ–π –¥—É—à–∏ –Ω–∞–¥—ë–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–º—è—Ç–∏ —Å–µ—Ä–¥—Ü–∞",
            f"–ê—Ä—Ö–∏–≤–∏—Ä—É—é {len(actual_images)} –º–≥–Ω–æ–≤–µ–Ω–∏–π –≤–∞—à–µ–π –∂–∏–∑–Ω–∏ —Å –æ—Å–æ–±–æ–π –Ω–µ–∂–Ω–æ—Å—Ç—å—é –∏ –≤–Ω–∏–º–∞–Ω–∏–µ–º"
        ]
        
        print(random.choice(romantic_analysis_messages))
        print(random.choice(romantic_photo_messages))
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ñ–æ—Ä–º–∞—Ç–∞
        content = {"format": "literary"}  
        html = create_literary_instagram_book_html(content, analysis, actual_images)
        
        out = Path("data") / run_id
        out.mkdir(parents=True, exist_ok=True)
        
        html_file = out / "book.html"
        html_file.write_text(html, encoding="utf-8")
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF –≤–µ—Ä—Å–∏—é
        try:
            pdf_file = out / "book.pdf"
            # –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤—ã–π PDF –∏–∑ HTML –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å –ø–æ–º–æ—â—å—é WeasyPrint
            create_pdf_with_weasyprint(pdf_file, html)
            print(f"üìÑ –ö—Ä–∞—Å–∏–≤–∞—è PDF –≤–µ—Ä—Å–∏—è —Å–æ–∑–¥–∞–Ω–∞: {pdf_file}")
        except Exception as pdf_error:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è PDF: {pdf_error}")
        
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if user_id:
            try:
                import uuid
                import datetime
                import shutil
                
                # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –¥–ª—è –Ω–∞–∑–≤–∞–Ω–∏—è –∫–Ω–∏–≥–∏
                profile_username = analysis.get("username")
                profile_full_name = analysis.get("full_name")
                
                # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è –∫–Ω–∏–≥–∏
                book_id = str(uuid.uuid4())
                
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏
                title = f"–î–ª—è {profile_full_name or profile_username or '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'} —Å –ª—é–±–æ–≤—å—é"
                
                # –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ª–æ–∫–∞–ª—å–Ω—ã–µ –∫–æ–ø–∏–∏)
                def get_user_books_db_path_local(user_id: str) -> Path:
                    user_books_dir = Path("data") / "user_books"
                    user_books_dir.mkdir(parents=True, exist_ok=True)
                    return user_books_dir / f"{user_id}.json"

                def load_user_books_local(user_id: str) -> list[dict]:
                    books_file = get_user_books_db_path_local(user_id)
                    if not books_file.exists():
                        return []
                    try:
                        return json.loads(books_file.read_text(encoding="utf-8"))
                    except:
                        return []

                def save_user_books_local(user_id: str, books: list[dict]):
                    books_file = get_user_books_db_path_local(user_id)
                    books_file.write_text(json.dumps(books, ensure_ascii=False, indent=2), encoding="utf-8")

                def copy_book_to_user_library_local(run_id: str, user_id: str, book_id: str) -> bool:
                    try:
                        source_dir = Path("data") / run_id
                        user_library_dir = Path("data") / "user_books" / user_id / book_id
                        user_library_dir.mkdir(parents=True, exist_ok=True)
                        
                        # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –∫–Ω–∏–≥–∏
                        for file in ["book.html", "book.pdf", "posts.json"]:
                            source_file = source_dir / file
                            if source_file.exists():
                                shutil.copy2(source_file, user_library_dir / file)
                        
                        # –ö–æ–ø–∏—Ä—É–µ–º –ø–∞–ø–∫—É —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
                        source_images = source_dir / "images"
                        if source_images.exists():
                            target_images = user_library_dir / "images"
                            if target_images.exists():
                                shutil.rmtree(target_images)
                            shutil.copytree(source_images, target_images)
                        
                        return True
                    except Exception as e:
                        print(f"–û—à–∏–±–∫–∞ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∫–Ω–∏–≥–∏ {run_id} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
                        return False
                
                # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–Ω–∏–≥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                books = load_user_books_local(user_id)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –ª–∏ —É–∂–µ —ç—Ç–∞ –∫–Ω–∏–≥–∞
                already_saved = False
                for book in books:
                    if book["run_id"] == run_id:
                        already_saved = True
                        break
                
                if not already_saved:
                    # –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –∫–Ω–∏–≥–∏ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    if copy_book_to_user_library_local(run_id, user_id, book_id):
                        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–∏–≥—É –≤ —Å–ø–∏—Å–æ–∫
                        new_book = {
                            "id": book_id,
                            "run_id": run_id,
                            "title": title,
                            "created_at": datetime.datetime.now().isoformat(),
                            "profile_username": profile_username,
                            "profile_full_name": profile_full_name,
                            "has_pdf": pdf_file.exists(),
                            "has_html": html_file.exists()
                        }
                        
                        books.append(new_book)
                        save_user_books_local(user_id, books)
                        
                        print(f"üìö –ö–Ω–∏–≥–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
                    else:
                        print("‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–Ω–∏–≥–∏ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫—É")
                else:
                    print("üìö –ö–Ω–∏–≥–∞ —É–∂–µ –±—ã–ª–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
                    
            except Exception as save_error:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: {save_error}")
        
        final_messages = [
            f"–ú–∞–≥–∏—è —Å–≤–µ—Ä—à–∏–ª–∞—Å—å! –†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è –∫–Ω–∏–≥–∞ –æ @{username} –≥–æ—Ç–æ–≤–∞ –∫ –ø—Ä–æ—á—Ç–µ–Ω–∏—é: {html_file}",
            f"–í–∞—à–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –∫–Ω–∏–≥–∞ –ª—é–±–≤–∏ —Å–æ–∑–¥–∞–Ω–∞! @{username}, –≤—ã —Ç–µ–ø–µ—Ä—å ‚Äî –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–Ω—ã–π –≥–µ—Ä–æ–π: {html_file}",
            f"–õ–µ—Ç–æ–ø–∏—Å—å –∫—Ä–∞—Å–æ—Ç—ã @{username} –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ö–∞–∂–¥–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–æ–ø–∏—Ç–∞–Ω–∞ –∏—Å–∫—Ä–µ–Ω–Ω–∏–º –≤–æ—Å—Ö–∏—â–µ–Ω–∏–µ–º: {html_file}",
            f"–ö–Ω–∏–≥–∞-–ø–æ—Å–≤—è—â–µ–Ω–∏–µ @{username} –≥–æ—Ç–æ–≤–∞! –í –Ω–µ–π –∂–∏–≤—ë—Ç —á–∞—Å—Ç–∏—á–∫–∞ –¥—É—à–∏ –∞–≤—Ç–æ—Ä–∞: {html_file}"
        ]
        print(random.choice(final_messages))
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–Ω–∏–≥–∏ –æ @{username}: {e}")
        # –°–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—É—é –≤–µ—Ä—Å–∏—é –ø—Ä–∏ –æ—à–∏–±–∫–µ
        try:
            basic_html = f"""
            <html>
            <head>
                <title>–ö–Ω–∏–≥–∞</title>
                <style>
                    body {{ background: white; font-family: serif; padding: 20px; }}
                    .error {{ background: #f8f9fa; padding: 20px; border-radius: 10px; text-align: center; }}
                </style>
            </head>
            <body>
                <div class="error">
                    <h1>–ö–Ω–∏–≥–∞</h1>
                    <p>–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–Ω–∏–≥–∏: {e}</p>
                    <p>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ</p>
                </div>
            </body>
            </html>
            """
            html_file = Path("data") / run_id / "book.html"
            html_file.write_text(basic_html, encoding="utf-8")
            
        except Exception as final_error:
            print(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {final_error}")

def apply_dream_pastel_effect(img: Image.Image) -> Image.Image:
    """–ü—Ä–∏–º–µ–Ω—è–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç Dream-Pastel –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤–∞–ª–∏–¥–Ω–æ–µ
        if img is None or img.size[0] == 0 or img.size[1] == 0:
            print("‚ùå –ù–µ–¥–æ–ø—É—Å—Ç–∏–º–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏")
            return img
            
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ RGB –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if img.mode != 'RGB':
            img = img.convert('RGB')
        
      
        img = img.filter(ImageFilter.GaussianBlur(1.2))
        
        
        enhancer = ImageEnhance.Color(img)
        img = enhancer.enhance(1.15)
        
       
        overlay = Image.new('RGBA', img.size, (255, 220, 210, 25)) 
        img = img.convert('RGBA')
        img = Image.alpha_composite(img, overlay)
        
        
        if NUMPY_AVAILABLE:
            try:
                noise = np.random.randint(0, 15, (img.size[1], img.size[0], 3), dtype=np.uint8)
                noise_img = Image.fromarray(noise, 'RGB').convert('RGBA')
                noise_overlay = Image.new('RGBA', img.size, (0, 0, 0, 0))
                noise_overlay.paste(noise_img, (0, 0))
                img = Image.alpha_composite(img, noise_overlay)
            except Exception as noise_error:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ —à—É–º–∞: {noise_error}")
        else:
            print("‚ö†Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —à—É–º–∞ (numpy –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω)")
        return img.convert('RGB')
        # –õ–µ–≥–∫–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ —è—Ä–∫–æ—Å—Ç–∏
        enhancer = ImageEnhance.Brightness(img)
        img = enhancer.enhance(1.05)
        
        return img.convert('RGB')
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ Dream-Pastel —ç—Ñ—Ñ–µ–∫—Ç–∞: {e}")
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
        return img.convert('RGB') if img.mode != 'RGB' else img

def create_collage_spread(img1: Image.Image, img2: Image.Image, caption: str) -> str:
    """–°–æ–∑–¥–∞–µ—Ç HTML-–±–ª–æ–∫ –¥–ª—è —Ä–∞–∑–≤–æ—Ä–æ—Ç–∞ —Å –∫–æ–ª–ª–∞–∂–æ–º –∏–∑ –¥–≤—É—Ö —Ñ–æ—Ç–æ –∏ –ø–æ–¥–ø–∏—Å—å—é."""
    
    # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ base64
    img1_base64 = base64.b64encode(img1.tobytes()).decode()
    img2_base64 = base64.b64encode(img2.tobytes()).decode()
    
    collage_html = f"""
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–ö–æ–ª–ª–∞–∂</title>
    <style>
        body {{
            font-family: Arial, sans-serif;
            background: #f5f5f5;
            margin: 0;
            padding: 0;
        }}
        .collage-container {{
            display: flex;
            justify-content: space-between;
            padding: 20px;
        }}
        .photo-container {{
            width: 48%;
            position: relative;
        }}
        .photo-container img {{
            width: 100%;
            height: 300px;
            object-fit: cover;
        }}
        .caption {{
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            background: rgba(0, 0, 0, 0.5);
            color: #fff;
            padding: 5px;
        }}
    </style>
</head>
<body>
    <div class="collage-container">
        <div class="photo-container">
            <img src="data:image/jpeg;base64,{img1_base64}" alt="–§–æ—Ç–æ 1">
            <div class="caption">{caption}</div>
        </div>
        <div class="photo-container">
            <img src="data:image/jpeg;base64,{img2_base64}" alt="–§–æ—Ç–æ 2">
            <div class="caption">{caption}</div>
        </div>
    </div>
</body>
</html>
    """
    
    return collage_html


def analyze_photo_for_gender(img_path: Path) -> str:
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ñ–æ—Ç–æ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ–ª–∞ —á–µ—Ä–µ–∑ –ò–ò"""
    try:
        from app.services.llm_client import generate_text
        
        with Image.open(img_path) as img:
            if img.mode != 'RGB':
                img = img.convert('RGB')
            
            # –£–º–µ–Ω—å—à–∞–µ–º —Ä–∞–∑–º–µ—Ä –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
            img.thumbnail((400, 400), Image.Resampling.LANCZOS)
            
            buffer = BytesIO()
            img.save(buffer, format='JPEG', quality=80)
            img_str = base64.b64encode(buffer.getvalue()).decode()
            img_data = f"data:image/jpeg;base64,{img_str}"
            
            prompt = """–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —ç—Ç–æ —Ñ–æ—Ç–æ –∏ –æ–ø—Ä–µ–¥–µ–ª–∏ –ø–æ–ª —á–µ–ª–æ–≤–µ–∫–∞. 
            
            –û—Ç–≤–µ—Ç—å –¢–û–õ–¨–ö–û –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º:
            - "female" –µ—Å–ª–∏ —ç—Ç–æ –¥–µ–≤—É—à–∫–∞/–∂–µ–Ω—â–∏–Ω–∞
            - "male" –µ—Å–ª–∏ —ç—Ç–æ –ø–∞—Ä–µ–Ω—å/–º—É–∂—á–∏–Ω–∞
            
            –°–º–æ—Ç—Ä–∏ –Ω–∞ —á–µ—Ä—Ç—ã –ª–∏—Ü–∞, –ø—Ä–∏—á–µ—Å–∫—É, –æ–¥–µ–∂–¥—É, –æ–±—â–∏–π –≤–∏–¥."""
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º vision model –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
            result = generate_text(prompt, max_tokens=10, temperature=0.1, image_data=img_data)
            
            if "female" in result.lower():
                return "female"
            elif "male" in result.lower():
                return "male"
            else:
                return "unknown"
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –ø–æ–ª–∞ –ø–æ —Ñ–æ—Ç–æ: {e}")
        return "unknown"

def analyze_gender_with_ai(full_name: str, detected_gender: str) -> dict:
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–æ–ª —á–µ—Ä–µ–∑ –ò–ò –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è"""
    try:
        from app.services.llm_client import generate_text
        
        prompt = f"""–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–µ–ª–æ–≤–µ–∫–µ –∏ –æ–ø—Ä–µ–¥–µ–ª–∏ –ø–æ–ª, –∑–∞—Ç–µ–º –≤—ã–±–µ—Ä–∏ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –º–µ—Å—Ç–æ–∏–º–µ–Ω–∏—è –¥–ª—è —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞.

–ò–ù–§–û–†–ú–ê–¶–ò–Ø:
- –ò–º—è: {full_name}
- –ê–Ω–∞–ª–∏–∑ —Ñ–æ—Ç–æ: {detected_gender}

–í–ê–ñ–ù–û: –í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –∏–º—è! –í–æ—Ç –ø—Ä–∏–º–µ—Ä—ã:

–ñ–ï–ù–°–ö–ò–ï –ò–ú–ï–ù–ê (–∏—Å–ø–æ–ª—å–∑—É–π "female"):
- –†—É—Å—Å–∫–∏–µ: –ê–Ω–Ω–∞, –ú–∞—Ä–∏—è, –ï–ª–µ–Ω–∞, –ê—Ä–∏–Ω–∞, –î–∞—Ä—å—è, –ê–ª–∏–Ω–∞, –Æ–ª–∏—è, –ï–∫–∞—Ç–µ—Ä–∏–Ω–∞, –û–ª—å–≥–∞, –¢–∞—Ç—å—è–Ω–∞, –ù–∞—Ç–∞–ª—å—è, –°–≤–µ—Ç–ª–∞–Ω–∞, –ò—Ä–∏–Ω–∞, –í–∞–ª–µ—Ä–∏—è, –í–∏–∫—Ç–æ—Ä–∏—è, –î–∏–∞–Ω–∞, –ö–∞—Ä–∏–Ω–∞, –ö—Ä–∏—Å—Ç–∏–Ω–∞, –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞, –ú–∏–ª–∞–Ω–∞, –ü–æ–ª–∏–Ω–∞, –õ–∏–∞–Ω–∞, –õ–∏–ª–∏—è, –õ–∏–¥–∏—è, –õ—é–¥–º–∏–ª–∞, –í–µ—Ä–∞, –ù–∞–¥–µ–∂–¥–∞, –õ—é–±–æ–≤—å
- –ö–∞–∑–∞—Ö—Å–∫–∏–µ: –ê—Ä—É–∂–∞–Ω, –ê–∏–¥–∞, –ê–º–∏–Ω–∞, –ê—Å–µ–ª—å, –ê–∫–±–æ—Ç–∞, –ì—É–ª—å–Ω–∞—Ä–∞, –î–∏–Ω–∞—Ä–∞, –ö–∞–º–∏–ª–∞, –õ–µ–π–ª–∞, –ú–∞–¥–∏–Ω–∞, –ù–∞–∑–≥—É–ª—å, –°–∞—É–ª–µ
- –ï–≤—Ä–æ–ø–µ–π—Å–∫–∏–µ: Emma, Kate, Anna, Elena, Sofia, Daria, Julia, Kristina, Victoria, Diana, Alice, Maria, Natasha, Alexandra, Elizabeth, Sarah, Jessica, Nicole, Amanda, Melissa
- –£–º–µ–Ω—å—à–∏—Ç–µ–ª—å–Ω—ã–µ: –ê–Ω—è, –ö–∞—Ç—è, –õ–µ–Ω–∞, –ú–∞—à–∞, –û–ª—è, –¢–∞–Ω—è, –ù–∞—Ç–∞—à–∞, –°–≤–µ—Ç–∞, –ò—Ä–∞, –Æ–ª—è, –ù–∞—Å—Ç—è, –õ–µ—Ä–∞, –í–∏–∫–∞, –ö—Ä–∏—Å—Ç–∏, –†–∏—Ç–∞, –ü–æ–ª—è, –õ–∏–ª—è

–ú–£–ñ–°–ö–ò–ï –ò–ú–ï–ù–ê (–∏—Å–ø–æ–ª—å–∑—É–π "male"):
- –†—É—Å—Å–∫–∏–µ: –ê–ª–µ–∫—Å–∞–Ω–¥—Ä, –ê–ª–µ–∫—Å–µ–π, –ê–Ω–¥—Ä–µ–π, –ê–Ω—Ç–æ–Ω, –ê—Ä—Ç–µ–º, –î–º–∏—Ç—Ä–∏–π, –ú–∞–∫—Å–∏–º, –ú–∏—Ö–∞–∏–ª, –ù–∏–∫–∏—Ç–∞, –ò–≤–∞–Ω, –ò–≥–æ—Ä—å, –û–ª–µ–≥, –ü–∞–≤–µ–ª, –°–µ—Ä–≥–µ–π, –í–ª–∞–¥–∏–º–∏—Ä, –î–µ–Ω–∏—Å, –ï–≤–≥–µ–Ω–∏–π, –ö–∏—Ä–∏–ª–ª
- –ö–∞–∑–∞—Ö—Å–∫–∏–µ: –ê–∑–∞–º–∞—Ç, –ê—Ä–º–∞–Ω, –î–∞–Ω–∏—è—Ä, –ï—Ä–ª–∞–Ω, –ö–∞–π—Ä–∞—Ç, –ú–∞—Ä–∞—Ç, –ù—É—Ä–ª–∞–Ω, –†—É—Å—Ç–∞–º
- –ï–≤—Ä–æ–ø–µ–π—Å–∫–∏–µ: John, Michael, David, William, Richard, Daniel, Paul, Mark, Andrew, Kevin, Brian
- –£–º–µ–Ω—å—à–∏—Ç–µ–ª—å–Ω—ã–µ: –°–∞—à–∞, –ñ–µ–Ω—è, –õ–µ—à–∞, –î–∏–º–∞, –í–æ–≤–∞, –°–ª–∞–≤–∞, –ú–∞–∫—Å, –ú–∏—à–∞, –ö–æ–ª—è, –ü–∞—à–∞

–ü–†–ê–í–ò–õ–ê –û–ü–†–ï–î–ï–õ–ï–ù–ò–Ø:
1. –ï—Å–ª–∏ –∏–º—è –≤ —Å–ø–∏—Å–∫–µ –∂–µ–Ω—Å–∫–∏—Ö - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ "female"
2. –ï—Å–ª–∏ –∏–º—è –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ -–∞, -—è, -–∏—è, -–Ω–∞ - —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ "female" 
3. –õ–∏–∞–Ω–∞, –î–∏–∞–Ω–∞, –ê–Ω–Ω–∞, –ú–∞—Ä–∏—è, –°–æ—Ñ–∏—è, –ê—Ä–∏–Ω–∞ - —ç—Ç–æ –ñ–ï–ù–°–ö–ò–ï –∏–º–µ–Ω–∞
4. –ï—Å–ª–∏ –∞–Ω–∞–ª–∏–∑ —Ñ–æ—Ç–æ –ø–æ–∫–∞–∑–∞–ª "female" - —ç—Ç–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
5. –í —Å–ª—É—á–∞–µ —Å–æ–º–Ω–µ–Ω–∏–π - –ª—É—á—à–µ –æ—à–∏–±–∏—Ç—å—Å—è –≤ —Å—Ç–æ—Ä–æ–Ω—É –±–æ–ª–µ–µ –≤–µ–∂–ª–∏–≤–æ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è

–û—Ç–≤–µ—Ç—å –°–¢–†–û–ì–û –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON:
{{
    "gender": "female" –∏–ª–∏ "male",
    "gender_word": "–∫—Ä–∞—Å–∏–≤–∞—è" –∏–ª–∏ "–∫—Ä–∞—Å–∏–≤—ã–π", 
    "she_he": "–æ–Ω–∞" –∏–ª–∏ "–æ–Ω",
    "her_his": "–µ—ë" –∏–ª–∏ "–µ–≥–æ",
    "love_word": "–≤–ª—é–±–ª–µ–Ω –≤ –Ω–µ—ë" –∏–ª–∏ "–≤–ª—é–±–ª–µ–Ω –≤ –Ω–µ–≥–æ"
}}

–î–ª—è –∏–º–µ–Ω–∏ "{full_name}" –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:"""

        result = generate_text(prompt, max_tokens=200, temperature=0.0)  # –°–Ω–∏–∂–∞–µ–º —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –¥–ª—è —Ç–æ—á–Ω–æ—Å—Ç–∏
        
        # –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON
        import json
        try:
            # –ò–∑–≤–ª–µ–∫–∞–µ–º JSON –∏–∑ –æ—Ç–≤–µ—Ç–∞
            start = result.find('{')
            end = result.rfind('}') + 1
            if start != -1 and end != -1:
                json_str = result[start:end]
                gender_data = json.loads(json_str)
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ –ø–æ–ª—è –Ω–∞ –º–µ—Å—Ç–µ
                required_fields = ['gender', 'gender_word', 'she_he', 'her_his', 'love_word']
                if all(field in gender_data for field in required_fields):
                    print(f"‚úÖ –ò–ò –æ–ø—Ä–µ–¥–µ–ª–∏–ª –ø–æ–ª: {gender_data['gender']} –¥–ª—è –∏–º–µ–Ω–∏ '{full_name}' -> {gender_data['she_he']}")
                    return gender_data
                    
        except Exception as parse_error:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –æ—Ç –ò–ò: {parse_error}")
        
        # –ë–æ–ª–µ–µ —É–º–Ω—ã–π fallback —Å –∞–Ω–∞–ª–∏–∑–æ–º –∏–º–µ–Ω–∏
        print("‚ö° –ò–ò –Ω–µ —Å–º–æ–≥ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –∏—Å–ø–æ–ª—å–∑—É—é —É–º–Ω—ã–π fallback")
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–ª –ø–æ –∏–º–µ–Ω–∏ –¥–ª—è fallback
        name_lower = full_name.lower().strip()
        
        # –ñ–µ–Ω—Å–∫–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ –≤ –∏–º–µ–Ω–∏
        female_indicators = [
            '–ª–∏–∞–Ω–∞', '–¥–∏–∞–Ω–∞', '–∞–Ω–Ω–∞', '–º–∞—Ä–∏—è', '–∞—Ä–∏–Ω–∞', '–µ–ª–µ–Ω–∞', '—Å–æ—Ñ–∏—è', '–¥–∞—Ä—å—è', '–∞–ª–∏–Ω–∞', 
            '—é–ª–∏—è', '–µ–∫–∞—Ç–µ—Ä–∏–Ω–∞', '–æ–ª—å–≥–∞', '—Ç–∞—Ç—å—è–Ω–∞', '–Ω–∞—Ç–∞–ª—å—è', '—Å–≤–µ—Ç–ª–∞–Ω–∞', '–∏—Ä–∏–Ω–∞',
            '–≤–∞–ª–µ—Ä–∏—è', '–≤–∏–∫—Ç–æ—Ä–∏—è', '–∫–∞—Ä–∏–Ω–∞', '–∫—Ä–∏—Å—Ç–∏–Ω–∞', '–º–∏–ª–∞–Ω–∞', '–ø–æ–ª–∏–Ω–∞', '–ª–∏–ª–∏—è',
            '–∞—Ä—É–∂–∞–Ω', '–∞–∏–¥–∞', '–∞–º–∏–Ω–∞', '–∞—Å–µ–ª—å', 'emma', 'kate', 'sofia', 'alice'
        ]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∂–µ–Ω—Å–∫–∏–µ –∏–º–µ–Ω–∞
        is_female = any(indicator in name_lower for indicator in female_indicators)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∫–æ–Ω—á–∞–Ω–∏—è
        if not is_female:
            female_endings = ['–∞–Ω–∞', '–∏–Ω–∞', '–µ–Ω–∞', '–æ–Ω–∞', '—å—è–Ω–∞', '–∏—è', '—è', '–∞']
            is_female = any(name_lower.endswith(ending) for ending in female_endings)
        
        # –£—á–∏—Ç—ã–≤–∞–µ–º –∞–Ω–∞–ª–∏–∑ —Ñ–æ—Ç–æ
        if detected_gender == "female":
            is_female = True
        
        if is_female or "female" in result.lower():
            return {
                "gender": "female",
                "gender_word": "–∫—Ä–∞—Å–∏–≤–∞—è",
                "she_he": "–æ–Ω–∞", 
                "her_his": "–µ—ë",
                "love_word": "–≤–ª—é–±–ª–µ–Ω –≤ –Ω–µ—ë"
            }
        else:
            return {
                "gender": "male",
                "gender_word": "–∫—Ä–∞—Å–∏–≤—ã–π",
                "she_he": "–æ–Ω",
                "her_his": "–µ–≥–æ", 
                "love_word": "–≤–ª—é–±–ª–µ–Ω –≤ –Ω–µ–≥–æ"
            }
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ –ø–æ–ª–∞ —á–µ—Ä–µ–∑ –ò–ò: {e}")
        
        # –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π fallback - –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–º—è –ª–æ–∫–∞–ª—å–Ω–æ
        name_lower = full_name.lower().strip()
        
        # –Ø–≤–Ω–æ –∂–µ–Ω—Å–∫–∏–µ –∏–º–µ–Ω–∞
        female_names = [
            '–ª–∏–∞–Ω–∞', '–¥–∏–∞–Ω–∞', '–∞–Ω–Ω–∞', '–º–∞—Ä–∏—è', '–∞—Ä–∏–Ω–∞', '–µ–ª–µ–Ω–∞', '—Å–æ—Ñ–∏—è', '–¥–∞—Ä—å—è', 
            '–∞–ª–∏–Ω–∞', '—é–ª–∏—è', '–µ–∫–∞—Ç–µ—Ä–∏–Ω–∞', '–æ–ª—å–≥–∞', '—Ç–∞—Ç—å—è–Ω–∞', '–Ω–∞—Ç–∞–ª—å—è', '—Å–≤–µ—Ç–ª–∞–Ω–∞',
            '–∏—Ä–∏–Ω–∞', '–≤–∞–ª–µ—Ä–∏—è', '–≤–∏–∫—Ç–æ—Ä–∏—è', '–∫–∞—Ä–∏–Ω–∞', '–∫—Ä–∏—Å—Ç–∏–Ω–∞', '–º–∏–ª–∞–Ω–∞', '–ø–æ–ª–∏–Ω–∞',
            '–∞—Ä—É–∂–∞–Ω', '–∞–∏–¥–∞', '–∞–º–∏–Ω–∞', '–∞—Å–µ–ª—å', 'emma', 'kate', 'sofia', 'alice', 'maria'
        ]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω—ã–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –∏–ª–∏ –≤—Ö–æ–∂–¥–µ–Ω–∏—è
        is_female = any(fem_name in name_lower for fem_name in female_names)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∫–æ–Ω—á–∞–Ω–∏—è
        if not is_female:
            female_endings = ['–∞–Ω–∞', '–∏–Ω–∞', '–µ–Ω–∞', '—è', '–∞']
            is_female = any(name_lower.endswith(ending) and len(name_lower) > 2 for ending in female_endings)
        
        # –£—á–∏—Ç—ã–≤–∞–µ–º —Ñ–æ—Ç–æ
        if detected_gender == "female":
            is_female = True
        
        if is_female:
            print(f"üö∫ Fallback –æ–ø—Ä–µ–¥–µ–ª–∏–ª –∂–µ–Ω—Å–∫–∏–π –ø–æ–ª –¥–ª—è '{full_name}'")
            return {
                "gender": "female",
                "gender_word": "–∫—Ä–∞—Å–∏–≤–∞—è",
                "she_he": "–æ–Ω–∞",
                "her_his": "–µ—ë", 
                "love_word": "–≤–ª—é–±–ª–µ–Ω –≤ –Ω–µ—ë"
            }
        else:
            print(f"üöπ Fallback –æ–ø—Ä–µ–¥–µ–ª–∏–ª –º—É–∂—Å–∫–æ–π –ø–æ–ª –¥–ª—è '{full_name}'")
            return {
                "gender": "male",
                "gender_word": "–∫—Ä–∞—Å–∏–≤—ã–π",
                "she_he": "–æ–Ω",
                "her_his": "–µ–≥–æ",
                "love_word": "–≤–ª—é–±–ª–µ–Ω –≤ –Ω–µ–≥–æ"
            }

def analyze_name_for_gender(name: str) -> str:
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏–º—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ–ª–∞"""
    if not name:
        return "unknown"
    
    name_lower = name.lower().strip()
    
    # –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∂–µ–Ω—Å–∫–∏—Ö –∏–º–µ–Ω (—Ä—É—Å—Å–∫–∏–µ, –∫–∞–∑–∞—Ö—Å–∫–∏–µ, –µ–≤—Ä–æ–ø–µ–π—Å–∫–∏–µ)
    female_names = [
        # –†—É—Å—Å–∫–∏–µ –∂–µ–Ω—Å–∫–∏–µ –∏–º–µ–Ω–∞
        '–∞—Ä–∏–Ω–∞', '–∞–Ω–Ω–∞', '–µ–ª–µ–Ω–∞', '–º–∞—Ä–∏—è', '–æ–ª—å–≥–∞', '—Ç–∞—Ç—å—è–Ω–∞', '–Ω–∞—Ç–∞–ª—å—è', '—Å–≤–µ—Ç–ª–∞–Ω–∞', 
        '–∏—Ä–∏–Ω–∞', '–µ–∫–∞—Ç–µ—Ä–∏–Ω–∞', '—é–ª–∏—è', '–∞–ª–∏–Ω–∞', '–¥–∞—Ä—å—è', '–∞–ª–∏—Å–∞', '–∞–Ω–∞—Å—Ç–∞—Å–∏—è', 
        '–≤–∞–ª–µ—Ä–∏—è', '–≤–∏–∫—Ç–æ—Ä–∏—è', '–¥–∏–∞–Ω–∞', '–∫–∞—Ä–∏–Ω–∞', '–∫—Ä–∏—Å—Ç–∏–Ω–∞', '–º–∞—Ä–≥–∞—Ä–∏—Ç–∞', 
        '–º–∏–ª–∞–Ω–∞', '–ø–æ–ª–∏–Ω–∞', '—É–ª—å—è–Ω–∞', '–ª—é–¥–º–∏–ª–∞', '–≥–∞–ª–∏–Ω–∞', '–Ω–∏–Ω–∞', '–≤–µ—Ä–∞', 
        '–ª—é–±–æ–≤—å', '–Ω–∞–¥–µ–∂–¥–∞', '–ª–∞—Ä–∏—Å–∞', '–∂–∞–Ω–Ω–∞', '–∏–Ω–Ω–∞', '—Ç–∞–º–∞—Ä–∞', '—Ä–∞–∏—Å–∞',
        '–æ–∫—Å–∞–Ω–∞', '–∞–Ω—Ç–æ–Ω–∏–Ω–∞', '–∑–∏–Ω–∞–∏–¥–∞', '–∫–ª–∞–≤–¥–∏—è', '–ª–∏–¥–∏—è', '—Ä–µ–≥–∏–Ω–∞',
        
        # –ö–∞–∑–∞—Ö—Å–∫–∏–µ –∂–µ–Ω—Å–∫–∏–µ –∏–º–µ–Ω–∞
        '–∞–π–≥—É–ª—å', '–∞–π–Ω—É—Ä', '–∞—Ä—É–∂–∞–Ω', '–∞–∏–¥–∞', '–∞–º–∏–Ω–∞', '–∞—Å–µ–ª—å', '–∞–∫–±–æ—Ç–∞',
        '–≥—É–ª—å–Ω–∞—Ä–∞', '–≥—É–ª—å–º–∏—Ä–∞', '–¥–∏–Ω–∞—Ä–∞', '–∂–∞–Ω–∞—Ä–∞', '–∂–∞–º–∏–ª–∞', '–∫–∞–º–∏–ª–∞',
        '–ª–µ–π–ª–∞', '–º–∞–¥–∏–Ω–∞', '–Ω–∞–∑–≥—É–ª—å', '—Å–∞—É–ª–µ', '—Ç–æ–ª–≥–∞–Ω–∞–π', '—à–∞—Ö–∑–æ–¥–∞',
        'aruzhan', 'aida', 'amina', 'asel', 'akbota', 'gulnara', 'dinara',
        
        # –ï–≤—Ä–æ–ø–µ–π—Å–∫–∏–µ –∂–µ–Ω—Å–∫–∏–µ –∏–º–µ–Ω–∞  
        'emma', 'kate', 'anna', 'elena', 'sofia', 'daria', 'julia',
        'kristina', 'milana', 'polina', 'valeria', 'victoria', 'diana',
        'alice', 'maria', 'natasha', 'alexandra', 'elizabeth', 'sarah',
        'jessica', 'nicole', 'amanda', 'melissa', 'stephanie', 'nicole',
        'lisa', 'michelle', 'kimberly', 'donna', 'carol', 'ruth', 'sharon',
        
        # –ö–æ—Ä–æ—Ç–∫–∏–µ —Ñ–æ—Ä–º—ã –∏ —É–º–µ–Ω—å—à–∏—Ç–µ–ª—å–Ω—ã–µ
        '–∞–Ω—è', '–∫–∞—Ç—è', '–ª–µ–Ω–∞', '–º–∞—à–∞', '–æ–ª—è', '—Ç–∞–Ω—è', '–Ω–∞—Ç–∞—à–∞', '—Å–≤–µ—Ç–∞',
        '–∏—Ä–∞', '–∫–∞—Ç—è', '—é–ª—è', '–Ω–∞—Å—Ç—è', '–ª–µ—Ä–∞', '–≤–∏–∫–∞', '–∫—Ä–∏—Å—Ç–∏', '—Ä–∏—Ç–∞',
        '–ø–æ–ª—è', '–∫—Å—é—à–∞', '—Å–æ–Ω—è', '–¥–∞—à–∞', '—Å–∞—à–∞', '–ª–∏–∑–∞', '–∂–µ–Ω—è'
    ]
    
    # –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –º—É–∂—Å–∫–∏—Ö –∏–º–µ–Ω
    male_names = [
        # –†—É—Å—Å–∫–∏–µ –º—É–∂—Å–∫–∏–µ –∏–º–µ–Ω–∞
        '–∞–ª–µ–∫—Å–∞–Ω–¥—Ä', '–∞–ª–µ–∫—Å–µ–π', '–∞–Ω–¥—Ä–µ–π', '–∞–Ω—Ç–æ–Ω', '–∞—Ä—Ç–µ–º', '–±–æ—Ä–∏—Å', '–≤–∞–¥–∏–º',
        '–≤–∞–ª–µ–Ω—Ç–∏–Ω', '–≤–∞—Å–∏–ª–∏–π', '–≤–∏–∫—Ç–æ—Ä', '–≤–ª–∞–¥–∏–º–∏—Ä', '–≤–ª–∞–¥–∏—Å–ª–∞–≤', '–≤—è—á–µ—Å–ª–∞–≤',
        '–≥–µ–Ω–Ω–∞–¥–∏–π', '–≥–µ–æ—Ä–≥–∏–π', '–≥—Ä–∏–≥–æ—Ä–∏–π', '–¥–µ–Ω–∏—Å', '–¥–º–∏—Ç—Ä–∏–π', '–µ–≤–≥–µ–Ω–∏–π',
        '–µ–≥–æ—Ä', '–∏–≤–∞–Ω', '–∏–≥–æ—Ä—å', '–∏–ª—å—è', '–∫–∏—Ä–∏–ª–ª', '–∫–æ–Ω—Å—Ç–∞–Ω—Ç–∏–Ω', '–ª–µ–æ–Ω–∏–¥',
        '–º–∞–∫—Å–∏–º', '–º–∏—Ö–∞–∏–ª', '–Ω–∏–∫–∏—Ç–∞', '–Ω–∏–∫–æ–ª–∞–π', '–æ–ª–µ–≥', '–ø–∞–≤–µ–ª', '–ø–µ—Ç—Ä',
        '—Ä–æ–º–∞–Ω', '—Å–µ—Ä–≥–µ–π', '—Å—Ç–∞–Ω–∏—Å–ª–∞–≤', '—Ç–∏–º—É—Ä', '—Ñ–µ–¥–æ—Ä', '—é—Ä–∏–π', '—è—Ä–æ—Å–ª–∞–≤',
        
        # –ö–∞–∑–∞—Ö—Å–∫–∏–µ –º—É–∂—Å–∫–∏–µ –∏–º–µ–Ω–∞
        '–∞–±–∞–π', '–∞–¥–∏–ª—å—Ö–∞–Ω', '–∞–∑–∞–º–∞—Ç', '–∞–π–¥–æ—Å', '–∞–π—Ç—É–≥–∞–Ω', '–∞–ª–º–∞—Å', '–∞—Ä–º–∞–Ω',
        '–∞—Å—Ö–∞—Ç', '–±–∞—É—ã—Ä–∂–∞–Ω', '–±–µ—Ä–∏–∫', '–¥–∞–Ω–∏—è—Ä', '–µ—Ä–ª–∞–Ω', '–∂–∞–Ω–∞—Ç', '–∫–∞–π—Ä–∞—Ç',
        '–º–∞—Ä–∞—Ç', '–Ω—É—Ä–ª–∞–Ω', '—Ä—É—Å—Ç–∞–º', '—Å–∞—è—Ç', '—Ç–µ–º–∏—Ä–ª–∞–Ω', '—Ç–∏–º—É—Ä', '“±–ª–∞–Ω',
        'nurlan', 'arman', 'azamat', 'daniyar', 'erlan', 'kairat', 'marat',
        
        # –ï–≤—Ä–æ–ø–µ–π—Å–∫–∏–µ –º—É–∂—Å–∫–∏–µ –∏–º–µ–Ω–∞
        'john', 'michael', 'david', 'william', 'richard', 'charles', 'joseph',
        'thomas', 'christopher', 'daniel', 'paul', 'mark', 'donald', 'steven',
        'kenneth', 'andrew', 'joshua', 'kevin', 'brian', 'george', 'edward',
        'ronald', 'timothy', 'jason', 'jeffrey', 'ryan', 'jacob', 'gary',
        
        # –ö–æ—Ä–æ—Ç–∫–∏–µ —Ñ–æ—Ä–º—ã –∏ —É–º–µ–Ω—å—à–∏—Ç–µ–ª—å–Ω—ã–µ
        '—Å–∞—à–∞', '–∂–µ–Ω—è', '–ª–µ—à–∞', '–∞–Ω—Ç–æ—à–∞', '–¥–∏–º–∞', '–≤–æ–≤–∞', '—Å–ª–∞–≤–∞', '–≥–µ–Ω–∞',
        '–≥–æ—à–∞', '–¥–µ–Ω–∏—Å', '–∫–æ–ª—è', '–º–∞–∫—Å', '–º–∏—à–∞', '–Ω–∏–∫–∏—Ç–∞', '–æ–ª–µ–≥', '–ø–∞—à–∞',
        '–ø–µ—Ç—è', '—Ä–æ–º–∞', '—Å–µ—Ä–µ–∂–∞', '—Å—Ç–∞—Å', '—Ñ–µ–¥—è', '—é—Ä–∞', '—è—Ä–∏–∫'
    ]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ—á–Ω—ã–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è (–ø–æ–ª–Ω–æ–µ –∏–º—è)
    if name_lower in female_names:
        return "female"
    if name_lower in male_names:
        return "male"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ö–æ–∂–¥–µ–Ω–∏—è (—á–∞—Å—Ç—å –∏–º–µ–Ω–∏)
    for fem_name in female_names:
        if fem_name in name_lower:
            return "female"
    
    for male_name in male_names:
        if male_name in name_lower:
            return "male"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–∫–æ–Ω—á–∞–Ω–∏—è –∏–º–µ–Ω
    # –ñ–µ–Ω—Å–∫–∏–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è
    female_endings = ['–∞', '—è', '–∏—è', '–Ω–∞', '—Ä–∞', '–ª–∞', '–≥–∞', '–∫–∞', '—Ç–∞', '–¥–∞', '—á–∞', '—à–∞']
    for ending in female_endings:
        if name_lower.endswith(ending) and len(name_lower) > 2:
            return "female"
    
    # –ú—É–∂—Å–∫–∏–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è  
    male_endings = ['–æ–≤', '–µ–≤', '–∏–Ω', '—ã–Ω', '–∏—á', '–µ–π', '–∞–π', '–∏–π', '–æ–Ω', '–∞–Ω', '–µ–Ω', '—Ä', '–ª', '–Ω', '–º', '—Å']
    for ending in male_endings:
        if name_lower.endswith(ending) and len(name_lower) > 2:
            return "male"
    
    return "unknown"

def create_literary_instagram_book_html(content: dict, analysis: dict, images: list[Path]) -> str:
    """–°–æ–∑–¥–∞–µ—Ç HTML —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫—É—é –∫–Ω–∏–≥—É-–ø–æ–¥–∞—Ä–æ–∫ –æ—Ç —á–µ–ª–æ–≤–µ–∫–∞ –∫ —á–µ–ª–æ–≤–µ–∫—É"""
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º fullName –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–µ –∏–º—è
    full_name = analysis.get('full_name', analysis.get('username', '–¥–æ—Ä–æ–≥–æ–π —á–µ–ª–æ–≤–µ–∫'))
    username = analysis.get('username', 'friend')
    followers = analysis.get('followers', 0)
    posts_count = analysis.get('posts_count', 0)
    bio = analysis.get('bio', '')
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–∏–¥–µ–æ –∏ —Ä–∏–ª—Å—ã –∏–∑ –ø–æ—Å—Ç–æ–≤
    video_content = []
    real_captions = []
    locations = []
    
    # –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –≤–∏–¥–µ–æ –∏ –ø–æ—Å—Ç–∞—Ö
    post_details = analysis.get('post_details', [])
    for post in post_details[:10]:  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 10 –ø–æ—Å—Ç–æ–≤
        if post.get('caption'):
            real_captions.append(post['caption'])
        if post.get('location'):
            locations.append(post['location'])
        if post.get('type') in ['video', 'reel']:
            video_content.append({
                'type': post.get('type'),
                'caption': post.get('caption', ''),
                'alt': post.get('alt', '')
            })
    
    # AI-–∞–Ω–∞–ª–∏–∑ –¥–ª—è –ø–µ—Ä–≤—ã—Ö 3 —Ä–∏–ª—Å–æ–≤
    from app.services.media_analyzer import MediaAnalysisRequest, analyze_media_item
    analyzed_reels = []
    for reel in video_content[:3]:
        try:
            req = MediaAnalysisRequest(
                image_path=None,
                caption=reel.get('caption',''),
                alt_text=reel.get('alt',''),
                media_type='reel'
            )
            res = analyze_media_item(req)
            reel['analysis'] = res.description
            reel['mood'] = res.mood
            analyzed_reels.append(reel)
        except Exception as e:
            print(f"media_analyzer reel error: {e}")
            reel['analysis'] = '–î–∏–Ω–∞–º–∏—á–Ω—ã–π –º–æ–º–µ–Ω—Ç, –Ω–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–π —ç–Ω–µ—Ä–≥–∏–µ–π'
            analyzed_reels.append(reel)
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–†–ê–ù–î–û–ú–ù–´–ô –≤—ã–±–æ—Ä - –Ω–µ –ø–æ–¥—Ä—è–¥!)
    processed_images = []
    detected_gender = "unknown"
    selected_photo_data = []  # –î–∞–Ω–Ω—ã–µ –æ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
    
    if images:
        # –ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê: –†–ê–ù–î–û–ú–ù–´–ô –≤—ã–±–æ—Ä 7 —Ñ–æ—Ç–æ –∏–∑ –≤—Å–µ–≥–æ –º–∞—Å—Å–∏–≤–∞
        import random
        
        total_images = len(images)
        print(f"üì∏ –í—Å–µ–≥–æ —Ñ–æ—Ç–æ –≤ –ø—Ä–æ—Ñ–∏–ª–µ: {total_images}")
        
        if total_images >= 7:
            # –ï—Å–ª–∏ —Ñ–æ—Ç–æ –º–Ω–æ–≥–æ - –±–µ—Ä–µ–º 7 —Å–ª—É—á–∞–π–Ω—ã—Ö –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–æ–≤
            selected_indices = random.sample(range(total_images), 7)
            selected_indices.sort()  # –°–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
        elif total_images >= 4:
            # –ï—Å–ª–∏ —Ñ–æ—Ç–æ –º–∞–ª–æ - –±–µ—Ä–µ–º –≤—Å–µ + –¥–æ–±–∞–≤–ª—è–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –¥—É–±–ª–∏ –¥–æ 7
            selected_indices = list(range(total_images))
            while len(selected_indices) < 7:
                random_idx = random.randint(0, total_images - 1)
                selected_indices.append(random_idx)
        else:
            # –ï—Å–ª–∏ —Ñ–æ—Ç–æ –æ—á–µ–Ω—å –º–∞–ª–æ - –¥—É–±–ª–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –¥–æ 7
            selected_indices = []
            for _ in range(7):
                random_idx = random.randint(0, total_images - 1)
                selected_indices.append(random_idx)
        
        print(f"üì∏ –†–∞–Ω–¥–æ–º–Ω—ã–π –≤—ã–±–æ—Ä: –∏–∑ {total_images} –≤—ã–±—Ä–∞–ª –ø–æ–∑–∏—Ü–∏–∏ {selected_indices}")
        
        # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–≤–æ–µ –í–´–ë–†–ê–ù–ù–û–ï —Ñ–æ—Ç–æ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ–ª–∞
        if images and selected_indices and images[selected_indices[0]].exists():
            print("üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –ø–µ—Ä–≤–æ–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–µ —Ñ–æ—Ç–æ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ–ª–∞...")
            detected_gender = analyze_photo_for_gender(images[selected_indices[0]])
            print(f"‚úÖ –û–ø—Ä–µ–¥–µ–ª–µ–Ω –ø–æ–ª: {detected_gender}")
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ (7 —à—Ç—É–∫ —Ä–∞–Ω–¥–æ–º–Ω–æ)
        for i, idx in enumerate(selected_indices):
            img_path = images[idx]
            if img_path.exists():
                try:
                    with Image.open(img_path) as img:
                        if img.mode != 'RGB':
                            img = img.convert('RGB')
                        
                        # –û–ø—Ç–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –¥–ª—è —á—Ç–µ–Ω–∏—è
                        max_size = (700, 500)
                        img.thumbnail(max_size, Image.Resampling.LANCZOS)
                        
                        # –ú—è–≥–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–≥–æ —Å—Ç–∏–ª—è
                        enhancer = ImageEnhance.Contrast(img)
                        img = enhancer.enhance(1.05)
                        enhancer = ImageEnhance.Color(img)
                        img = enhancer.enhance(1.1)
                        
                        buffer = BytesIO()
                        img.save(buffer, format='JPEG', quality=90)
                        img_str = base64.b64encode(buffer.getvalue()).decode()
                        processed_images.append(f"data:image/jpeg;base64,{img_str}")
                        
                        # –ò–ò –∞–Ω–∞–ª–∏–∑ —Ñ–æ—Ç–æ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ–ø–∏—Å–∞–Ω–∏—è (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π)
                        photo_analysis = ""
                        try:
                            print(f"üß† –ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ñ–æ—Ç–æ #{idx+1} –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è...")
                            
                            # –ü–æ–ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –∏–º–ø–æ—Ä—Ç–∞
                            try:
                                from app.services.media_analyzer import MediaAnalysisRequest, analyze_media_item
                                req = MediaAnalysisRequest(image_path=img_path)
                                ai_result = analyze_media_item(req)
                                photo_analysis = ai_result.description
                                print(f"‚úÖ –ò–ò –∞–Ω–∞–ª–∏–∑ —á–µ—Ä–µ–∑ media_analyzer: {photo_analysis[:50]}...")
                            except Exception as import_error:
                                print(f"‚ö†Ô∏è media_analyzer –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {import_error}")
                                
                                # Fallback: –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä—è–º–æ–π –∞–Ω–∞–ª–∏–∑ —á–µ—Ä–µ–∑ LLM
                                try:
                                    photo_analysis = analyze_photo_for_memoir(img_path, f"Instagram –ø—Ä–æ—Ñ–∏–ª—å @{username}", "first_impression")
                                    print(f"‚úÖ –ò–ò –∞–Ω–∞–ª–∏–∑ —á–µ—Ä–µ–∑ memoir: {photo_analysis[:50]}...")
                                except:
                                    photo_analysis = ""
                            
                            # –û–±—Ä–µ–∑–∞–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –µ—Å–ª–∏ –æ–Ω–æ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ
                            if photo_analysis and len(photo_analysis) > 120:
                                photo_analysis = photo_analysis[:117] + "..."
                                
                        except Exception as e:
                            print(f"‚ùå –û—à–∏–±–∫–∞ –ò–ò –∞–Ω–∞–ª–∏–∑–∞ —Ñ–æ—Ç–æ #{idx+1}: {e}")
                            photo_analysis = ""
                        
                        # –ï—Å–ª–∏ –ò–ò –∞–Ω–∞–ª–∏–∑ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª - –∏—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ fallback'—ã
                        if not photo_analysis or len(photo_analysis.strip()) < 10:
                            print(f"‚ö° –ò—Å–ø–æ–ª—å–∑—É—é fallback –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è —Ñ–æ—Ç–æ #{idx+1}")
                            fallback_descriptions = [
                                "–ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –∫—Ä–∞—Å–æ—Ç–∞ –≤ –∫–∞–∂–¥–æ–π –¥–µ—Ç–∞–ª–∏",
                                "–í–∑–≥–ª—è–¥, –ø–æ–ª–Ω—ã–π –≥–ª—É–±–∏–Ω—ã –∏ –∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç–∏", 
                                "–û—Å–æ–±–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ –∏ —Ö–∞—Ä–∏–∑–º–∞",
                                "–≠–º–æ—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –≥–æ–≤–æ—Ä—è—Ç –±–µ–∑ —Å–ª–æ–≤",
                                "–ú–∞–≥–Ω–µ—Ç–∏—á–µ—Å–∫–∞—è —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞ –ª–∏—á–Ω–æ—Å—Ç–∏",
                                "–ì—Ä–∞—Ü–∏—è –∏ —Å—Ç–∏–ª—å –≤ –∫–∞–∂–¥–æ–º –¥–≤–∏–∂–µ–Ω–∏–∏",
                                "–ú–æ–º–µ–Ω—Ç —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤–∞, –∑–∞—Å—Ç—ã–≤—à–∏–π –≤ –∫–∞–¥—Ä–µ"
                            ]
                            photo_analysis = fallback_descriptions[i % len(fallback_descriptions)]
                        
                        selected_photo_data.append({
                            'index': idx + 1,  # –ù–æ–º–µ—Ä —Ñ–æ—Ç–æ –≤ –ø—Ä–æ—Ñ–∏–ª–µ
                            'analysis': photo_analysis,
                            'image': f"data:image/jpeg;base64,{img_str}"
                        })
                        
                        print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–æ—Ç–æ #{idx+1} –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è: '{photo_analysis[:30]}...'")
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è {img_path}: {e}")
    
    # Helper function for safely getting photo analysis from the list
    def get_safe_photo_analysis(index: int, fallback_text: str) -> str:
        """Safely gets photo analysis, cycling through available photos."""
        if not selected_photo_data:
            return fallback_text
        # Cycle through the available photos using modulo
        safe_index = index % len(selected_photo_data)
        return selected_photo_data[safe_index]['analysis']
    
    # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –ò–ò —Å –∞–Ω–∞–ª–∏–∑–æ–º —Ñ–æ—Ç–æ
    context_data = {
        'username': username,
        'full_name': full_name,
        'followers': followers,
        'posts_count': posts_count,
        'bio': bio,
        'captions': real_captions[:5],  # –ü–µ—Ä–≤—ã–µ 5 –ø–æ–¥–ø–∏—Å–µ–π
        'locations': locations[:3],     # –ü–µ—Ä–≤—ã–µ 3 –ª–æ–∫–∞—Ü–∏–∏
        'video_content': analyzed_reels[:3],  # –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–∏–ª—Å—ã
        'has_videos': len(analyzed_reels) > 0,
        'selected_photos': selected_photo_data  # –î–∞–Ω–Ω—ã–µ –æ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ
    }
    
    # –°–æ–∑–¥–∞–µ–º 10 –ø–æ–¥—Ä–æ–±–Ω—ã—Ö –≥–ª–∞–≤ —Å –ø–æ–º–æ—â—å—é –ò–ò
    chapters = {}
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª —á–µ—Ä–µ–∑ –ò–ò –≤–º–µ—Å—Ç–æ –∂–µ—Å—Ç–∫–æ–π –ª–æ–≥–∏–∫–∏
    print(f"üß† –ò–ò –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–æ–ª –¥–ª—è {full_name}...")
    gender_data = analyze_gender_with_ai(full_name, detected_gender)
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –æ—Ç–≤–µ—Ç–∞ –ò–ò
    gender = gender_data['gender']
    gender_word = gender_data['gender_word']
    she_he = gender_data['she_he']
    her_his = gender_data['her_his']
    love_word = gender_data['love_word']
    
    print(f"‚úÖ –ò–ò –æ–ø—Ä–µ–¥–µ–ª–∏–ª: {gender} - –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å '{she_he}', '{her_his}'")
    
    # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –ø–æ—Å—Ç—ã –¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    real_post_analysis = []
    for i, post in enumerate(post_details[:3]):  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 3 –ø–æ—Å—Ç–∞
        post_summary = {
            'caption': post.get('caption', '')[:100] + '...' if len(post.get('caption', '')) > 100 else post.get('caption', ''),
            'location': post.get('location', ''),
            'likes': post.get('likes', 0),
            'type': post.get('type', 'photo')
        }
        real_post_analysis.append(post_summary)
    
    chapter_configs = [
        {
            'key': 'meeting',
            'title': '–ò—Å—Ç–æ—Ä–∏—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞',
            'emotional_intro': '–î–æ—Ä–æ–≥–æ–π {username}, —è –¥–æ–ª–≥–æ –¥—É–º–∞–ª, —á—Ç–æ –ø–æ–¥–∞—Ä–∏—Ç—å —Ç–µ–±–µ...',
            'prompt': f"""–ù–∞–ø–∏—à–∏ –≥–ª–∞–≤—É "–ò—Å—Ç–æ—Ä–∏—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞" —Å {full_name} –æ—Ç –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞ (5-6 –∞–±–∑–∞—Ü–µ–≤).
            
            –ü–û–õ: {gender} ({'–¥–µ–≤—É—à–∫–∞' if gender == 'female' else '–ø–∞—Ä–µ–Ω—å'}) - –∏—Å–ø–æ–ª—å–∑—É–π "{she_he}", "{her_his}"
            
            –ù–ê–ß–ù–ò —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ –∏ –ª–∏—á–Ω–æ: "–î–æ—Ä–æ–≥–æ–π {full_name}, —è –¥–æ–ª–≥–æ –¥—É–º–∞–ª, —á—Ç–æ –ø–æ–¥–∞—Ä–∏—Ç—å —Ç–µ–±–µ..."
            
            –ê–ù–ê–õ–ò–ó –ü–ï–†–í–û–ì–û –§–û–¢–û:
            {get_safe_photo_analysis(0, '–§–æ—Ç–æ —Å—Ä–∞–∑—É –∑–∞—Ü–µ–ø–∏–ª–æ –≤–∑–≥–ª—è–¥')}
            
            –°–¢–†–£–ö–¢–£–†–ê –ì–õ–ê–í–´:
            1. –ê–±–∑–∞—Ü: –õ–∏—á–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∏ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è –æ –ø–æ–¥–∞—Ä–∫–µ
            2. –ê–±–∑–∞—Ü: –ö–∞–∫ –≤—Å–µ –Ω–∞—á–∞–ª–æ—Å—å - –ª–∏—Å—Ç–∞–ª Instagram, —É–≤–∏–¥–µ–ª —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å
            3. –ê–±–∑–∞—Ü: –ü–µ—Ä–≤–æ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ –æ—Ç –ø—Ä–æ—Ñ–∏–ª—è –∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
            4. –ê–±–∑–∞—Ü: –ß—Ç–æ –∑–∞—Å—Ç–∞–≤–∏–ª–æ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –∏ –∏–∑—É—á–∞—Ç—å –¥–∞–ª—å—à–µ
            5. –ê–±–∑–∞—Ü: –¢–≤–æ—è –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å - —É–º–µ–Ω–∏–µ –Ω–∞—Ö–æ–¥–∏—Ç—å –∫—Ä–∞—Å–æ—Ç—É
            6. –ê–±–∑–∞—Ü: –ß—Ç–æ —Ç—ã –∑–Ω–∞—á–∏—à—å –¥–ª—è –º–µ–Ω—è, –¥–∞–∂–µ –Ω–µ –∑–Ω–∞—è –æ–± —ç—Ç–æ–º
            
            –°–¢–ò–õ–¨:
            - –û—á–µ–Ω—å –ª–∏—á–Ω—ã–π, –∏–Ω—Ç–∏–º–Ω—ã–π —Ç–æ–Ω
            - –ü—Ä—è–º—ã–µ –æ–±—Ä–∞—â–µ–Ω–∏—è: "—Ç–µ–±–µ", "—Ç–≤–æ–π", "—Ç—ã"
            - –ü–æ–¥—Ä–æ–±–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è —á—É–≤—Å—Ç–≤ –∏ —ç–º–æ—Ü–∏–π
            - –†–æ–º–∞–Ω—Ç–∏—á–Ω—ã–µ –º–µ—Ç–∞—Ñ–æ—Ä—ã: "–æ—Å–æ–±–æ–µ —Å–∏—è–Ω–∏–µ", "–º–∞–≥–Ω–µ—Ç–∏–∑–º"
            - –§–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–µ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è –æ –∫—Ä–∞—Å–æ—Ç–µ
            - –¢–µ–ø–ª—ã–µ, –∏—Å–∫—Ä–µ–Ω–Ω–∏–µ –ø—Ä–∏–∑–Ω–∞–Ω–∏—è
            
            –†–ï–ê–õ–¨–ù–´–ï –î–ê–ù–ù–´–ï:
            - –ò–º—è: {full_name}
            - Username: @{username}  
            - –ü–æ–¥–ø–∏—Å—á–∏–∫–∏: {followers}
            - –†–µ–∞–ª—å–Ω–∞—è –ø–æ–¥–ø–∏—Å—å: "{real_captions[0] if real_captions else '—Ç–≤–æ—è –∑–∞–≥–∞–¥–æ—á–Ω–∞—è –ø–æ–¥–ø–∏—Å—å'}"
            
            –ë–ï–ó —Ö—ç—à—Ç–µ–≥–æ–≤ –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤. –ü–∏—à–∏ –∫–∞–∫ —Ä–æ–º–∞–Ω—Ç–∏—á–Ω–æ–µ –ø–∏—Å—å–º–æ –æ—Ç –≤–ª—é–±–ª–µ–Ω–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞."""
        },
        {
            'key': 'first_impression', 
            'title': '–ü–µ—Ä–≤—ã–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è',
            'emotional_intro': '–ó–Ω–∞–µ—à—å, —á—Ç–æ –º–µ–Ω—è –ø–æ—Ä–∞–∑–∏–ª–æ –≤ –ø–µ—Ä–≤—ã–µ –º–∏–Ω—É—Ç—ã –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ —Å —Ç–≤–æ–∏–º –ø—Ä–æ—Ñ–∏–ª–µ–º?',
            'prompt': f"""–ù–∞–ø–∏—à–∏ –≥–ª–∞–≤—É "–ü–µ—Ä–≤—ã–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è" –æ—Ç {full_name} (5-6 –∞–±–∑–∞—Ü–µ–≤).
            
            –ü–û–õ: {gender} - –∏—Å–ø–æ–ª—å–∑—É–π "{she_he}", "{her_his}"
            
            –ù–ê–ß–ù–ò —Å –≤–æ—Å—Ö–∏—â–µ–Ω–∏—è: "–ó–Ω–∞–µ—à—å, —á—Ç–æ –º–µ–Ω—è –ø–æ—Ä–∞–∑–∏–ª–æ –≤ –ø–µ—Ä–≤—ã–µ –º–∏–Ω—É—Ç—ã –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ —Å —Ç–≤–æ–∏–º –ø—Ä–æ—Ñ–∏–ª–µ–º?"
            
            –ê–ù–ê–õ–ò–ó –í–¢–û–†–û–ì–û –§–û–¢–û:
            {get_safe_photo_analysis(1, '–ö–∞–∂–¥–æ–µ —Ñ–æ—Ç–æ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é')}
            
            –°–¢–†–£–ö–¢–£–†–ê –ì–õ–ê–í–´:
            1. –ê–±–∑–∞—Ü: –ß—Ç–æ –ø–æ—Ä–∞–∑–∏–ª–æ —Å –ø–µ—Ä–≤–æ–≥–æ –≤–∑–≥–ª—è–¥–∞ - –∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç—å
            2. –ê–±–∑–∞—Ü: –ê–Ω–∞–ª–∏–∑ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π - –æ—Å–æ–±–∞—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ –≤ –∫–∞–∂–¥–æ–º –∫–∞–¥—Ä–µ
            3. –ê–±–∑–∞—Ü: –ü–æ–¥–ø–∏—Å–∏ –∫ —Ñ–æ—Ç–æ –∏ –∏—Ö –≥–ª—É–±–∏–Ω–∞
            4. –ê–±–∑–∞—Ü: –ò–∑—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –≤ –¥–µ—Ç–∞–ª—è—Ö - –∫–∞–∂–¥—ã–π –∫–∞–¥—Ä —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é
            5. –ê–±–∑–∞—Ü: –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–Ω–µ—à–Ω–æ—Å—Ç–∏ - —á–µ—Ä—Ç—ã –ª–∏—Ü–∞, –≥–ª–∞–∑–∞, —É–ª—ã–±–∫–∞
            6. –ê–±–∑–∞—Ü: –ó–∞–∫–ª—é—á–µ–Ω–∏–µ –æ —á–µ—Å—Ç–Ω–æ—Å—Ç–∏ –∏ –æ—Ç–∫—Ä—ã—Ç–æ—Å—Ç–∏
            
            –î–ï–¢–ê–õ–¨–ù–´–ï –û–ü–ò–°–ê–ù–ò–Ø:
            - –ß–µ—Ä—Ç—ã –ª–∏—Ü–∞: "–ø—Ä–µ–∫—Ä–∞—Å–Ω—ã–µ —á–µ—Ä—Ç—ã –ª–∏—Ü–∞ - –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ, –≥–∞—Ä–º–æ–Ω–∏—á–Ω—ã–µ"
            - –ì–ª–∞–∑–∞: "–æ—Å–æ–±–µ–Ω–Ω–æ –≤—ã—Ä–∞–∑–∏—Ç–µ–ª—å–Ω—ã - –≤ –Ω–∏—Ö —á–∏—Ç–∞–µ—Ç—Å—è —É–º, –¥–æ–±—Ä–æ—Ç–∞ –∏ –≥–ª—É–±–∏–Ω–∞ –¥—É—à–∏"
            - –£–ª—ã–±–∫–∞: "–æ—Å–≤–µ—â–∞–µ—Ç –≤—Å—ë –≤–æ–∫—Ä—É–≥, –Ω–µ –Ω–∞–∏–≥—Ä–∞–Ω–Ω–∞—è, –∞ –Ω–∞—Å—Ç–æ—è—â–∞—è"
            - –û–±—â–µ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ: –º–Ω–æ–≥–æ–≥—Ä–∞–Ω–Ω–∞—è –∫—Ä–∞—Å–æ—Ç–∞
            
            –ö–û–ù–ö–†–ï–¢–ù–ê–Ø –ü–û–î–ü–ò–°–¨: "{real_captions[0] if real_captions else '—Ç–≤–æ—è –æ—Å–æ–±–µ–Ω–Ω–∞—è –ø–æ–¥–ø–∏—Å—å'}"
            
            –ü–∏—à–∏ –∫–∞–∫ –ø–æ–¥—Ä–æ–±–Ω—ã–π –ø–æ—Ä—Ç—Ä–µ—Ç –ª—é–±–∏–º–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞."""  
        },
        {
            'key': 'world_view',
            'title': '–¢–≤–æ–π –≤–∑–≥–ª—è–¥ –Ω–∞ –º–∏—Ä',
            'emotional_intro': '–ë–æ–ª—å—à–µ –≤—Å–µ–≥–æ –º–µ–Ω—è –ø–æ—Ä–∞–∂–∞–µ—Ç —Ç–æ, –∫–∞–∫ —Ç—ã –≤–∏–¥–∏—à—å –º–∏—Ä –≤–æ–∫—Ä—É–≥ —Å–µ–±—è...',
            'prompt': f"""–ù–∞–ø–∏—à–∏ –≥–ª–∞–≤—É "–¢–≤–æ–π –≤–∑–≥–ª—è–¥ –Ω–∞ –º–∏—Ä" –æ {full_name} (5-6 –∞–±–∑–∞—Ü–µ–≤).
            
            –ü–û–õ: {gender} - –∏—Å–ø–æ–ª—å–∑—É–π "{she_he}", "{her_his}"
            
            –ù–ê–ß–ù–ò —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–µ–º: "–ë–æ–ª—å—à–µ –≤—Å–µ–≥–æ –º–µ–Ω—è –ø–æ—Ä–∞–∂–∞–µ—Ç —Ç–æ, –∫–∞–∫ —Ç—ã –≤–∏–¥–∏—à—å –º–∏—Ä –≤–æ–∫—Ä—É–≥ —Å–µ–±—è..."
            
            –ê–ù–ê–õ–ò–ó –¢–†–ï–¢–¨–ï–ì–û –§–û–¢–û:
            {get_safe_photo_analysis(2, '–î—É—à–∞, –≤–∏–¥–Ω–∞—è –≤ —Ç–≤–æ—Ä—á–µ—Å—Ç–≤–µ')}
            
            –°–¢–†–£–ö–¢–£–†–ê –ì–õ–ê–í–´:
            1. –ê–±–∑–∞—Ü: –°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –Ω–∞—Ö–æ–¥–∏—Ç—å –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ –≤ –æ–±—ã–¥–µ–Ω–Ω–æ–º
            2. –ê–±–∑–∞—Ü: –ê–Ω–∞–ª–∏–∑ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏ –∏ –≤—ã–±–æ—Ä–∞ –º–æ–º–µ–Ω—Ç–æ–≤
            3. –ê–±–∑–∞—Ü: –î–≤–∏–∂–µ–Ω–∏–µ –∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –≤ –∫–∞–¥—Ä–∞—Ö
            4. –ê–±–∑–∞—Ü: –ü–æ–¥–ø–∏—Å–∏ –∫–∞–∫ –æ–∫–Ω–æ –≤ –¥—É—à—É
            5. –ê–±–∑–∞—Ü: –í–Ω–µ—à–Ω–æ—Å—Ç—å –∫–∞–∫ –æ—Ç—Ä–∞–∂–µ–Ω–∏–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –º–∏—Ä–∞ - –æ–ø–∏—Å–∞–Ω–∏–µ
            6. –ê–±–∑–∞—Ü: –î–∞—Ä –≤–∏–¥–µ—Ç—å –∫—Ä–∞—Å–æ—Ç—É - —Ä–µ–¥–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ
            
            –î–ï–¢–ê–õ–¨–ù–´–ï –û–ü–ò–°–ê–ù–ò–Ø –í–ù–ï–®–ù–û–°–¢–ò:
            - "–¢–≤–æ—è –≤–Ω–µ—à–Ω–æ—Å—Ç—å –æ—Ç—Ä–∞–∂–∞–µ—Ç —Ç–≤–æ–π –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –º–∏—Ä"
            - "–¢—ã –∫—Ä–∞—Å–∏–≤ —Ç–æ–π –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∫—Ä–∞—Å–æ—Ç–æ–π, –∫–æ—Ç–æ—Ä–∞—è –Ω–µ –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤ –ø—Ä–∏–∫—Ä–∞—Å–∞—Ö"
            - "–¢–≤–æ–µ –ª–∏—Ü–æ –æ—Ç–∫—Ä—ã—Ç–æ–µ, —á–µ—Å—Ç–Ω–æ–µ, –≤ –Ω–µ–º –Ω–µ—Ç –Ω–∏ —Ç–µ–Ω–∏ –ª–∂–∏"
            - "–¢–≤–æ–∏ —á–µ—Ä—Ç—ã –±–ª–∞–≥–æ—Ä–æ–¥–Ω—ã - –≤—ã—Å–æ–∫–∏–π –ª–æ–± –≥–æ–≤–æ—Ä–∏—Ç –æ–± —É–º–µ, –≤—ã—Ä–∞–∑–∏—Ç–µ–ª—å–Ω—ã–µ –≥–ª–∞–∑–∞ - –æ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏"
            - "–£ —Ç–µ–±—è –ø—Ä–µ–∫—Ä–∞—Å–Ω–∞—è –æ—Å–∞–Ω–∫–∞ - —Ç—ã –¥–µ—Ä–∂–∏—à—å—Å—è —Å –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–æ–º"
            
            –ë–ò–û: "{bio if bio else '–¢–≤–æ–µ –º–æ–ª—á–∞–Ω–∏–µ –≥–æ–≤–æ—Ä–∏—Ç –±–æ–ª—å—à–µ –ª—é–±—ã—Ö —Å–ª–æ–≤'}"
            
            –ü–∏—à–∏ –∫–∞–∫ –≥–ª—É–±–æ–∫–∏–π –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –ø–æ—Ä—Ç—Ä–µ—Ç."""
        },
        {
            'key': 'memorable_moments',
            'title': '–ú–æ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–ø–æ–º–Ω–∏–ª–∏—Å—å',
            'emotional_intro': '–ï—Å—Ç—å –∫–∞–¥—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤—Ä–µ–∑–∞—é—Ç—Å—è –≤ –ø–∞–º—è—Ç—å –Ω–∞–≤—Å–µ–≥–¥–∞...',
            'prompt': f"""–ù–∞–ø–∏—à–∏ –≥–ª–∞–≤—É "–ú–æ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–ø–æ–º–Ω–∏–ª–∏—Å—å" –æ {full_name} (5-6 –∞–±–∑–∞—Ü–µ–≤).
            
            –ü–û–õ: {gender} - –∏—Å–ø–æ–ª—å–∑—É–π "{she_he}", "{her_his}"
            
            –ù–ê–ß–ù–ò —Å –ø—Ä–∏–∑–Ω–∞–Ω–∏—è: "–ï—Å—Ç—å –∫–∞–¥—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤—Ä–µ–∑–∞—é—Ç—Å—è –≤ –ø–∞–º—è—Ç—å –Ω–∞–≤—Å–µ–≥–¥–∞..."
            
            –ê–ù–ê–õ–ò–ó –ß–ï–¢–í–ï–†–¢–û–ì–û –§–û–¢–û:
            {get_safe_photo_analysis(3, '–û—Å–æ–±—ã–µ –º–æ–º–µ–Ω—Ç—ã –≤ –∫–∞–¥—Ä–µ')}
            
            –°–¢–†–£–ö–¢–£–†–ê –ì–õ–ê–í–´:
            1. –ê–±–∑–∞—Ü: –û—Å–æ–±—ã–µ –∫–∞–¥—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –∑–∞–ø–æ–º–Ω–∏–ª–∏—Å—å –Ω–∞–≤—Å–µ–≥–¥–∞
            2. –ê–±–∑–∞—Ü: –ö–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è - –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏—è
            3. –ê–±–∑–∞—Ü: –ü–æ–¥–ø–∏—Å—å "{real_captions[0] if real_captions else 'ü§†'}" - –∫–∞–∫ –æ–Ω–∞ –æ—Ç–∫—Ä—ã–ª–∞ —á–∞—Å—Ç—å –¥—É—à–∏
            4. –ê–±–∑–∞—Ü: –ß–µ—Å—Ç–Ω–æ—Å—Ç—å —ç–º–æ—Ü–∏–π - –Ω–µ –±–æ–∏—à—å—Å—è –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –Ω–∞—Å—Ç–æ—è—â–∏–µ —á—É–≤—Å—Ç–≤–∞
            5. –ê–±–∑–∞—Ü: –ñ–∏–≤–∞—è –∫—Ä–∞—Å–æ—Ç–∞ - –æ–ø–∏—Å–∞–Ω–∏–µ –≥–ª–∞–∑ –∏ –∏—Ö –≤—ã—Ä–∞–∑–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
            6. –ê–±–∑–∞—Ü: –ò—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç—å –∫–∞–∫ –≥–ª–∞–≤–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ
            
            –î–ï–¢–ê–õ–¨–ù–´–ï –û–ü–ò–°–ê–ù–ò–Ø:
            - "–¢–≤–æ—è –∫—Ä–∞—Å–æ—Ç–∞ –Ω–µ —Å—Ç–∞—Ç–∏—á–Ω–∞ - –æ–Ω–∞ –∂–∏–≤–∞—è, –º–µ–Ω—è—é—â–∞—è—Å—è"
            - "–¢–≤–æ–∏ –≥–ª–∞–∑–∞ - —ç—Ç–æ –æ—Ç–¥–µ–ª—å–Ω–∞—è –ø–æ—ç–º–∞. –û–Ω–∏ –≥–ª—É–±–æ–∫–∏–µ, –≤—ã—Ä–∞–∑–∏—Ç–µ–ª—å–Ω—ã–µ"
            - "–ö–æ–≥–¥–∞ —Ç—ã —Ä–∞–¥—É–µ—à—å—Å—è, –æ–Ω–∏ —Å–∏—è—é—Ç –æ—Å–æ–±—ã–º —Å–≤–µ—Ç–æ–º"
            - "–ö–æ–≥–¥–∞ –∑–∞–¥—É–º—ã–≤–∞–µ—à—å—Å—è - —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è –≥–ª—É–±–æ–∫–∏–º–∏ –æ–∑–µ—Ä–∞–º–∏ –º—É–¥—Ä–æ—Å—Ç–∏"
            - "–í –∫–∞–∂–¥–æ–º –¥–≤–∏–∂–µ–Ω–∏–∏, –≤ –∫–∞–∂–¥–æ–º –≤–∑–≥–ª—è–¥–µ —á—É–≤—Å—Ç–≤—É–µ—Ç—Å—è –ª–∏—á–Ω–æ—Å—Ç—å"
            - "–¢–≤–æ—è —É–ª—ã–±–∫–∞ - —ç—Ç–æ —Ç–≤–æ—è –≤–∏–∑–∏—Ç–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞"
            
            –ü–∏—à–∏ –∫–∞–∫ –¥–Ω–µ–≤–Ω–∏–∫ –Ω–∞–±–ª—é–¥–µ–Ω–∏–π –≤–ª—é–±–ª–µ–Ω–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞."""
        },
        {
            'key': 'energy',
            'title': '–¢–≤–æ—è —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞',
            'emotional_intro': '–í —Ç–µ–±–µ –µ—Å—Ç—å –æ—Å–æ–±–∞—è —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞, –∫–æ—Ç–æ—Ä–∞—è —á—É–≤—Å—Ç–≤—É–µ—Ç—Å—è –¥–∞–∂–µ —á–µ—Ä–µ–∑ —ç–∫—Ä–∞–Ω —Ç–µ–ª–µ—Ñ–æ–Ω–∞...',
            'prompt': f"""–ù–∞–ø–∏—à–∏ –≥–ª–∞–≤—É "–¢–≤–æ—è —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞" –æ {full_name} (5-6 –∞–±–∑–∞—Ü–µ–≤).
            
            –ü–û–õ: {gender} - –∏—Å–ø–æ–ª—å–∑—É–π "{she_he}", "{her_his}"
            
            –ù–ê–ß–ù–ò —Å –Ω–∞–±–ª—é–¥–µ–Ω–∏—è: "–í —Ç–µ–±–µ –µ—Å—Ç—å –æ—Å–æ–±–∞—è —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞, –∫–æ—Ç–æ—Ä–∞—è —á—É–≤—Å—Ç–≤—É–µ—Ç—Å—è –¥–∞–∂–µ —á–µ—Ä–µ–∑ —ç–∫—Ä–∞–Ω —Ç–µ–ª–µ—Ñ–æ–Ω–∞..."
            
            –ê–ù–ê–õ–ò–ó –ü–Ø–¢–û–ì–û –§–û–¢–û:
            {get_safe_photo_analysis(4, '–≠–Ω–µ—Ä–≥–∏—è, –≤–∏–¥–Ω–∞—è –≤ –∫–∞–∂–¥–æ–º –∫–∞–¥—Ä–µ')}
            
            –°–¢–†–£–ö–¢–£–†–ê –ì–õ–ê–í–´:
            1. –ê–±–∑–∞—Ü: –û—Å–æ–±–∞—è —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞, –∫–æ—Ç–æ—Ä–∞—è —á—É–≤—Å—Ç–≤—É–µ—Ç—Å—è —á–µ—Ä–µ–∑ —ç–∫—Ä–∞–Ω
            2. –ê–±–∑–∞—Ü: –£–º–µ–Ω–∏–µ –±—ã—Ç—å —Å–æ–±–æ–π –≤ –ª—é–±–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏
            3. –ê–±–∑–∞—Ü: –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å –∏ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –¥–∞–≤–∞—Ç—å —ç–Ω–µ—Ä–≥–∏—é –ª—é–¥—è–º
            4. –ê–±–∑–∞—Ü: –ê—É—Ä–∞ –¥–æ–±—Ä–æ—Ç—ã –∏ –ø–æ–∑–∏—Ç–∏–≤–∞
            5. –ê–±–∑–∞—Ü: –ü–æ–¥—Ä–æ–±–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è –≤–Ω–µ—à–Ω–æ—Å—Ç–∏ - –∫–æ–∂–∞, –≤–æ–ª–æ—Å—ã, —Ä—É–∫–∏
            6. –ê–±–∑–∞—Ü: –£–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –≤ –º–∏—Ä–µ –ø–æ—Ö–æ–∂–∏—Ö –ª—é–¥–µ–π
            
            –î–ï–¢–ê–õ–¨–ù–´–ï –û–ü–ò–°–ê–ù–ò–Ø –í–ù–ï–®–ù–û–°–¢–ò:
            - "–£ —Ç–µ–±—è –∫—Ä–∞—Å–∏–≤–∞—è –∫–æ–∂–∞ - –∑–¥–æ—Ä–æ–≤–∞—è, —Å–∏—è—é—â–∞—è, –æ–Ω–∞ –±—É–∫–≤–∞–ª—å–Ω–æ —Å–≤–µ—Ç–∏—Ç—Å—è –∏–∑–Ω—É—Ç—Ä–∏"
            - "–¢–≤–æ–∏ –≤–æ–ª–æ—Å—ã –∫—Ä–∞—Å–∏–≤—ã–µ, —É—Ö–æ–∂–µ–Ω–Ω—ã–µ, –æ–Ω–∏ –æ–±—Ä–∞–º–ª—è—é—Ç —Ç–≤–æ–µ –ª–∏—Ü–æ –∫–∞–∫ –∫–∞—Ä—Ç–∏–Ω—É –≤ —Ä–∞–º–µ"
            - "–¢–≤–æ–∏ —Ä—É–∫–∏ –∫—Ä–∞—Å–∏–≤—ã–µ –∏ –≤—ã—Ä–∞–∑–∏—Ç–µ–ª—å–Ω—ã–µ"
            - "–î–∞–∂–µ –ø—Ä–æ—Å—Ç–æ–π –∂–µ—Å—Ç —É —Ç–µ–±—è –ø–æ–ª—É—á–∞–µ—Ç—Å—è –≥—Ä–∞—Ü–∏–æ–∑–Ω—ã–º –∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º"
            - "–í —Ç–≤–æ–∏—Ö –¥–≤–∏–∂–µ–Ω–∏—è—Ö –µ—Å—Ç—å –æ—Å–æ–±–∞—è –ø–ª–∞—Å—Ç–∏–∫–∞ - —Ç—ã –¥–≤–∏–≥–∞–µ—à—å—Å—è –∫–∞–∫ —Ç–∞–Ω—Ü–æ—Ä"
            
            –ü–∏—à–∏ –∫–∞–∫ –≤–æ—Å—Ö–∏—â–µ–Ω–Ω—ã–π –ø–æ—Ä—Ç—Ä–µ—Ç —Ö–∞—Ä–∏–∑–º–∞—Ç–∏—á–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞."""
        },
        {
            'key': 'beauty_style',
            'title': '–û –∫—Ä–∞—Å–æ—Ç–µ –∏ —Å—Ç–∏–ª–µ',
            'emotional_intro': '–ö—Ä–∞—Å–æ—Ç–∞ - –ø–æ–Ω—è—Ç–∏–µ —Å—É–±—ä–µ–∫—Ç–∏–≤–Ω–æ–µ, –Ω–æ –≤ —Ç–≤–æ–µ–º —Å–ª—É—á–∞–µ –æ–Ω–∞ –æ—á–µ–≤–∏–¥–Ω–∞ –¥–ª—è –≤—Å–µ—Ö...',
            'prompt': f"""–ù–∞–ø–∏—à–∏ –≥–ª–∞–≤—É "–û –∫—Ä–∞—Å–æ—Ç–µ –∏ —Å—Ç–∏–ª–µ" –æ {full_name} (5-6 –∞–±–∑–∞—Ü–µ–≤).
            
            –ü–û–õ: {gender} - –∏—Å–ø–æ–ª—å–∑—É–π "{she_he}", "{her_his}"
            
            –ù–ê–ß–ù–ò —Å —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: "–ö—Ä–∞—Å–æ—Ç–∞ - –ø–æ–Ω—è—Ç–∏–µ —Å—É–±—ä–µ–∫—Ç–∏–≤–Ω–æ–µ, –Ω–æ –≤ —Ç–≤–æ–µ–º —Å–ª—É—á–∞–µ –æ–Ω–∞ –æ—á–µ–≤–∏–¥–Ω–∞ –¥–ª—è –≤—Å–µ—Ö..."
            
            –ê–ù–ê–õ–ò–ó –®–ï–°–¢–û–ì–û –§–û–¢–û:
            {get_safe_photo_analysis(5, '–ö—Ä–∞—Å–æ—Ç–∞ –∏ —Å—Ç–∏–ª—å –≤ –∫–∞–∂–¥–æ–º –¥–≤–∏–∂–µ–Ω–∏–∏')}
            
            –°–¢–†–£–ö–¢–£–†–ê –ì–õ–ê–í–´:
            1. –ê–±–∑–∞—Ü: –ì–∞—Ä–º–æ–Ω–∏—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ –∏ –≤–Ω–µ—à–Ω–µ–≥–æ
            2. –ê–±–∑–∞—Ü: –í—Ä–æ–∂–¥–µ–Ω–Ω–æ–µ —á—É–≤—Å—Ç–≤–æ —Å—Ç–∏–ª—è –∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å
            3. –ê–±–∑–∞—Ü: –°–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è —ç—Å—Ç–µ—Ç–∏–∫–∞, –Ω–µ —Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Ç—Ä–µ–Ω–¥–∞–º
            4. –ê–±–∑–∞—Ü: –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ª–∏—Ü–∞ –∫–∞–∫ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∏—Å–∫—É—Å—Å—Ç–≤–∞
            5. –ê–±–∑–∞—Ü: –î–µ—Ç–∞–ª–∏ –∫—Ä–∞—Å–æ—Ç—ã - –±—Ä–æ–≤–∏, —Ä–µ—Å–Ω–∏—Ü—ã, –∫–æ–∂–∞, —É–ª—ã–±–∫–∞
            6. –ê–±–∑–∞—Ü: –ö—Ä–∞—Å–æ—Ç–∞ –¥—É—à–∏ —á–µ—Ä–µ–∑ –≤–Ω–µ—à–Ω–∏–µ –ø—Ä–æ—è–≤–ª–µ–Ω–∏—è
            
            –î–ï–¢–ê–õ–¨–ù–´–ï –û–ü–ò–°–ê–ù–ò–Ø –ö–†–ê–°–û–¢–´:
            - "–¢–≤–æ–µ –ª–∏—Ü–æ - —ç—Ç–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∏—Å–∫—É—Å—Å—Ç–≤–∞. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø—Ä–æ–ø–æ—Ä—Ü–∏–∏, –≤—ã—Ä–∞–∑–∏—Ç–µ–ª—å–Ω—ã–µ —á–µ—Ä—Ç—ã"
            - "–¢–≤–æ–π –Ω–æ—Å –∏–∑—è—â–Ω—ã–π –∏ –∞—Ä–∏—Å—Ç–æ–∫—Ä–∞—Ç–∏—á–Ω—ã–π. –¢–≤–æ–∏ —Å–∫—É–ª—ã –∫—Ä–∞—Å–∏–≤–æ –æ—á–µ—Ä—á–µ–Ω—ã"
            - "–£ —Ç–µ–±—è –∫—Ä–∞—Å–∏–≤—ã–µ –±—Ä–æ–≤–∏ - —á–µ—Ç–∫–∏–µ, –≤—ã—Ä–∞–∑–∏—Ç–µ–ª—å–Ω—ã–µ, –æ–Ω–∏ –∏–¥–µ–∞–ª—å–Ω–æ –æ–±—Ä–∞–º–ª—è—é—Ç —Ç–≤–æ–∏ –≥–ª–∞–∑–∞"
            - "–¢–≤–æ–∏ —Ä–µ—Å–Ω–∏—Ü—ã –¥–ª–∏–Ω–Ω—ã–µ –∏ –≥—É—Å—Ç—ã–µ, –æ–Ω–∏ —Å–æ–∑–¥–∞—é—Ç –∫—Ä–∞—Å–∏–≤—É—é —Ç–µ–Ω—å –Ω–∞ —â–µ–∫–∞—Ö"
            - "–¢–≤–æ—è –∫–æ–∂–∞ –±–µ–∑—É–ø—Ä–µ—á–Ω–∞ - –≥–ª–∞–¥–∫–∞—è, –∑–¥–æ—Ä–æ–≤–∞—è, —Å –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º —Å–∏—è–Ω–∏–µ–º"
            - "–ö–æ–≥–¥–∞ —Ç—ã —É–ª—ã–±–∞–µ—à—å—Å—è, —Ç–≤–æ–∏ –≥–ª–∞–∑–∞ –ø—Ä–∏—â—É—Ä–∏–≤–∞—é—Ç—Å—è –æ—Ç —Ä–∞–¥–æ—Å—Ç–∏, –Ω–∞ —â–µ–∫–∞—Ö –ø–æ—è–≤–ª—è—é—Ç—Å—è –º–∏–ª—ã–µ —è–º–æ—á–∫–∏"
            
            –ü–∏—à–∏ –∫–∞–∫ –ø–æ—ç—Ç–∏—á–µ—Å–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–¥–µ–∞–ª—å–Ω–æ–π –∫—Ä–∞—Å–æ—Ç—ã."""
        },
        {
            'key': 'mystery',
            'title': '–¢–≤–æ—è –∑–∞–≥–∞–¥–æ—á–Ω–æ—Å—Ç—å',
            'emotional_intro': '–í —Ç–µ–±–µ –µ—Å—Ç—å –æ—Å–æ–±–∞—è –∑–∞–≥–∞–¥–æ—á–Ω–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä–∞—è –Ω–µ –¥–∞–µ—Ç –ø–æ–∫–æ—è...',
            'prompt': f"""–ù–∞–ø–∏—à–∏ –≥–ª–∞–≤—É "–¢–≤–æ—è –∑–∞–≥–∞–¥–æ—á–Ω–æ—Å—Ç—å" –æ {full_name} (5-6 –∞–±–∑–∞—Ü–µ–≤).
            
            –ü–û–õ: {gender} - –∏—Å–ø–æ–ª—å–∑—É–π "{she_he}", "{her_his}"
            
            –ù–ê–ß–ù–ò —Å –∏–Ω—Ç—Ä–∏–≥–∏: "–í —Ç–µ–±–µ –µ—Å—Ç—å –æ—Å–æ–±–∞—è –∑–∞–≥–∞–¥–æ—á–Ω–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä–∞—è –Ω–µ –¥–∞–µ—Ç –ø–æ–∫–æ—è..."
            
            –ê–ù–ê–õ–ò–ó –°–ï–î–¨–ú–û–ì–û –§–û–¢–û:
            {get_safe_photo_analysis(6, '–ó–∞–≥–∞–¥–æ—á–Ω–æ—Å—Ç—å –≤ –∫–∞–∂–¥–æ–º –≤–∑–≥–ª—è–¥–µ')}
            
            –°–¢–†–£–ö–¢–£–†–ê –ì–õ–ê–í–´:
            1. –ê–±–∑–∞—Ü: –û—Å–æ–±–∞—è –∑–∞–≥–∞–¥–æ—á–Ω–æ—Å—Ç—å - –Ω–µ —ç—Ñ—Ñ–µ–∫—Ç, –∞ –≥–ª—É–±–∏–Ω–∞ –ª–∏—á–Ω–æ—Å—Ç–∏
            2. –ê–±–∑–∞—Ü: –ö–∞–∂–¥—ã–π –∫–∞–¥—Ä –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ
            3. –ê–±–∑–∞—Ü: –ò–Ω—Ç–µ—Ä–µ—Å –∫ —Ç–≤–æ–∏–º –º—ã—Å–ª—è–º –≤ –º–æ–º–µ–Ω—Ç—ã –∑–∞–¥—É–º—á–∏–≤–æ—Å—Ç–∏
            4. –ê–±–∑–∞—Ü: –ó–∞–≥–∞–¥–æ—á–Ω–æ—Å—Ç—å –≤–∑–≥–ª—è–¥–∞ –∏ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏—è –æ –≥–æ–ª–æ—Å–µ
            5. –ê–±–∑–∞—Ü: –û–ø–∏—Å–∞–Ω–∏–µ –ø–æ—Ö–æ–¥–∫–∏ –∏ –º–∞–Ω–µ—Ä—ã –¥–µ—Ä–∂–∞—Ç—å—Å—è
            6. –ê–±–∑–∞—Ü: –ï—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –∑–∞–≥–∞–¥–æ—á–Ω–æ—Å—Ç—å –º–Ω–æ–≥–æ–≥—Ä–∞–Ω–Ω–æ–π –ª–∏—á–Ω–æ—Å—Ç–∏
            
            –ü–†–ï–î–ü–û–õ–û–ñ–ï–ù–ò–Ø –ò –û–ü–ò–°–ê–ù–ò–Ø:
            - "–¢–≤–æ–π –≤–∑–≥–ª—è–¥ –æ—Å–æ–±–µ–Ω–Ω–æ –∑–∞–≥–∞–¥–æ—á–µ–Ω. –í –Ω–µ–º –µ—Å—Ç—å –≥–ª—É–±–∏–Ω–∞ –æ–∫–µ–∞–Ω–∞"
            - "–£ —Ç–µ–±—è –∫—Ä–∞—Å–∏–≤—ã–π –≥–æ–ª–æ—Å - –¥–∞–∂–µ –µ—Å–ª–∏ —è –µ–≥–æ –Ω–µ —Å–ª—ã—à–∞–ª, —è —á—É–≤—Å—Ç–≤—É—é –µ–≥–æ –ø–æ —Ç–≤–æ–µ–º—É –ª–∏—Ü—É"
            - "–î–æ–ª–∂–Ω–æ –±—ã—Ç—å, –æ–Ω –º–µ–ª–æ–¥–∏—á–Ω—ã–π, —Ç–µ–ø–ª—ã–π, —Å –æ—Å–æ–±—ã–º–∏ –∏–Ω—Ç–æ–Ω–∞—Ü–∏—è–º–∏"
            - "–¢–≤–æ—è –ø–æ—Ö–æ–¥–∫–∞, –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å, –≥—Ä–∞—Ü–∏–æ–∑–Ω–∞—è –∏ —É–≤–µ—Ä–µ–Ω–Ω–∞—è"
            - "–¢—ã –¥–≤–∏–≥–∞–µ—à—å—Å—è –∫–∞–∫ —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π –∑–Ω–∞–µ—Ç, —á–µ–≥–æ —Ö–æ—á–µ—Ç –æ—Ç –∂–∏–∑–Ω–∏"
            - "–í —Ç–≤–æ–∏—Ö –∂–µ—Å—Ç–∞—Ö –µ—Å—Ç—å —ç–ª–µ–≥–∞–Ω—Ç–Ω–æ—Å—Ç—å, –≤ —Ç–≤–æ–µ–π –º–∞–Ω–µ—Ä–µ –¥–µ—Ä–∂–∞—Ç—å—Å—è - –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–æ"
            
            –ü–∏—à–∏ –∫–∞–∫ –ø–æ–ø—ã—Ç–∫—É —Ä–∞–∑–≥–∞–¥–∞—Ç—å –ø—Ä–µ–∫—Ä–∞—Å–Ω—É—é —Ç–∞–π–Ω—É."""
        },
        {
            'key': 'influence_on_me',
            'title': '–í–ª–∏—è–Ω–∏–µ –Ω–∞ –º–µ–Ω—è',
            'emotional_intro': '–ó–Ω–∞–µ—à—å, —á—Ç–æ —Å—Ç—Ä–∞–Ω–Ω–æ? –¢—ã –∏–∑–º–µ–Ω–∏–ª –º–æ–π –≤–∑–≥–ª—è–¥ –Ω–∞ –º–Ω–æ–≥–∏–µ –≤–µ—â–∏...',
            'prompt': f"""–ù–∞–ø–∏—à–∏ –≥–ª–∞–≤—É "–í–ª–∏—è–Ω–∏–µ –Ω–∞ –º–µ–Ω—è" –æ {full_name} (5-6 –∞–±–∑–∞—Ü–µ–≤).
            
            –ü–û–õ: {gender} - –∏—Å–ø–æ–ª—å–∑—É–π "{she_he}", "{her_his}"
            
            –ù–ê–ß–ù–ò —Å —É–¥–∏–≤–ª–µ–Ω–∏—è: "–ó–Ω–∞–µ—à—å, —á—Ç–æ —Å—Ç—Ä–∞–Ω–Ω–æ? –¢—ã –∏–∑–º–µ–Ω–∏–ª –º–æ–π –≤–∑–≥–ª—è–¥ –Ω–∞ –º–Ω–æ–≥–∏–µ –≤–µ—â–∏..."
            
            –ê–ù–ê–õ–ò–ó –í–û–°–¨–ú–û–ì–û –§–û–¢–û (—Ü–∏–∫–ª–∏—á–µ—Å–∫–∏ –±–µ—Ä–µ–º –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö):
            {get_safe_photo_analysis(7, '–í–ª–∏—è–Ω–∏–µ, —á—Ç–æ –∏–∑–º–µ–Ω–∏–ª–æ –º–Ω–æ–≥–æ–µ')}
            
            –°–¢–†–£–ö–¢–£–†–ê –ì–õ–ê–í–´:
            1. –ê–±–∑–∞—Ü: –£–¥–∏–≤–ª–µ–Ω–∏–µ —Ç–æ–º—É, –∫–∞–∫ —Ç—ã –∏–∑–º–µ–Ω–∏–ª –∞–≤—Ç–æ—Ä–∞
            2. –ê–±–∑–∞—Ü: –ù–æ–≤–æ–µ –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –¥–µ—Ç–∞–ª—è–º –≤–æ–∫—Ä—É–≥
            3. –ê–±–∑–∞—Ü: –ö–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –ø–æ–¥–ø–∏—Å—å "{real_captions[0] if real_captions else 'ü§†...'}" –∏ –µ–µ –≤–ª–∏—è–Ω–∏–µ
            4. –ê–±–∑–∞—Ü: –ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è –∫—Ä–∞—Å–æ—Ç—ã –∏ –æ–±—ã—á–Ω—ã—Ö –≤–µ—â–µ–π
            5. –ê–±–∑–∞—Ü: –£—Ä–æ–∫–∏ –æ –Ω–∞—Å—Ç–æ—è—â–µ–π –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ –∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç–∏
            6. –ê–±–∑–∞—Ü: –í–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ –±—ã—Ç—å –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º –∏ –æ—Ç–∫—Ä—ã—Ç—ã–º
            
            –ö–û–ù–ö–†–ï–¢–ù–´–ï –ò–ó–ú–ï–ù–ï–ù–ò–Ø:
            - "–°—Ç–∞–ª –±–æ–ª—å—à–µ –≤–Ω–∏–º–∞–Ω–∏—è –æ–±—Ä–∞—â–∞—Ç—å –Ω–∞ –¥–µ—Ç–∞–ª–∏ –≤–æ–∫—Ä—É–≥ —Å–µ–±—è"
            - "–ò–≥—Ä—É —Å–≤–µ—Ç–∞ –≤ –æ–∫–Ω–µ –∫–∞—Ñ–µ, –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –ª–∏—Ü –ø—Ä–æ—Ö–æ–∂–∏—Ö"
            - "–¢–µ–ø–µ—Ä—å, –ø—Ä–æ—Ö–æ–¥—è –ø–æ —É–ª–∏—Ü–µ, —è –ª–æ–≤–ª—é —Å–µ–±—è –Ω–∞ –º—ã—Å–ª–∏: '–ê –∫–∞–∫ –±—ã —ç—Ç–æ —É–≤–∏–¥–µ–ª {full_name}?'"
            - "–¢—ã –ø–æ–∫–∞–∑–∞–ª –º–Ω–µ, —á—Ç–æ –∫—Ä–∞—Å–æ—Ç–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –¥–æ—Ä–æ–≥–∏—Ö –¥–µ–∫–æ—Ä–∞—Ü–∏–π"
            - "–ë–ª–∞–≥–æ–¥–∞—Ä—è —Ç–µ–±–µ —è –ø–æ–Ω—è–ª, —á—Ç–æ –Ω–∞—Å—Ç–æ—è—â–∞—è –ø—Ä–∏–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å - —ç—Ç–æ –Ω–µ —Ç–æ–ª—å–∫–æ –≤–Ω–µ—à–Ω–æ—Å—Ç—å"
            
            –ü–∏—à–∏ –∫–∞–∫ —á–µ—Å—Ç–Ω–æ–µ –ø—Ä–∏–∑–Ω–∞–Ω–∏–µ –æ —Ç–æ–º, –∫–∞–∫ —á–µ–ª–æ–≤–µ–∫ –∏–∑–º–µ–Ω–∏–ª —Ç–≤–æ—é –∂–∏–∑–Ω—å."""
        },
        {
            'key': 'observations',
            'title': '–ú–æ–∏ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è',
            'emotional_intro': '–ó–∞ –≤—Ä–µ–º—è –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –∑–∞ —Ç–æ–±–æ–π —è —Å–¥–µ–ª–∞–ª –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –æ—Ç–∫—Ä—ã—Ç–∏–π...',
            'prompt': f"""–ù–∞–ø–∏—à–∏ –≥–ª–∞–≤—É "–ú–æ–∏ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è" –æ {full_name} (5-6 –∞–±–∑–∞—Ü–µ–≤).
            
            –ü–û–õ: {gender} - –∏—Å–ø–æ–ª—å–∑—É–π "{she_he}", "{her_his}"
            
            –ù–ê–ß–ù–ò —Å –æ—Ç–∫—Ä—ã—Ç–∏—è: "–ó–∞ –≤—Ä–µ–º—è –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –∑–∞ —Ç–æ–±–æ–π —è —Å–¥–µ–ª–∞–ª –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –æ—Ç–∫—Ä—ã—Ç–∏–π..."
            
            –ê–ù–ê–õ–ò–ó –î–ï–í–Ø–¢–û–ì–û –§–û–¢–û (—Ü–∏–∫–ª–∏—á–µ—Å–∫–∏ –±–µ—Ä–µ–º –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö):
            {get_safe_photo_analysis(8, '–ù–∞–±–ª—é–¥–µ–Ω–∏—è –∑–∞ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—è–º–∏')}
            
            –°–¢–†–£–ö–¢–£–†–ê –ì–õ–ê–í–´:
            1. –ê–±–∑–∞—Ü: –í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫ –¥–µ—Ç–∞–ª—è–º –∏ –≥–ª–∞–∑ —Ö—É–¥–æ–∂–Ω–∏–∫–∞
            2. –ê–±–∑–∞—Ü: –£–º–µ–Ω–∏–µ –±—ã—Ç—å –≤ –º–æ–º–µ–Ω—Ç–µ, –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –Ω–∞–∏–≥—Ä–∞–Ω–Ω–æ—Å—Ç–∏
            3. –ê–±–∑–∞—Ü: –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –≤ –ø–æ—Å—Ç–∞—Ö
            4. –ê–±–∑–∞—Ü: –°–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –Ω–∞—Ö–æ–¥–∏—Ç—å –∫—Ä–∞—Å–æ—Ç—É –≤ –ø—Ä–æ—Å—Ç–æ—Ç–µ
            5. –ê–±–∑–∞—Ü: –ü–æ–¥—Ä–æ–±–Ω—ã–µ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è –æ –≤–Ω–µ—à–Ω–æ—Å—Ç–∏ - —Ñ–æ—Ç–æ–≥–µ–Ω–∏—á–Ω–æ—Å—Ç—å, —Ä—É–∫–∏, —Å—Ç–∏–ª—å
            6. –ê–±–∑–∞—Ü: –õ—é–±–æ–≤—å –∫ —Å–≤–µ—Ç—É –∏ —É–º–µ–Ω–∏–µ –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å, –æ—Å–∞–Ω–∫–∞
            
            –î–ï–¢–ê–õ–¨–ù–´–ï –ù–ê–ë–õ–Æ–î–ï–ù–ò–Ø:
            - "–¢–≤–æ–µ –ª–∏—Ü–æ –æ—á–µ–Ω—å —Ñ–æ—Ç–æ–≥–µ–Ω–∏—á–Ω–æ–µ. –£ —Ç–µ–±—è –Ω–µ—Ç '–ø–ª–æ—Ö–∏—Ö' —Ä–∞–∫—É—Ä—Å–æ–≤"
            - "–£ —Ç–µ–±—è –æ—á–µ–Ω—å –≤—ã—Ä–∞–∑–∏—Ç–µ–ª—å–Ω—ã–µ —Ä—É–∫–∏. –î–∞–∂–µ –∫–æ–≥–¥–∞ –æ–Ω–∏ –ø—Ä–æ—Å—Ç–æ –ª–µ–∂–∞—Ç –≤ –∫–∞–¥—Ä–µ, –æ–Ω–∏ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—é—Ç –∏—Å—Ç–æ—Ä–∏—é"
            - "–¢–≤–æ–∏ –ø–∞–ª—å—Ü—ã –¥–ª–∏–Ω–Ω—ã–µ –∏ –∏–∑—è—â–Ω—ã–µ, —Ç–≤–æ–∏ –∂–µ—Å—Ç—ã –≥—Ä–∞—Ü–∏–æ–∑–Ω—ã–µ"
            - "–¢—ã –Ω–µ –≥–æ–Ω–∏—à—å—Å—è –∑–∞ –±—Ä–µ–Ω–¥–∞–º–∏, –Ω–æ –≤—Å–µ–≥–¥–∞ –≤—ã–≥–ª—è–¥–∏—à—å —Å—Ç–∏–ª—å–Ω–æ –∏ —É–º–µ—Å—Ç–Ω–æ"
            - "–¢—ã –ª—é–±–∏—à—å —Å–≤–µ—Ç. –ù–∞ –º–Ω–æ–≥–∏—Ö —Ç–≤–æ–∏—Ö —Ñ–æ—Ç–æ –≤–∏–¥–Ω–æ, –∫–∞–∫ —Ç—ã —É–º–µ–ª–æ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ"
            - "–¢–≤–æ—è –æ—Å–∞–Ω–∫–∞ –≥–æ–≤–æ—Ä–∏—Ç –æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏"
            
            –ü–∏—à–∏ –∫–∞–∫ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã–µ –∑–∞–º–µ—Ç–∫–∏ –≤–æ—Å—Ö–∏—â–µ–Ω–Ω–æ–≥–æ –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—è."""
        },
        {
            'key': 'gratitude_wishes',
            'title': '–ü–æ–∂–µ–ª–∞–Ω–∏—è –∏ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å',
            'emotional_intro': '{username}, —ç—Ç–∞ –∫–Ω–∏–≥–∞ –ø–æ–¥—Ö–æ–¥–∏—Ç –∫ –∫–æ–Ω—Ü—É, –Ω–æ –º–æ–∏ –º—ã—Å–ª–∏ –æ —Ç–µ–±–µ –Ω–∞ —ç—Ç–æ–º –Ω–µ –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—Ç—Å—è...',
            'prompt': f"""–ù–∞–ø–∏—à–∏ –≥–ª–∞–≤—É "–ü–æ–∂–µ–ª–∞–Ω–∏—è –∏ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å" –¥–ª—è {full_name} (6-7 –∞–±–∑–∞—Ü–µ–≤).
            
            –ü–û–õ: {gender} - –∏—Å–ø–æ–ª—å–∑—É–π "{she_he}", "{her_his}"
            
            –ù–ê–ß–ù–ò —Å –ª–∏—á–Ω–æ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è: "{full_name}, —ç—Ç–∞ –∫–Ω–∏–≥–∞ –ø–æ–¥—Ö–æ–¥–∏—Ç –∫ –∫–æ–Ω—Ü—É, –Ω–æ –º–æ–∏ –º—ã—Å–ª–∏ –æ —Ç–µ–±–µ –Ω–∞ —ç—Ç–æ–º –Ω–µ –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—Ç—Å—è..."
            
            –ê–ù–ê–õ–ò–ó –§–ò–ù–ê–õ–¨–ù–û–ì–û –§–û–¢–û (—Ü–∏–∫–ª–∏—á–µ—Å–∫–∏ –±–µ—Ä–µ–º –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö):
            {get_safe_photo_analysis(9, '–û–±—Ä–∞–∑, —á—Ç–æ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –≤ –ø–∞–º—è—Ç–∏ –Ω–∞–≤—Å–µ–≥–¥–∞')}
            
            –°–¢–†–£–ö–¢–£–†–ê –ì–õ–ê–í–´:
            1. –ê–±–∑–∞—Ü: –õ–∏—á–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –±–∏–æ "{bio if bio else '—Ç–≤–æ—è –æ—Å–æ–±–µ–Ω–Ω–∞—è –Ω–∞—Ç—É—Ä–∞'}"
            2. –ê–±–∑–∞—Ü: –ü–æ–Ω–∏–º–∞–Ω–∏–µ —Å—á–∞—Å—Ç—å—è —á–µ—Ä–µ–∑ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ —Ç–æ–±–æ–π
            3. –ê–±–∑–∞—Ü: –ü–æ–∂–µ–ª–∞–Ω–∏—è –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –±—ã—Ç—å —Å–æ–±–æ–π
            4. –ê–±–∑–∞—Ü: –ü–æ–∂–µ–ª–∞–Ω–∏—è –Ω–∞–π—Ç–∏ –≤–∞–∂–Ω–æ–µ –≤ –∂–∏–∑–Ω–∏
            5. –ê–±–∑–∞—Ü: –ü–æ–∂–µ–ª–∞–Ω–∏—è –∫—Ä–∞—Å–æ—Ç—ã, –ª—é–±–≤–∏ –∏ —É—Å–ø–µ—Ö–∞
            6. –ê–±–∑–∞—Ü: –ë–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å –∑–∞ —Ç–æ, —á—Ç–æ —Ç—ã –µ—Å—Ç—å
            7. –ê–±–∑–∞—Ü: –§–∏–Ω–∞–ª—å–Ω—ã–µ —Å–ª–æ–≤–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏ –ø–æ–¥–ø–∏—Å—å
            
            –†–ê–ó–í–ï–†–ù–£–¢–´–ï –ü–û–ñ–ï–õ–ê–ù–ò–Ø:
            - "–ü—Ä–æ–¥–æ–ª–∂–∞–π –±—ã—Ç—å —Å–æ–±–æ–π. –ü—Ä–æ–¥–æ–ª–∂–∞–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä–æ–≤–∞—Ç—å –º–∏—Ä —Ç–∞–∫–∏–º, –∫–∞–∫–∏–º —Ç—ã –µ–≥–æ –≤–∏–¥–∏—à—å"
            - "–ü—É—Å—Ç—å —Ç–≤–æ—è –∫—Ä–∞—Å–æ—Ç–∞ —Ç–æ–ª—å–∫–æ —Ä–∞—Å—Ü–≤–µ—Ç–∞–µ—Ç —Å –≥–æ–¥–∞–º–∏"
            - "–Ø –∂–µ–ª–∞—é —Ç–µ–±–µ –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç —Ü–µ–Ω–∏—Ç—å —Ç–µ–±—è —Ç–∞–∫–∏–º, –∫–∞–∫–æ–π —Ç—ã –µ—Å—Ç—å"
            - "–ü—É—Å—Ç—å —Ç–≤–æ—è –∂–∏–∑–Ω—å –±—É–¥–µ—Ç –ø–æ–ª–Ω–∞ —è—Ä–∫–∏—Ö –º–æ–º–µ–Ω—Ç–æ–≤, –¥–æ—Å—Ç–æ–π–Ω—ã—Ö —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∏—Ö –∑–∞–ø–µ—á–∞—Ç–ª–µ—Ç—å"
            - "–ñ–µ–ª–∞—é —Ç–µ–±–µ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å —ç—Ç—É –¥–µ—Ç—Å–∫—É—é —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å —É–¥–∏–≤–ª—è—Ç—å—Å—è –º–∏—Ä—É"
            - "–Ø –∂–µ–ª–∞—é —Ç–µ–±–µ –ª—é–±–≤–∏ - –Ω–∞—Å—Ç–æ—è—â–µ–π, –≥–ª—É–±–æ–∫–æ–π, –≤–∑–∞–∏–º–Ω–æ–π"
            
            –§–ò–ù–ê–õ–¨–ù–´–ï –°–õ–û–í–ê:
            - "–°–ø–∞—Å–∏–±–æ —Ç–µ–±–µ –∑–∞ —Ç–æ, —á—Ç–æ —Ç—ã –µ—Å—Ç—å"
            - "–≠—Ç–æ—Ç –º–∏—Ä —Å—Ç–∞–ª –ª—É—á—à–µ —Å —Ç–æ–±–æ–π –≤ –Ω–µ–º"
            - "–ü–æ–º–Ω–∏ - —Ç—ã –≤–∞–∂–µ–Ω, —Ç—ã —Ü–µ–Ω–µ–Ω, —Ç—ã –ª—é–±–∏–º"
            - "–° –≥–ª—É–±–æ–∫–æ–π –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å—é –∏ –≤–æ—Å—Ö–∏—â–µ–Ω–∏–µ–º, —Ç–≤–æ–π —Ç–∞–π–Ω—ã–π –ø–æ–∫–ª–æ–Ω–Ω–∏–∫"
            
            –ü–∏—à–∏ –∫–∞–∫ –∏—Å–∫—Ä–µ–Ω–Ω–µ–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –ø–∏—Å—å–º–æ —Å –ø–æ–∂–µ–ª–∞–Ω–∏—è–º–∏ –≤—Å–µ–≥–æ —Å–∞–º–æ–≥–æ –ª—É—á—à–µ–≥–æ."""
        }
    ]
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é –≥–ª–∞–≤—É —á–µ—Ä–µ–∑ –ò–ò (–ë–´–°–¢–†–û)
    start_time = time.time()
    max_generation_time = 120  # –ú–∞–∫—Å–∏–º—É–º 2 –º–∏–Ω—É—Ç—ã –Ω–∞ –≤—Å—é –∫–Ω–∏–≥—É
    
    # –ë—ã—Å—Ç—Ä—ã–µ fallback —Ç–µ–∫—Å—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–π –≥–ª–∞–≤—ã
    quick_fallbacks = {
        'meeting': f"–î–æ—Ä–æ–≥–æ–π {full_name}, –ª–∏—Å—Ç–∞—è Instagram, —è —Å–ª—É—á–∞–π–Ω–æ –Ω–∞—Ç–∫–Ω—É–ª—Å—è –Ω–∞ —Ç–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å. –ß—Ç–æ-—Ç–æ –≤ —Ç–≤–æ–µ–º –≤–∑–≥–ª—è–¥–µ –∑–∞—Å—Ç–∞–≤–∏–ª–æ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –∏ –∏–∑—É—á–∞—Ç—å –∫–∞–∂–¥–æ–µ —Ñ–æ—Ç–æ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–µ–µ. –í–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ –±—ã–ª–∞ –∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä–æ–π —Ç–∞–∫ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –≤ –º–∏—Ä–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤. –¢—ã –ø–æ–∫–∞–∑–∞–ª—Å—è –º–Ω–µ –æ—Å–æ–±–µ–Ω–Ω—ã–º —á–µ–ª–æ–≤–µ–∫–æ–º.",
        
        'first_impression': f"–ü–µ—Ä–≤–æ–µ, —á—Ç–æ –ø–æ—Ä–∞–∑–∏–ª–æ –≤ —Ç–≤–æ–µ–º –ø—Ä–æ—Ñ–∏–ª–µ - —ç—Ç–æ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å. –ö–∞–∂–¥–æ–µ —Ñ–æ—Ç–æ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é, –∞ —Ç–≤–æ–∏ –≥–ª–∞–∑–∞ –æ—Å–æ–±–µ–Ω–Ω–æ –≤—ã—Ä–∞–∑–∏—Ç–µ–ª—å–Ω—ã. –í –Ω–∏—Ö —á–∏—Ç–∞–µ—Ç—Å—è —É–º, –¥–æ–±—Ä–æ—Ç–∞ –∏ –≥–ª—É–±–∏–Ω–∞ –¥—É—à–∏. –¢–≤–æ—è —É–ª—ã–±–∫–∞ –æ—Å–≤–µ—â–∞–µ—Ç –≤—Å–µ –≤–æ–∫—Ä—É–≥ - –Ω–µ –Ω–∞–∏–≥—Ä–∞–Ω–Ω–∞—è, –∞ –Ω–∞—Å—Ç–æ—è—â–∞—è.",
        
        'world_view': f"–ë–æ–ª—å—à–µ –≤—Å–µ–≥–æ –ø–æ—Ä–∞–∂–∞–µ—Ç —Ç–æ, –∫–∞–∫ —Ç—ã –≤–∏–¥–∏—à—å –º–∏—Ä –≤–æ–∫—Ä—É–≥ —Å–µ–±—è. –£ —Ç–µ–±—è –µ—Å—Ç—å –¥–∞—Ä –Ω–∞—Ö–æ–¥–∏—Ç—å –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ –≤ –æ–±—ã–¥–µ–Ω–Ω–æ–º. –¢–≤–æ—è –≤–Ω–µ—à–Ω–æ—Å—Ç—å –æ—Ç—Ä–∞–∂–∞–µ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –º–∏—Ä - —Ç—ã –∫—Ä–∞—Å–∏–≤ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–π –∫—Ä–∞—Å–æ—Ç–æ–π, –∫–æ—Ç–æ—Ä–∞—è –Ω–µ –Ω—É–∂–¥–∞–µ—Ç—Å—è –≤ –ø—Ä–∏–∫—Ä–∞—Å–∞—Ö.",
        
        'memorable_moments': f"–ï—Å—Ç—å –∫–∞–¥—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –≤—Ä–µ–∑–∞–ª–∏—Å—å –≤ –ø–∞–º—è—Ç—å –Ω–∞–≤—Å–µ–≥–¥–∞. –¢–≤–æ—è –∫—Ä–∞—Å–æ—Ç–∞ –∂–∏–≤–∞—è, –º–µ–Ω—è—é—â–∞—è—Å—è. –¢–≤–æ–∏ –≥–ª–∞–∑–∞ - –æ—Ç–¥–µ–ª—å–Ω–∞—è –ø–æ—ç–º–∞, –≥–ª—É–±–æ–∫–∏–µ –∏ –≤—ã—Ä–∞–∑–∏—Ç–µ–ª—å–Ω—ã–µ. –ö–æ–≥–¥–∞ —Ç—ã —Ä–∞–¥—É–µ—à—å—Å—è, –æ–Ω–∏ —Å–∏—è—é—Ç –æ—Å–æ–±—ã–º —Å–≤–µ—Ç–æ–º. –ò—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç—å - —Ç–≤–æ–µ –≥–ª–∞–≤–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ.",
        
        'energy': f"–í —Ç–µ–±–µ –µ—Å—Ç—å –æ—Å–æ–±–∞—è —ç–Ω–µ—Ä–≥–µ—Ç–∏–∫–∞, –∫–æ—Ç–æ—Ä–∞—è —á—É–≤—Å—Ç–≤—É–µ—Ç—Å—è –¥–∞–∂–µ —á–µ—Ä–µ–∑ —ç–∫—Ä–∞–Ω —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –£–º–µ–µ—à—å –±—ã—Ç—å —Å–æ–±–æ–π –≤ –ª—é–±–æ–π —Å–∏—Ç—É–∞—Ü–∏–∏. –£ —Ç–µ–±—è –∫—Ä–∞—Å–∏–≤–∞—è –∫–æ–∂–∞ - –∑–¥–æ—Ä–æ–≤–∞—è, —Å–∏—è—é—â–∞—è. –¢–≤–æ–∏ –¥–≤–∏–∂–µ–Ω–∏—è –ø–æ–ª–Ω—ã –≥—Ä–∞—Ü–∏–∏ –∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏.",
        
        'beauty_style': f"–ö—Ä–∞—Å–æ—Ç–∞ –≤ —Ç–≤–æ–µ–º —Å–ª—É—á–∞–µ –æ—á–µ–≤–∏–¥–Ω–∞ –¥–ª—è –≤—Å–µ—Ö. –¢–≤–æ–µ –ª–∏—Ü–æ - –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∏—Å–∫—É—Å—Å—Ç–≤–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—Ä–æ–ø–æ—Ä—Ü–∏—è–º–∏. –£ —Ç–µ–±—è –∫—Ä–∞—Å–∏–≤—ã–µ –±—Ä–æ–≤–∏, –¥–ª–∏–Ω–Ω—ã–µ —Ä–µ—Å–Ω–∏—Ü—ã, –±–µ–∑—É–ø—Ä–µ—á–Ω–∞—è –∫–æ–∂–∞ —Å –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–º —Å–∏—è–Ω–∏–µ–º.",
        
        'mystery': f"–í —Ç–µ–±–µ –µ—Å—Ç—å –æ—Å–æ–±–∞—è –∑–∞–≥–∞–¥–æ—á–Ω–æ—Å—Ç—å, –∫–æ—Ç–æ—Ä–∞—è –Ω–µ –¥–∞–µ—Ç –ø–æ–∫–æ—è. –ö–∞–∂–¥—ã–π –∫–∞–¥—Ä –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ. –¢–≤–æ–π –≤–∑–≥–ª—è–¥ –∑–∞–≥–∞–¥–æ—á–µ–Ω, –≤ –Ω–µ–º –µ—Å—Ç—å –≥–ª—É–±–∏–Ω–∞ –æ–∫–µ–∞–Ω–∞. –î–æ–ª–∂–Ω–æ –±—ã—Ç—å, —É —Ç–µ–±—è –∫—Ä–∞—Å–∏–≤—ã–π –≥–æ–ª–æ—Å –∏ –≥—Ä–∞—Ü–∏–æ–∑–Ω–∞—è –ø–æ—Ö–æ–¥–∫–∞.",
        
        'influence_on_me': f"–¢—ã –∏–∑–º–µ–Ω–∏–ª –º–æ–π –≤–∑–≥–ª—è–¥ –Ω–∞ –º–Ω–æ–≥–∏–µ –≤–µ—â–∏. –°—Ç–∞–ª –±–æ–ª—å—à–µ –≤–Ω–∏–º–∞–Ω–∏—è –æ–±—Ä–∞—â–∞—Ç—å –Ω–∞ –¥–µ—Ç–∞–ª–∏ –≤–æ–∫—Ä—É–≥ - –∏–≥—Ä—É —Å–≤–µ—Ç–∞, –≤—ã—Ä–∞–∂–µ–Ω–∏—è –ª–∏—Ü. –¢—ã –ø–æ–∫–∞–∑–∞–ª, —á—Ç–æ –∫—Ä–∞—Å–æ—Ç–∞ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –¥–æ—Ä–æ–≥–∏—Ö –¥–µ–∫–æ—Ä–∞—Ü–∏–π. –ë–ª–∞–≥–æ–¥–∞—Ä—è —Ç–µ–±–µ –ø–æ–Ω—è–ª —Ü–µ–Ω–Ω–æ—Å—Ç—å –∏—Å–∫—Ä–µ–Ω–Ω–æ—Å—Ç–∏.",
        
        'observations': f"–ó–∞ –≤—Ä–µ–º—è –Ω–∞–±–ª—é–¥–µ–Ω–∏—è —Å–¥–µ–ª–∞–ª –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –æ—Ç–∫—Ä—ã—Ç–∏—è. –¢–≤–æ–µ –ª–∏—Ü–æ –æ—á–µ–Ω—å —Ñ–æ—Ç–æ–≥–µ–Ω–∏—á–Ω–æ–µ, —É —Ç–µ–±—è –Ω–µ—Ç –ø–ª–æ—Ö–∏—Ö —Ä–∞–∫—É—Ä—Å–æ–≤. –í—ã—Ä–∞–∑–∏—Ç–µ–ª—å–Ω—ã–µ —Ä—É–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞—é—Ç –∏—Å—Ç–æ—Ä–∏–∏. –õ—é–±–∏—à—å —Å–≤–µ—Ç –∏ —É–º–µ–ª–æ –µ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å.",
        
        'gratitude_wishes': f"{full_name}, —ç—Ç–∞ –∫–Ω–∏–≥–∞ –ø–æ–¥—Ö–æ–¥–∏—Ç –∫ –∫–æ–Ω—Ü—É, –Ω–æ –≤–æ—Å—Ö–∏—â–µ–Ω–∏–µ –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–∞–≤—Å–µ–≥–¥–∞. –ü—Ä–æ–¥–æ–ª–∂–∞–π –±—ã—Ç—å —Å–æ–±–æ–π, –ø—Ä–æ–¥–æ–ª–∂–∞–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä–æ–≤–∞—Ç—å –º–∏—Ä —Ç–∞–∫–∏–º, –∫–∞–∫–∏–º —Ç—ã –µ–≥–æ –≤–∏–¥–∏—à—å. –ñ–µ–ª–∞—é —Ç–µ–±–µ –ª—é–±–≤–∏, —Å—á–∞—Å—Ç—å—è –∏ —è—Ä–∫–∏—Ö –º–æ–º–µ–Ω—Ç–æ–≤. –°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–æ, —á—Ç–æ —Ç—ã –µ—Å—Ç—å. –¢–≤–æ–π –ø–æ–∫–ª–æ–Ω–Ω–∏–∫."
    }
    
    for config in chapter_configs:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—Ä–µ–≤—ã—Å–∏–ª–∏ –ª–∏ –ª–∏–º–∏—Ç –≤—Ä–µ–º–µ–Ω–∏
        elapsed_time = time.time() - start_time
        if elapsed_time > max_generation_time:
            print(f"‚è∞ –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –≤—Ä–µ–º–µ–Ω–∏ ({max_generation_time}—Å), –∏—Å–ø–æ–ª—å–∑—É–µ–º –±—ã—Å—Ç—Ä—ã–µ fallback'—ã")
            # –ó–∞–ø–æ–ª–Ω—è–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –≥–ª–∞–≤—ã –±—ã—Å—Ç—Ä—ã–º–∏ fallback'–∞–º–∏
            for remaining_config in chapter_configs[len(chapters):]:
                chapters[remaining_config['key']] = quick_fallbacks.get(remaining_config['key'], f"–≠—Ç–∞ –≥–ª–∞–≤–∞ –æ {remaining_config['title'].lower()} –Ω–∞–ø–∏—Å–∞–Ω–∞ —Å –æ—Å–æ–±–æ–π —Ç–µ–ø–ª–æ—Ç–æ–π –∏ –≤–Ω–∏–º–∞–Ω–∏–µ–º –∫ –¥–µ—Ç–∞–ª—è–º.")
            break
        
        try:
            print(f"üíù –ì–µ–Ω–µ—Ä–∏—Ä—É—é –≥–ª–∞–≤—É '{config['title']}' –¥–ª—è {full_name}... ({elapsed_time:.1f}—Å)")
            
            # –ë—ã—Å—Ç—Ä–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å —Ç–∞–π–º–∞—É—Ç–æ–º 15 —Å–µ–∫—É–Ω–¥ –Ω–∞ –≥–ª–∞–≤—É
            chapter_start = time.time()
            generated_content = generate_memoir_chapter("romantic_book_chapter", {
                'prompt': config['prompt'],
                'context': context_data,
                'style': 'romantic_personal_gift'
            })
            
            chapter_time = time.time() - chapter_start
            if chapter_time > 15:  # –ï—Å–ª–∏ –≥–ª–∞–≤–∞ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª–∞—Å—å –¥–æ–ª—å—à–µ 15 —Å–µ–∫—É–Ω–¥
                print(f"‚ö° –ì–ª–∞–≤–∞ '{config['title']}' –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª–∞—Å—å {chapter_time:.1f}—Å - –¥–æ–ª–≥–æ!")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            if len(generated_content.strip()) < 100:  # –ï—Å–ª–∏ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π –æ—Ç–≤–µ—Ç
                print(f"‚ö° –ö–æ—Ä–æ—Ç–∫–∏–π –æ—Ç–≤–µ—Ç –¥–ª—è '{config['title']}', –∏—Å–ø–æ–ª—å–∑—É—é fallback")
                chapters[config['key']] = quick_fallbacks.get(config['key'], f"–ì–ª–∞–≤–∞ –æ {config['title'].lower()} –ø–æ–ª–Ω–∞ –≤–æ—Å—Ö–∏—â–µ–Ω–∏—è –∏ —Ç–µ–ø–ª—ã—Ö —Å–ª–æ–≤.")
            else:
                clean_content = strip_cliches(generated_content)
                # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –∞–±–∑–∞—Ü—ã + –≤—ã–¥–µ–ª–µ–Ω–∏—è
                chapters[config['key']] = format_chapter_text(clean_content)
            
            print(f"‚úÖ –ì–ª–∞–≤–∞ '{config['title']}' –≥–æ—Ç–æ–≤–∞ –∑–∞ {chapter_time:.1f}—Å")
            
        except Exception as e:
            print(f"üíî –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≥–ª–∞–≤—ã '{config['title']}': {e}")
            # –ë—ã—Å—Ç—Ä—ã–π fallback
            chapters[config['key']] = quick_fallbacks.get(config['key'], f"–î–æ—Ä–æ–≥–æ–π {full_name}, —ç—Ç–∞ –≥–ª–∞–≤–∞ –ø–æ—Å–≤—è—â–µ–Ω–∞ —Ç–≤–æ–µ–π –æ—Å–æ–±–µ–Ω–Ω–æ–π –ø—Ä–∏—Ä–æ–¥–µ. –¢—ã —É–¥–∏–≤–∏—Ç–µ–ª—å–Ω—ã–π —á–µ–ª–æ–≤–µ–∫, –∏ —ç—Ç–æ –≤–∏–¥–Ω–æ –≤ –∫–∞–∂–¥–æ–º —Ç–≤–æ–µ–º –ø–æ—Å—Ç–µ.")
    
    total_time = time.time() - start_time
    print(f"‚è±Ô∏è –í—Å–µ –≥–ª–∞–≤—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã –∑–∞ {total_time:.1f} —Å–µ–∫—É–Ω–¥")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ—Å–ª–∞–Ω–∏–µ
    final_page_content = f"–° –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–º –≤–æ—Å—Ö–∏—â–µ–Ω–∏–µ–º –∏ –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å—é. –¢—ã ‚Äî –æ—Å–æ–±–µ–Ω–Ω—ã–π —á–µ–ª–æ–≤–µ–∫. –°–ø–∞—Å–∏–±–æ —Ç–µ–±–µ –∑–∞ –≤—Å—ë."
    try:
        print("üíù –ì–µ–Ω–µ—Ä–∏—Ä—É—é —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ—Å–ª–∞–Ω–∏–µ...")
        final_prompt = f"""–ù–∞–ø–∏—à–∏ –æ—á–µ–Ω—å –∫–æ—Ä–æ—Ç–∫–æ–µ –∏ –ø–æ—ç—Ç–∏—á–Ω–æ–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ—Å–ª–∞–Ω–∏–µ (1 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è) –¥–ª—è —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–π –∫–Ω–∏–≥–∏ –æ {full_name}.

–ü–û–õ: {gender} - –æ–±—Ä–∞—â–∞–π—Å—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ.

–ò–î–ï–ò:
- "–≠—Ç–∞ –∫–Ω–∏–≥–∞ ‚Äî –ª–∏—à—å —Å–ª–∞–±–∞—è –ø–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–¥–∞—Ç—å —Ç–≤–æ–π —Å–≤–µ—Ç."
- "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ."
- "–ü—É—Å—Ç—å —Ç–≤–æ–π –ø—É—Ç—å –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –ø—Ä–µ–∫—Ä–∞—Å–µ–Ω."

–°–¢–ò–õ–¨: –û—á–µ–Ω—å –∫–æ—Ä–æ—Ç–∫–æ, –Ω–µ–∂–Ω–æ, –∏—Å–∫—Ä–µ–Ω–Ω–µ. –ë–µ–∑ –¥–ª–∏–Ω–Ω—ã—Ö –≤—Å—Ç—É–ø–ª–µ–Ω–∏–π –∏ –∑–∞–∫–ª—é—á–µ–Ω–∏–π. –¢–æ–ª—å–∫–æ —Å–∞–º–∞ —Å—É—Ç—å.
"""
        final_page_content = generate_memoir_chapter("final_message", {
            'prompt': final_prompt,
            'context': context_data,
            'style': 'poetic_farewell'
        })
        print("‚úÖ –§–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ—Å–ª–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–æ.")
    except Exception as e:
        print(f"üíî –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –ø–æ—Å–ª–∞–Ω–∏—è: {e}")
        # fallback is already set
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ª–∏—á–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏
    book_titles = [
        f"–î–ª—è {full_name} —Å –ª—é–±–æ–≤—å—é",
        f"–ö–Ω–∏–≥–∞ –æ –∫—Ä–∞—Å–æ—Ç–µ {full_name}",
        f"–ü–∏—Å—å–º–∞ {full_name}",
        f"–ú–æ–∏ –º—ã—Å–ª–∏ –æ —Ç–µ–±–µ, {full_name}",
        f"–ü–æ–¥–∞—Ä–æ–∫ –¥–ª—è {full_name}"
    ]
    book_title = random.choice(book_titles)
    
    # HTML –≤ —Å—Ç–∏–ª–µ –ª–∏—á–Ω–æ–≥–æ –ø–æ–¥–∞—Ä–∫–∞
    html = f"""<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{book_title}</title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Playfair+Display:ital,wght@0,400;0,700;1,400;1,700&family=Open+Sans:ital,wght@0,400;0,700;1,400&display=swap" rel="stylesheet">
    
    <style>
    /* –ë–µ–ª—ã–π —Ñ–æ–Ω —Å—Ç—Ä–∞–Ω–∏—Ü, —á—ë—Ä–Ω—ã–π –∞–∫—Ü–µ–Ω—Ç */
    :root {{
        --accent-color: #333333;      /* —á—ë—Ä–Ω—ã–π –≤–º–µ—Å—Ç–æ —Ñ–∏–æ–ª–µ—Ç–æ–≤–æ–≥–æ */
        --background-color: #ffffff;  /* –±–µ–ª—ã–π —Ñ–æ–Ω */
        --text-color: #333;
        --font-body: 'Playfair Display', serif;
        --font-caption: 'Open Sans', sans-serif;
    }}

    @page {{
        size: A5 portrait;
        margin: 2.5cm; /* –ï—â–µ –±–æ–ª—å—à–µ –æ—Ç—Å—Ç—É–ø—ã */
        
        @bottom-center {{
            content: counter(page);
            font-family: 'Playfair Display', serif;
            font-size: 16pt;
            color: #555;
            border-top: 1px solid #ddd;
            padding-top: 0.25cm;
            width: 100%;
        }}
    }}

    body {{
        font-family: var(--font-body);
        background-color: var(--background-color) !important;
        color: var(--text-color);
        line-height: 1.6;
        font-size: 24pt;
        margin: 0;
        counter-reset: page;
    }}

    .book-page {{
        page-break-after: always;
        position: relative;
        overflow: hidden;
        background-color: var(--background-color) !important;
        box-shadow: none;  /* —É–±–∏—Ä–∞–µ–º —Ç–µ–Ω—å —Å—Ç—Ä–∞–Ω–∏—Ü */
    }}

    .book-page:last-of-type {{
        page-break-after: auto;
    }}

    /* Cover Page */
    .cover-page {{
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        height: 100vh;
        text-align: center;
    }}

    .cover-title {{
        font-family: 'Playfair Display', serif;
        font-size: 48pt;
        font-weight: 700;
        margin: 0;
    }}

    .cover-subtitle {{
        font-family: 'Playfair Display', serif;
        font-style: italic;
        font-size: 24pt;
        margin: 1rem 0 3rem 0;
    }}

    .cover-author {{
        position: absolute;
        bottom: 1.5cm;
        font-size: 18pt;
    }}

    .cover-content {{
        border: 2px solid #333;
        padding: 2rem 3rem;
    }}
    
    .cover-separator {{
        width: 80px;
        height: 1px;
        background: #333;
        margin: 0 auto 1.5rem;
    }}

    .cover-dedication {{
        font-family: 'Open Sans', sans-serif;
        font-style: italic;
        font-size: 14pt;
    }}

    /* Table of Contents */
    .toc-page {{
        padding: 0; /* Padding is handled by @page margins */
    }}

    .toc-title {{
        font-size: 36pt;
        font-weight: bold;
        text-transform: uppercase;
        text-align: center;
        margin-top: 1cm;
        margin-bottom: 2cm;
        color: var(--accent-color);
    }}

    .toc-list {{
        list-style: none;
        padding: 0;
        font-size: 20pt;
        font-family: 'Playfair Display', serif;
    }}

    .toc-item {{
        display: flex;
        margin-bottom: 0.5rem;
        align-items: baseline;
    }}

    .toc-item .chapter-name {{
        order: 1;
        text-decoration: none;
        color: var(--text-color);
    }}
    
    /* –£–±–∏—Ä–∞–µ–º —Ç–æ—á–µ—á–Ω—ã–µ –ª–∏–Ω–∏–∏-–ª–∏–¥–µ—Ä—ã –≤ –æ–≥–ª–∞–≤–ª–µ–Ω–∏–∏ */
    .toc-item .leader {{
        flex-grow: 0;
        border-bottom: none;
        margin: 0;
        position: static;
    }}

    .toc-item .page-ref {{
        order: 3;
        text-decoration: none;
        color: var(--text-color);
    }}

    .toc-item .page-ref::after {{
        content: target-counter(attr(href), page);
    }}
    
    /* Chapter Page */
    .chapter-page {{
        padding: 0; /* Padding is handled by @page margins */
    }}

    .chapter-main-title {{
        font-family: var(--font-body);
        font-weight: bold;
        font-size: 32pt; /* –ù–µ–º–Ω–æ–≥–æ —É–º–µ–Ω—å—à–∏–ª, —á—Ç–æ–±—ã –ø–æ–º–µ—â–∞–ª–æ—Å—å */
        text-align: center;
        text-transform: uppercase;
        color: var(--accent-color);
        margin: 1cm 0;
        line-height: 1.2; /* –î–æ–±–∞–≤–∏–ª –≤—ã—Å–æ—Ç—ã —Å—Ç—Ä–æ–∫–∏ –¥–ª—è –º–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã—Ö –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ */
        overflow-wrap: break-word; /* –ü–µ—Ä–µ–Ω–æ—Å —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã—Ö —Å–ª–æ–≤ */
        hyphens: auto; /* –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä–µ–Ω–æ—Å—ã */
    }}
    
    .chapter-subtitle {{
        font-family: var(--font-body);
        font-style: italic;
        font-size: 18pt;
        text-align: left;
        margin: 0 0 1rem 0;
    }}

    .chapter-image-container {{
        text-align: center;
        margin: 1cm 0;
        page-break-inside: avoid;
    }}

    .chapter-image {{
        max-width: 90%;
        border: 1px solid #ddd;
        padding: 0.5cm;
    }}

    .chapter-image-caption {{
        font-family: var(--font-caption);
        font-style: italic;
        font-size: 14pt;
        margin-top: 0.5rem;
        color: var(--accent-color);
    }}
    
    .chapter-body p {{
        font-size: 24pt;
        line-height: 1.6;
        margin-bottom: 1em;
    }}

    .chapter-body p:first-of-type::first-letter {{
        /* –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± —Å–æ–∑–¥–∞–Ω–∏—è –±—É–∫–≤–∏—Ü—ã, –∫–æ—Ç–æ—Ä—ã–π –ª—É—á—à–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è —Ä–µ–Ω–¥–µ—Ä–∞–º–∏ PDF */
        initial-letter: 3; /* –ë—É–∫–≤–∞ –±—É–¥–µ—Ç –≤—ã—Å–æ—Ç–æ–π –≤ 3 —Å—Ç—Ä–æ–∫–∏ */
        font-weight: bold;
        padding-right: 0.2em; /* –ù–µ–±–æ–ª—å—à–æ–π –æ—Ç—Å—Ç—É–ø —Å–ø—Ä–∞–≤–∞ –¥–ª—è –≤–æ–∑–¥—É—Ö–∞ */
        color: #555; /* –°–¥–µ–ª–∞–µ–º –µ–µ —á—É—Ç—å —Å–≤–µ—Ç–ª–µ–µ –¥–ª—è —ç–ª–µ–≥–∞–Ω—Ç–Ω–æ—Å—Ç–∏ */
    }}
    
    /* Final Page Styles */
    .final-page {{
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        text-align: center;
    }}
    .final-content {{
        font-family: 'Playfair Display', serif;
        font-style: italic;
        font-size: 24pt;
        line-height: 1.7;
        max-width: 80%;
    }}
    .final-ornament {{
        font-size: 32pt;
        color: var(--accent-color);
        margin: 2rem 0;
        font-family: serif;
    }}
    .final-signature {{
        margin-top: 1rem;
        font-size: 18pt;
        font-style: normal;
    }}

    @media screen {{
        body {{
            font-size: 16px;
        }}
        .book-page {{
            width: 148mm; /* A5 width */
            min-height: 210mm; /* A5 height */
            margin: 2rem auto;
            padding: 2.5cm; /* –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã –¥–ª—è –≤–µ–±-–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ */
            box-sizing: border-box;
            height: auto;
        }}
        .cover-page {{
            height: 210mm;
            position: relative;
        }}
        .chapter-body p {{ font-size: 14pt; }}
        .chapter-body p:first-of-type::first-letter {{ font-size: 38pt; }}
        .cover-title {{ font-size: 32pt; }}
        .cover-subtitle {{ font-size: 18pt; }}
        .toc-title {{ font-size: 24pt; }}
        .toc-list {{ font-size: 14pt; }}
        .chapter-main-title {{ font-size: 24pt; }}
        .chapter-subtitle {{ font-size: 12pt; }}
        .final-content {{ font-size: 18pt; }}
        .final-signature {{ font-size: 14pt; }}
    }}
    </style>
</head>
<body>

<!-- Cover Page -->
<div class="book-page cover-page">
    <div class="cover-content">
        <h1 class="cover-title">{full_name.upper()}</h1>
        <p class="cover-subtitle">An Unforgettable Story</p>
        <div class="cover-separator"></div>
        <p class="cover-dedication">A gift from a secret admirer</p>
    </div>
</div>

<!-- Table of Contents -->
<div class="book-page toc-page">
    <h2 class="toc-title">Table of Contents</h2>
    <ul class="toc-list">
        {"".join([f'''
            <li class="toc-item">
                <a href="#chapter-{config['key']}" class="chapter-name">Chapter {i+1} ‚Äì {config['title']}</a>
                <span class="leader"></span>
                <a href="#chapter-{config['key']}" class="page-ref"></a>
            </li>
        ''' for i, config in enumerate(chapter_configs)])}
    </ul>
</div>

<!-- Chapter Pages -->
{"".join([f'''
<div id="chapter-{config['key']}" class="book-page chapter-page">
    <h3 class="chapter-subtitle">Chapter {i+1}</h3>
    <h2 class="chapter-main-title">{config['title']}</h2>
    
    {(f"""
    <div class="chapter-image-container">
        <img src="{selected_photo_data[i]['image']}" alt="Photo for Chapter {i+1}" class="chapter-image">
        <p class="chapter-image-caption">{selected_photo_data[i]['analysis'][:80] + '...' if len(selected_photo_data[i]['analysis']) > 80 else selected_photo_data[i]['analysis']}</p>
    </div>
    """) if i < len(selected_photo_data) else ""}

    <div class="chapter-body">
        {chapters.get(config['key'], '<p>–≠—Ç–∞ –≥–ª–∞–≤–∞ —Å–∫–æ—Ä–æ –Ω–∞–ø–æ–ª–Ω–∏—Ç—Å—è —Å–ª–æ–≤–∞–º–∏ –≤–æ—Å—Ö–∏—â–µ–Ω–∏—è...</p>')}
    </div>
</div>
''' for i, config in enumerate(chapter_configs)])}

<!-- Final Page -->
<div class="book-page final-page">
    <div class="final-content">
        <p>{final_page_content.replace('\\n', '<br>')}</p>
    </div>
    <div class="final-ornament">
        ‚ù¶
    </div>
    <div class="final-signature">
        <p>–ü–æ–º–Ω–∏, —á—Ç–æ –∫–∞–∂–¥—ã–π —á–µ–ª–æ–≤–µ–∫ –¥–æ—Å—Ç–æ–∏–Ω –ª—é–±–≤–∏.</p>
    </div>
</div>

</body>
</html>"""
    
    return html


def create_pdf_with_weasyprint(output_path: Path, html_content: str):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫—Ä–∞—Å–∏–≤—ã–π PDF –∏–∑ HTML –∏—Å–ø–æ–ª—å–∑—É—è WeasyPrint."""
    try:
        from weasyprint import HTML, CSS
        
        # –°–æ–∑–¥–∞–µ–º PDF –∏–∑ HTML –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        html_doc = HTML(string=html_content)
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ CSS —Å—Ç–∏–ª–∏ –¥–ª—è –ø–µ—á–∞—Ç–∏ PDF
        print_css = CSS(string="""
            @page {
                margin: 1.5cm;
                size: A4;
            }
            
            body {
                margin: 0;
                padding: 0;
            }
            
            .memoir-page {
                page-break-after: always;
                margin: 0;
                box-shadow: none;
            }
            
            .memoir-page:last-child {
                page-break-after: auto;
            }
            
            .photo-frame {
                box-shadow: none;
                border: 1px solid #ddd;
            }
            
            /* –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ —Ç–µ–Ω–∏ –¥–ª—è –ø–µ—á–∞—Ç–∏ */
            * {
                -webkit-print-color-adjust: exact !important;
                color-adjust: exact !important;
            }
        """)
        
        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PDF
        html_doc.write_pdf(str(output_path), stylesheets=[print_css])
        print(f"‚úÖ –ö—Ä–∞—Å–∏–≤—ã–π PDF —Å–æ–∑–¥–∞–Ω —Å –ø–æ–º–æ—â—å—é WeasyPrint: {output_path}")
        
    except ImportError:
        print("‚ùå WeasyPrint –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é...")
        import subprocess
        import sys
        
        try:
            # –ü—ã—Ç–∞–µ–º—Å—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å weasyprint
            subprocess.check_call([sys.executable, "-m", "pip", "install", "weasyprint"])
            print("‚úÖ WeasyPrint —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            
            # –ü–æ–≤—Ç–æ—Ä—è–µ–º –ø–æ–ø—ã—Ç–∫—É —Å–æ–∑–¥–∞–Ω–∏—è PDF
            from weasyprint import HTML, CSS
            html_doc = HTML(string=html_content)
            print_css = CSS(string="""
                @page {
                    margin: 1.5cm;
                    size: A4;
                }
                
                body {
                    margin: 0;
                    padding: 0;
                }
                
                .memoir-page {
                    page-break-after: always;
                    margin: 0;
                    box-shadow: none;
                }
                
                .memoir-page:last-child {
                    page-break-after: auto;
                }
                
                .photo-frame {
                    box-shadow: none;
                    border: 1px solid #ddd;
                }
                
                * {
                    -webkit-print-color-adjust: exact !important;
                    color-adjust: exact !important;
                }
            """)
            
            html_doc.write_pdf(str(output_path), stylesheets=[print_css])
            print(f"‚úÖ –ö—Ä–∞—Å–∏–≤—ã–π PDF —Å–æ–∑–¥–∞–Ω —Å –ø–æ–º–æ—â—å—é WeasyPrint: {output_path}")
            
        except Exception as install_error:
            print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å WeasyPrint: {install_error}")
            # Fallback –∫ –ø—Ä–æ—Å—Ç–æ–º—É PDF
            create_simple_pdf_fallback(output_path)
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ PDF —Å WeasyPrint: {e}")
        # Fallback –∫ –ø—Ä–æ—Å—Ç–æ–º—É PDF
        create_simple_pdf_fallback(output_path)

def create_simple_pdf_fallback(output_path: Path):
    """–ü—Ä–æ—Å—Ç–æ–π fallback PDF –µ—Å–ª–∏ WeasyPrint –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω."""
    try:
        from fpdf import FPDF
        
        pdf = FPDF()
        pdf.add_page()
        
        try:
            pdf.add_font('DejaVu', '', '/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', uni=True)
            pdf.set_font('DejaVu', '', 12)
        except:
            pdf.set_font('Arial', '', 12)
        
        pdf.cell(0, 20, "–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è –∫–Ω–∏–≥–∞", 0, 1, 'C')
        pdf.ln(10)
        pdf.multi_cell(0, 10, "PDF —Å–æ–∑–¥–∞–Ω –≤ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–º —Ä–µ–∂–∏–º–µ. –î–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ PDF —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ WeasyPrint.")
        
        pdf.output(str(output_path))
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω –ø—Ä–æ—Å—Ç–æ–π PDF (fallback): {output_path}")
        
    except Exception as fallback_error:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è fallback PDF: {fallback_error}")

def create_pdf_with_fpdf(output_path: Path, chapters: dict, analysis: dict, images: list[Path]):
    """(DEPRECATED) –°—Ç–∞—Ä–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è PDF. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ create_pdf_with_weasyprint."""
    print("‚ö†Ô∏è create_pdf_with_fpdf deprecated. WeasyPrint —Å–æ–∑–¥–∞—Å—Ç –±–æ–ª–µ–µ –∫—Ä–∞—Å–∏–≤—ã–π PDF.")
    create_simple_pdf_fallback(output_path)

def create_pdf_from_html(html_content: str, output_path: Path) -> Path:
    """(DEPRECATED) –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç PDF –∏–∑ HTML –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
    print("‚ö†Ô∏è create_pdf_from_html is deprecated. Use create_pdf_with_weasyprint.")
    return output_path

async def create_pdf_from_html_async(html_path: Path, output_path: Path) -> Path:
    """(DEPRECATED) –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç PDF –∏–∑ HTML —Ñ–∞–π–ª–∞."""
    print("‚ö†Ô∏è create_pdf_from_html_async is deprecated and will be removed. Use create_pdf_with_weasyprint.")
    # –û—Å—Ç–∞–≤–ª—è–µ–º –∑–∞–≥–ª—É—à–∫—É, —á—Ç–æ–±—ã –Ω–µ –ª–æ–º–∞—Ç—å –≤—ã–∑–æ–≤—ã, –Ω–æ –æ–Ω–∞ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ—Ç
    # –í –∏–¥–µ–∞–ª–µ, –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –≤—Å–µ –≤—ã–∑–æ–≤—ã –Ω–∞ –Ω–æ–≤—ã–π –º–µ—Ç–æ–¥
    return output_path

def format_chapter_text(text: str) -> str:
    """–û—á–∏—â–∞–µ—Ç –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –≥–ª–∞–≤—ã."""
    # –°–Ω–∞—á–∞–ª–∞ —Ä–∞–∑–±–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ –ø–∞—Ä–∞–≥—Ä–∞—Ñ—ã –ø–æ –ø–µ—Ä–µ–Ω–æ—Å–∞–º —Å—Ç—Ä–æ–∫
    paragraphs = text.strip().split('\n')
    
    highlight_words = [
        '–ª—é–±–ª—é', '–≤–æ—Å—Ö–∏—â–∞—é—Å—å', '–∫—Ä–∞—Å–æ—Ç–∞', '—É–ª—ã–±–∫–∞', '–≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ', '–Ω–µ–∂–Ω–æ—Å—Ç—å', '—Å—á–∞—Å—Ç—å–µ',
        '–æ—Å–æ–±—ã–π', '–º–∞–≥–∏—è', '–º–µ—á—Ç–∞', '—Å–≤–µ—Ç', '–¥—É—à–∞', '—Å–µ—Ä–¥—Ü–µ', '–Ω–∞–≤—Å–µ–≥–¥–∞', '–±–ª–∞–≥–æ–¥–∞—Ä—é',
        '—Ç—ã', '—Ç–≤–æ–π', '—Ç–≤–æ—è', '—Ç–µ–±—è', '–º–∏—Ä', '–∂–∏–∑–Ω—å', '—á—É–≤—Å—Ç–≤–∞', '—ç–º–æ—Ü–∏–∏', '–≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—à—å',
        '—É–ª—ã–±–∫–∞', '–≥–ª–∞–∑–∞', '–≤–∑–≥–ª—è–¥', '–æ–±–æ–∂–∞—é', '–Ω–µ–∂–Ω–æ', '–∏—Å–∫—Ä–µ–Ω–Ω–µ', '—Å–≤–µ—Ç–∏—à—å—Å—è', '–æ—Å–æ–±–µ–Ω–Ω–∞—è', '–æ—Å–æ–±–µ–Ω–Ω—ã–π'
    ]
    pattern = re.compile(r'\\b(' + '|'.join(highlight_words) + r')\\b', re.IGNORECASE)

    # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–¥–µ–ª–µ–Ω–∏–π
    bold_count = 0
    max_bold = 3

    def highlight(match):
        nonlocal bold_count
        if bold_count < max_bold:
            bold_count += 1
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ª–æ–≤–æ –≤ —Ç–µ–≥–µ <b>
            return f'<b>{match.group(1)}</b>'
        # –ï—Å–ª–∏ –ª–∏–º–∏—Ç –∏—Å—á–µ—Ä–ø–∞–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–ª–æ–≤–æ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        return match.group(1)

    formatted_paragraphs = []
    for p in paragraphs:
        if p.strip():
            # –ü—Ä–∏–º–µ–Ω—è–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ –∫ –∫–∞–∂–¥–æ–º—É –ø–∞—Ä–∞–≥—Ä–∞—Ñ—É —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º
            highlighted_p = pattern.sub(highlight, p)
            formatted_paragraphs.append(f'<p>{highlighted_p}</p>')
            
    return "".join(formatted_paragraphs)

# --- –ù–û–í–´–ô –ö–û–î –û–¢ –ë–†–ê–¢–ê ---
import re
# –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç –ê–°–ò–ù–•–†–û–ù–ù–û–ì–û –∫–ª–∏–µ–Ω—Ç–∞
from app.services.llm_client import async_client, settings


async def generate_text_pages(run_id: str, style: str, image_names: list[str], raw_comments: list[str]) -> list[str]:
    """
    –ü—Ä–æ—Å–∏—Ç LLM —Å—Ä–∞–∑—É –≤–µ—Ä–Ω—É—Ç—å JSON {"pages": [ "...", "...", ... ]}.
    –ï—Å–ª–∏ JSON-–ø–∞—Ä—Å–∏–Ω–≥ –Ω–µ —É–¥–∞—ë—Ç—Å—è ‚Äî –ø—ã—Ç–∞–µ—Ç—Å—è –≤—ã—Ç–∞—â–∏—Ç—å –ø–µ—Ä–≤–æ–µ {...} –∏–∑ —Ç–µ–∫—Å—Ç–∞.
    –ï—Å–ª–∏ –∏ —ç—Ç–æ –Ω–µ –ø–æ–º–æ–≥–∞–µ—Ç ‚Äî –±—Ä–æ—Å–∞–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –∏ –≤—ã –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –Ω–∞ fallback.
    """
    # 1) –ø–æ–¥–≥–æ—Ç–æ–≤–∏–º —á—ë—Ç–∫–∏–π system-prompt
    system = {
        "role": "system",
        "content": (
            "–¢—ã ‚Äî —Ç–∞–ª–∞–Ω—Ç–ª–∏–≤—ã–π –ø–∏—Å–∞—Ç–µ–ª—å, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞—ë—Ç —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ –∏—Å—Ç–æ—Ä–∏–∏.\n"
            "–í—ã–¥–∞–≤–∞–π _—Ç–æ–ª—å–∫–æ_ JSON –≤ —Ä–æ–≤–Ω–æ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ:\n\n"
            "{\n"
            '  "pages": [\n'
            '    "–¢–µ–∫—Å—Ç –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...",\n'
            '    "–¢–µ–∫—Å—Ç –≤—Ç–æ—Ä–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã...",\n'
            '    ...\n'
            "  ]\n"
            "}\n"
            "–ù–∏–∫–∞–∫–∏—Ö –ø—Ä–∏–º–µ—á–∞–Ω–∏–π, –æ—Ç–ª–∞–¥–æ—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤ ‚Äî —Ç–æ–ª—å–∫–æ —ç—Ç–æ—Ç –æ–±—ä–µ–∫—Ç."
        )
    }

    # 2) user-prompt —Å –¥–∞–Ω–Ω—ã–º–∏
    user = {
        "role": "user",
        "content": json.dumps({
            "runId": run_id,
            "style": style,
            "images": image_names,
            "rawComments": raw_comments
        }, ensure_ascii=False)
    }

    # 3) —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ –≤—ã–∑–æ–≤ LLM
    resp = await async_client.chat.completions.create(
        model=settings.AZURE_OPENAI_GPT4_DEPLOYMENT, # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π deployment
        messages=[system, user]
    )
    raw = resp.choices[0].message.content.strip()

    # 4) –ø—Ä–æ–±—É–µ–º —Å—Ä–∞–∑—É —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å
    try:
        payload = json.loads(raw)
    except json.JSONDecodeError:
        # –ª–æ–≥–∏—Ä—É–µ–º —á—Ç–æ –≤–µ—Ä–Ω—É–ª–æ—Å—å, —á—Ç–æ–±—ã –ø–æ—Ç–æ–º –ø–æ–¥–ø—Ä–∞–≤–∏—Ç—å prompt
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON –∏–∑ LLM:\n{raw}\n")
        # –ø—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –ø–µ—Ä–≤—ã–π {...}
        m = re.search(r"\{[\s\S]*\}", raw)
        if m:
            try:
                payload = json.loads(m.group(0))
            except json.JSONDecodeError:
                raise ValueError("LLM –≤–µ—Ä–Ω—É–ª —á—Ç–æ-—Ç–æ, –Ω–æ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π JSON –¥–∞–∂–µ –≤–Ω—É—Ç—Ä–∏ –æ–±—ë—Ä—Ç–æ–∫")
        else:
            raise ValueError("LLM –≤–µ—Ä–Ω—É–ª —Ç–µ–∫—Å—Ç, –Ω–æ –≤ –Ω—ë–º –Ω–µ—Ç JSON-–æ–±—ä–µ–∫—Ç–∞")

    # 5) —É–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –≤ payload –µ—Å—Ç—å pages
    pages = payload.get("pages")
    if not isinstance(pages, list) or not all(isinstance(p, str) for p in pages):
        raise ValueError(f"JSON –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ pages: {payload}")

    return pages
# --- –ö–û–ù–ï–¶ –ù–û–í–û–ì–û –ö–û–î–ê ---

