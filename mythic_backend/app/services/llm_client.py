import openai
import base64
from pathlib import Path
from app.config import settings
from typing import Optional
import logging
import random

# Инициализация OpenAI
openai.api_key = settings.OPENAI_API_KEY
client = openai.OpenAI(api_key=settings.OPENAI_API_KEY)

logger = logging.getLogger(__name__)

# Автоматическое удаление клише
CLICHE_FILTERS = [
    "мягкие оттенки", "резкие тени", "атмосфера", "ощущение",
    "передает эмоции", "придает глубину", "создает настроение",
    "особая атмосфера", "уникальная история", "снимок показывает"
]

def strip_cliches(text: str) -> str:
    """Убирает шаблонные фразы из текста"""
    for cliche in CLICHE_FILTERS:
        text = text.replace(cliche, "")
    # Убираем двойные пробелы
    text = " ".join(text.split())
    return text

def generate_text(prompt: str,
                  model: str = "gpt-3.5-turbo",
                  max_tokens: int = 1500,
                  temperature: float = 0.8,
                  image_data: Optional[str] = None) -> str:
    """Генерирует текст с помощью OpenAI API, с поддержкой изображений"""
    try:
        # Система для романтического рассказчика-мемуариста
        system_message = """Ты — романтический рассказчик, создающий простые и искренние истории о влюбленности.

СТИЛЬ: Простой дневник влюбленного человека

ОБЯЗАТЕЛЬНЫЕ ЭЛЕМЕНТЫ:
- Простые и понятные предложения
- Искренние эмоции без преувеличений
- 2-3 сенсорные детали (что видел, слышал, чувствовал)
- Короткие диалоги или мысли в кавычках
- Упоминание реальных подписей/локаций как примеров

СТРУКТУРА ПОВЕСТВОВАНИЯ:
- Пишешь как влюбленный человек в дневнике
- Начинаешь с разного времени (утро, день, вечер, ночь)
- Делишься своими чувствами просто и честно
- Создаешь теплую атмосферу без драмы

ТОНАЛЬНОСТЬ:
- Влюбленный, но не чрезмерно эмоциональный
- Романтичный, но простой и понятный
- Искренний и тёплый
- Читабельный и приятный

ЗАПРЕЩЕНО:
- "Не могу поверить!", "Потрясающе!", "Удивительно!" - НЕ используй эти фразы!
- Слишком много восклицательных знаков
- Сложные длинные предложения
- Преувеличенные эмоции
- Повторяющиеся фразы

ПРАВИЛЬНО:
- "Он мне понравился"
- "Красивые фотографии"
- "Сердце забилось быстрее"
- "Влюбился с первого взгляда"

ЯЗЫК: Русский, простой, живой, читабельный"""

        # Если есть изображение, используем vision model
        if image_data:
            # Для анализа изображений используем gpt-4o
            messages = [
                {
                    "role": "user",
                    "content": [
                        {"type": "text", "text": prompt},
                        {
                            "type": "image_url",
                            "image_url": {
                                "url": image_data,
                                "detail": "low"  # Для определения пола достаточно низкого качества
                            }
                        }
                    ]
                }
            ]
            
            response = client.chat.completions.create(
                model="gpt-4o",
                messages=messages,
                max_tokens=max_tokens,
                temperature=temperature
            )
            
        else:
            # Обычная генерация текста
            response = client.chat.completions.create(
                model=model,
                messages=[
                    {"role": "system", "content": system_message},
                    {"role": "user", "content": prompt}
                ],
                max_tokens=max_tokens,
                temperature=temperature,
                presence_penalty=0.6,
                frequency_penalty=0.4
            )
        
        result = response.choices[0].message.content.strip()
        return strip_cliches(result)
        
    except Exception as e:
        logger.error(f"Ошибка в generate_text: {e}")
        return f"Ошибка генерации: {str(e)}"


def analyze_photo_for_memoir(image_path: Path, context: str = "", chapter_focus: str = "general") -> str:
    """Анализирует фотографию для мемуарного повествования"""
    try:
        if not image_path.exists():
            return "В памяти остался лишь размытый силуэт..."
            
        with open(image_path, "rb") as image_file:
            image_data = base64.b64encode(image_file.read()).decode('utf-8')
        
        # Фокусы для разных глав
        chapter_styles = {
            "first_impression": """Опиши ПЕРВОЕ впечатление от фотографии как воспоминание:

Включи обязательно:
- Что первым бросилось в глаза (цвет, свет, деталь)
- Какой звук/запах/ощущение пришло в голову
- Одну внутреннюю реплику в кавычках
- Одну метафору

Пиши от первого лица как запись в дневнике.
Максимум 4 предложения.""",

            "story_creation": """Создай мини-новеллу по фотографии (до 3 абзацев):

1-й абзац: Что происходило ДО этого кадра
2-й абзац: Момент съёмки (включи 3 сенсорные детали)
3-й абзац: Что чувствовал человек ПОСЛЕ

Пиши как будто ты был свидетелем этой сцены.
Включи один диалог или внутренний монолог.""",

            "hidden_emotions": """Прочитай между строк фотографии:

Что скрывается за идеальным кадром?
- Какое настроение было на самом деле?
- О чём думал человек в этот момент?
- Что он НЕ показал в кадре?

Пиши лирически, включи 2-3 чувственные детали.
Как психологический портрет."""
        }
        
        style = chapter_styles.get(chapter_focus, chapter_styles["first_impression"])
        
        prompt = f"""{style}

Контекст профиля: {context}

Пиши романтично и поэтично, но искренне.
Избегай клише!"""

        response = client.chat.completions.create(
            model="gpt-4o",
            messages=[
                {
                    "role": "user",
                    "content": [
                        {"type": "text", "text": prompt},
                        {
                            "type": "image_url",
                            "image_url": {
                                "url": f"data:image/jpeg;base64,{image_data}",
                                "detail": "high"
                            }
                        }
                    ]
                }
            ],
            max_tokens=300,
            temperature=0.9
        )
        
        result = response.choices[0].message.content.strip()
        return strip_cliches(result)
        
    except Exception as e:
        logger.error(f"Ошибка анализа фото {image_path}: {e}")
        return f"Память сохранила лишь ощущение света и тепла..."


def generate_memoir_chapter(chapter_type: str, data: dict, photo_analysis: str = "") -> str:
    """Генерирует главу мемуаров по конкретной структуре"""
    
    # Проверяем, передан ли готовый промпт в данных
    if chapter_type == "romantic_book_chapter" and "prompt" in data:
        # Для романтических книг используем переданный промпт
        prompt = data["prompt"]
        result = generate_text(prompt, max_tokens=1200, temperature=0.8)  
        return strip_cliches(result)
    
    username = data.get('username', 'незнакомец')
    followers = data.get('followers', 0)
    captions = data.get('captions', ['Без слов'])
    bio = data.get('bio', '')
    locations = data.get('locations', ['неизвестное место'])
    hashtags = data.get('common_hashtags', [])
    
    # Расширенная структура 12 глав мемуаров с большим объёмом текста
    chapter_prompts = {
        "meeting": f"""ГЛАВА 1. «Встреча»

Напиши развернутое воспоминание (4-5 абзацев) о том, как впервые наткнулся на профиль @{username}.

Структура:
1. Абзац: Время, место, настроение вечера (детально)
2. Абзац: Момент обнаружения профиля в ленте  
3. Абзац: Первые ощущения от аватарки и имени
4. Абзац: Внутренний диалог и принятие решения изучать профиль
5. Абзац: Философское размышление о случайных встречах

Обязательно включи:
- Конкретное время и обстановку (что пил, где сидел, какая музыка играла)
- 5-6 сенсорных деталей (запахи, звуки, тактильные ощущения)
- 2-3 внутренние реплики в кавычках
- Метафору о том, как профили появляются в жизни
- Предчувствие важности этой встречи

Пиши очень подробно, как настоящие мемуары.
Каждый абзац должен быть 3-4 предложения.""",

        "first_impression": f"""ГЛАВА 2. «Первое впечатление»

Напиши детальный анализ первой фотографии @{username} (5-6 абзацев).

Анализ фото: {photo_analysis}

Структура:
1. Абзац: Первый взгляд - что сразу бросилось в глаза
2. Абзац: Композиция, свет, цвета как эмоции  
3. Абзац: Звуки и запахи, которые могли бы быть в кадре
4. Абзац: Анализ подписи "{captions[0] if captions else 'Без слов'}"
5. Абзац: Размышления об авторе фото
6. Абзац: Внутренний диалог о красоте и искусстве

Включи:
- Подробное описание каждого элемента композиции
- 3-4 синестетических ощущения (как фото "звучит", "пахнет")
- Цитирование подписи и её интерпретацию
- 2-3 внутренних реплики
- Сравнения с картинами, фильмами, книгами

Пиши как искусствовед, влюблённый в предмет изучения.""",

        "story_creation": f"""ГЛАВА 3. «История одного кадра»

Создай развернутую мини-новеллу по фотографии @{username} (6-7 абзацев).

Контекст: {followers} подписчиков, локации: {locations[0] if locations else 'городские улицы'}

Структура:
1. Абзац: Что происходило за час ДО съёмки
2. Абзац: Настроение и мысли героя перед кадром
3. Абзац: Момент принятия решения снимать
4. Абзац: Сам процесс съёмки (детально)
5. Абзац: Первые секунды после кадра
6. Абзац: Размышления при загрузке в Instagram
7. Абзац: Реакция первых подписчиков

Включи:
- Диалоги (внешние или внутренние)
- Детали окружающей обстановки
- Эмоциональное состояние героя
- Технические моменты съёмки
- Цитирование настоящей подписи поста
- Размышления о том, что значит делиться моментами

Пиши как свидетель событий, создавая кинематографическую сцену.""",

        "deeper_details": f"""ГЛАВА 4. «Углубляясь в детали»

Анализ особенностей стиля и подхода @{username} (5-6 абзацев).

Структура:
1. Абзац: Повторяющиеся мотивы в фотографиях
2. Абзац: Анализ времени публикаций и ритма постов
3. Абзац: Хэштеги как философия: {hashtags[:3] if hashtags else '#жизнь #красота #момент'}
4. Абзац: Стиль подписей - краткость vs глубина
5. Абзац: Техническая сторона - свет, композиция, обработка
6. Абзац: Эволюция стиля от ранних к поздним постам

Включи:
- Конкретные примеры повторяющихся элементов
- Психологический анализ выбора времени для постов
- Интерпретацию хэштегов как мировоззрения
- Сравнение с другими фотографами
- Размышления о визуальном языке
- Внутренние реплики о собственном восприятии

Пиши как исследователь, открывающий закономерности.""",

        "social_analysis": f"""ГЛАВА 5. «Социальный анализ»

Глубокий анализ взаимодействия @{username} с аудиторией (5-6 абзацев).

Данные: {followers} подписчиков, соотношение лайков/комментариев

Структура:
1. Абзац: Портрет типичного подписчика
2. Абзац: Анализ комментариев - что и как пишут люди
3. Абзац: Соотношение лайков к комментариям как показатель
4. Абзац: География подписчиков и культурный контекст
5. Абзац: Сравнение с массовыми аккаунтами
6. Абзац: Размышления о качестве vs количестве в соцсетях

Включи:
- Цитаты из комментариев (придумай реалистичные)
- Психологический портрет аудитории
- Статистический анализ активности
- Культурологические наблюдения
- Философские размышления о цифровом сообществе
- Внутренние диалоги о современных отношениях

Пиши как социолог-наблюдатель с романтическим взглядом.""",

        "psychological_portrait": f"""ГЛАВА 6. «Психологический портрет»

Попытка понять личность @{username} через его творчество (6-7 абзацев).

Био: "{bio if bio else 'Молчание говорит больше слов'}"

Структура:
1. Абзац: Что говорит выбор сюжетов о характере
2. Абзац: Анализ цветовой палитры как отражение души
3. Абзац: Отношение к людям в кадре vs пейзажам
4. Абзац: Склонность к меланхолии или радости
5. Абзац: Отношение к одиночеству и тишине
6. Абзац: Способность видеть красоту в обыденном
7. Абзац: Размышления о внутреннем мире автора

Включи:
- Психологический анализ визуальных предпочтений
- Интерпретацию эмоциональных паттернов
- Размышления о мотивации к творчеству
- Сравнения с типами личности из психологии
- Попытки понять страхи и мечты автора
- Внутренние монологи о человеческой природе

Пиши как психолог, изучающий личность через искусство.""",

        "geography_soul": f"""ГЛАВА 7. «География души»

Исследование мест, которые выбирает @{username} для съёмок (5-6 абзацев).

Локации: {locations if locations else ['городские улицы', 'тихие парки', 'домашние углы']}

Структура:
1. Абзац: Анализ выбора локаций как автопортрет
2. Абзац: Городские пространства vs природные
3. Абзац: Детальный разбор конкретного места: {locations[0] if locations else 'любимого кафе'}
4. Абзац: Время дня и сезоны - когда снимает чаще
5. Абзац: Отношение к толпе vs уединению
6. Абзац: Места как эмоциональные якоря

Включи:
- Поэтическое описание каждой локации
- Размышления о связи места и настроения
- Попытки понять, где живёт автор душой
- Сравнения с собственными любимыми местами
- Философию пространства в фотографии
- Внутренние диалоги о поиске дома

Пиши как путешественник, изучающий карту чужой души.""",

        "between_lines": f"""ГЛАВА 8. «Между строк»

Лирическое отступление о том, что скрывается за совершенством (6-7 абзацев).

Структура:
1. Абзац: Размышления об идеальности vs реальности в Instagram
2. Абзац: Что НЕ показывают в кадре - обратная сторона красоты
3. Абзац: Сенсорный контраст - как пахнут настоящие моменты
4. Абзац: Поиск подлинности в эпоху фильтров
5. Абзац: Усталость, сомнения, 3 утра - скрытые эмоции
6. Абзац: Маски, которые мы носим в соцсетях
7. Абзац: Прозрачность души @{username}

Включи:
- Философские размышления о природе искренности
- Контраст между показным и настоящим
- Сенсорные детали реальной жизни vs идеальных кадров
- Размышления о цене красоты
- Поиск человечности в цифровом мире
- Благодарность за честность в искусстве

Пиши философски и лирически, с глубокими размышлениями.""",

        "music_photography": f"""ГЛАВА 9. «Музыка фотографий»

О ритме, мелодии и гармонии в визуальном творчестве @{username} (5-6 абзацев).

Структура:
1. Абзац: Как фотографии "звучат" - синестезия
2. Абзац: Ритм публикаций как музыкальный размер
3. Абзац: Цветовая гармония как аккорды
4. Абзац: Тишина и паузы - что говорит отсутствие постов
5. Абзац: Какую музыку слушал бы @{username}
6. Абзац: Фотография как застывшая мелодия

Включи:
- Музыкальные метафоры для описания визуального
- Анализ ритмических паттернов в творчестве
- Синестетические ощущения от фотографий
- Размышления о связи музыки и изображения
- Попытки понять музыкальные предпочтения автора
- Поэтические описания "звучания" кадров

Пиши как музыкант, слышащий мелодии в картинах.""",

        "reflections_changes": f"""ГЛАВА 10. «Отражения и размышления»

О том, как изучение @{username} изменило меня самого (6-7 абзацев).

Структура:
1. Абзац: Что изменилось в моём восприятии красоты
2. Абзац: Как я начал по-другому смотреть на свою ленту
3. Абзац: Новые привычки - замечать свет, тени, детали
4. Абзац: Влияние на мои собственные фотографии
5. Абзац: Размышления о роли искусства в жизни
6. Абзац: Благодарность за неожиданные уроки
7. Абзац: Желание делиться красотой с другими

Включи:
- Конкретные примеры изменений в поведении
- Сравнения "до" и "после" знакомства
- Размышления о силе вдохновения
- Планы применить полученные уроки
- Философские выводы о влиянии искусства
- Внутренние диалоги о саморазвитии

Пиши как ученик, осознающий пройденный путь.""",

        "farewell_portrait": f"""ГЛАВА 11. «Прощальный портрет»

Итоговые размышления и пожелания @{username} (5-6 абзацев).

Структура:
1. Абзац: Попытка создать цельный портрет личности
2. Абзац: Что останется важного от этой встречи
3. Абзац: Конкретные пожелания автору (не общие)
4. Абзац: Благодарность за красоту и вдохновение
5. Абзац: Размышления о продолжении пути
6. Абзац: Метафора расставания с сохранением связи

Включи:
- Синтез всех наблюдений в цельный образ
- Искренние, персональные пожелания
- Благодарность за конкретные открытия
- Размышления о влиянии на будущее
- Поэтическое прощание
- Надежду на продолжение творческого пути

Пиши как друг, прощающийся после важной встречи.""",

        "epilogue": f"""ЭПИЛОГ. «Что остается»

Финальные размышления о силе случайных встреч (4-5 абзацев).

Структура:
1. Абзац: Что значат такие встречи в цифровую эпоху
2. Абзац: Размышления о красоте как универсальном языке
3. Абзац: Призыв к читателю искать подобные открытия
4. Абзац: Философия о том, что каждый может стать чьим-то @{username}
5. Абзац: Финальная мысль о бесконечности красоты

Включи:
- Широкие обобщения о природе искусства
- Призыв к читателю
- Размышления о человеческих связях
- Философские выводы
- Оптимистичное завершение

Пиши как мудрец, подводящий итоги жизненного урока."""
    }
    
    prompt = chapter_prompts.get(chapter_type, "Напиши романтично и поэтично.")
    
    result = generate_text(prompt, max_tokens=800, temperature=0.9)  
    return strip_cliches(result)


def generate_complete_memoir_book(data: dict, images: list) -> dict:
    """Генерирует все 12 глав мемуаров для полноценной книги"""
    
    username = data.get('username', 'незнакомец')
    
    # Анализируем фотографии для разных глав
    photo_analyses = []
    if images:
        for i, img_path in enumerate(images[:6]):  # Максимум 6 фото для анализа
            if img_path.exists():
                try:
                    focus_types = ["first_impression", "story_creation", "hidden_emotions"]
                    focus = focus_types[i % 3]
                    analysis = analyze_photo_for_memoir(img_path, f"@{username}", focus)
                    photo_analyses.append(analysis)
                except Exception as e:
                    print(f"❌ Ошибка анализа фото {img_path}: {e}")
                    photo_analyses.append("Фотография пробуждает особые чувства...")
    
    # Добавляем анализы фото в данные
    data['photo_analyses'] = photo_analyses
    
    # Генерируем все 12 глав
    chapters = {}
    
    chapter_types = [
        "meeting", "first_impression", "story_creation", "deeper_details",
        "social_analysis", "psychological_portrait", "geography_soul", 
        "between_lines", "music_photography", "reflections_changes",
        "farewell_portrait", "epilogue"
    ]
    
    for chapter_type in chapter_types:
        try:

            photo_analysis = ""
            if chapter_type in ["first_impression", "story_creation"] and photo_analyses:
                photo_analysis = photo_analyses[0] if photo_analyses else ""
            
            chapter_content = generate_memoir_chapter(chapter_type, data, photo_analysis)
            chapters[chapter_type] = chapter_content
            print(f"✅ Глава '{chapter_type}' создана")
            
        except Exception as e:
            print(f"❌ Ошибка создания главы '{chapter_type}': {e}")
            # Добавляем базовый контент при ошибке
            chapters[chapter_type] = f"Глава о {chapter_type.replace('_', ' ')} ждет своего написания..."
    
    return chapters
