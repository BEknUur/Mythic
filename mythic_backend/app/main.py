# app/main.py
from fastapi import FastAPI, Request, BackgroundTasks, HTTPException
from fastapi.responses import FileResponse, HTMLResponse
from fastapi.staticfiles import StaticFiles
from fastapi.middleware.cors import CORSMiddleware

import asyncio
from app.services.image_processor import process_folder
from app.services.text_collector import collect_texts
from app.services.book_builder import build_romantic_book
from pydantic import AnyUrl
from pathlib import Path
import json, logging, anyio, random

from app.config import settings
from app.services.apify_client import run_actor, fetch_run, fetch_items
from app.services.downloader import download_photos

log = logging.getLogger("api")
app = FastAPI(title="–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è –õ–µ—Ç–æ–ø–∏—Å—å –õ—é–±–≤–∏", description="–°–æ–∑–¥–∞–µ—Ç –∫—Ä–∞—Å–∏–≤—ã–µ —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ –∫–Ω–∏–≥–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ Instagram –ø—Ä–æ—Ñ–∏–ª–µ–π –¥–ª—è –≤–∞—à–∏—Ö –ª—é–±–∏–º—ã—Ö")


app.add_middleware(
    CORSMiddleware,
    allow_origins=[
        "http://localhost:5173", 
        "http://localhost:3000",  
        "http://127.0.0.1:5173",
        "http://127.0.0.1:3000",
    ],
    allow_credentials=True,
    allow_methods=["GET", "POST", "PUT", "DELETE", "OPTIONS"],
    allow_headers=["*"],
)


app.mount("/static", StaticFiles(directory="static"), name="static")

@app.get("/health")
def health_check():
    """–ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã API"""
    return {"status": "ok", "message": "API —Ä–∞–±–æ—Ç–∞–µ—Ç! üíï"}

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ /start-scrape ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
@app.get("/start-scrape")
async def start_scrape(url: AnyUrl):
    clean_url = str(url).rstrip("/")        

    run_input = {
        "directUrls":     [clean_url],
        "resultsType":    "details",
        "scrapeComments": False,
        
        "resultsLimit":   200,
    }

    webhook = {
        "eventTypes": ["ACTOR.RUN.SUCCEEDED"],
        "requestUrl": f"{settings.BACKEND_BASE}/webhook/apify",
        "payloadTemplate": (
            '{"runId":"{{runId}}",'
            '"datasetId":"{{defaultDatasetId}}"}'
        ),
    }

    run = await run_actor(run_input, webhooks=[webhook])
    log.info("Actor started runId=%s", run["id"])
    return {"runId": run["id"], "message": "–ù–∞—á–∏–Ω–∞—é –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç—å –≤–∞—à—É –ª–∏—á–Ω–æ—Å—Ç—å... ‚ù§Ô∏è"}


@app.post("/webhook/apify")
async def apify_webhook(request: Request, background: BackgroundTasks):
    try:
        payload = await request.json()
    except Exception:
        payload = {}

    # --- run / dataset ------------------------------------------------------------------
    run_id = payload.get("runId") or request.headers.get("x-apify-run-id")
    if not run_id:
        raise HTTPException(400, "runId missing")

    dataset_id = payload.get("datasetId")
    if not dataset_id:
        run = await fetch_run(run_id)
        dataset_id = run.get("defaultDatasetId")         

    if not dataset_id:
        raise HTTPException(500, "datasetId unresolved")

    items = await fetch_items(dataset_id)
    run_dir = Path("data") / run_id
    run_dir.mkdir(parents=True, exist_ok=True)
    (run_dir / "posts.json").write_text(json.dumps(items, ensure_ascii=False, indent=2))

    # --- –∫–∞—á–∞–µ–º –∫–∞—Ä—Ç–∏–Ω–∫–∏ ---------------------------------------------------------------
    images_dir = run_dir / "images"
    background.add_task(download_photos, items, images_dir)

    async def _build():
        

        print("üíï –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
        await asyncio.sleep(5)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑
        for attempt in range(10):
            if images_dir.exists() and any(images_dir.glob("*")):
                print(f"üì∏ –ù–∞–π–¥–µ–Ω—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –ø–∞–ø–∫–µ {images_dir}")
                break
            print(f"‚è≥ –ü–æ–ø—ã—Ç–∫–∞ {attempt + 1}/10: –∂–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
            await asyncio.sleep(2)

        imgs      = await process_folder(images_dir)
        comments  = collect_texts(run_dir / "posts.json")
        build_romantic_book(run_id, imgs, comments)

    background.add_task(lambda: anyio.run(_build))

    return {"status": "processing", "runId": run_id, "message": "–°–æ–±–∏—Ä–∞—é –¥–∞–Ω–Ω—ã–µ, —á—Ç–æ–±—ã –ø–æ–Ω—è—Ç—å –≤–∞—à—É –¥—É—à—É... üíï"}


@app.get("/status/{run_id}")
def status(run_id: str):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–∏–≥–∏"""
    run_dir = Path("data") / run_id
    posts_json = run_dir / "posts.json"
    images_dir = run_dir / "images"
    html_file = run_dir / "book.html"
    
    log.info(f"Status check for {run_id}")
    
    data_collected = posts_json.exists()
    images_downloaded = images_dir.exists() and any(images_dir.glob("*"))
    book_generated = html_file.exists()

    message = "‚è≥ –ù–∞—á–∏–Ω–∞—é –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ø–æ –≤–∞—à–µ–º—É –ø—Ä–æ—Ñ–∏–ª—é..."

    if book_generated:
        message = " –í–∞—à–∞ –∫–Ω–∏–≥–∞ –≥–æ—Ç–æ–≤–∞! –í—Ä–µ–º—è –æ–∫—É–Ω—É—Ç—å—Å—è –≤ —Ä–æ–º–∞–Ω—Ç–∏–∫—É."
    elif images_downloaded:
        romantic_generation_messages = [
            "–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∏–∑–≥–∏–± —Ç–≤–æ–µ–≥–æ –Ω–æ—Å–∞: –Ω–µ–∂–Ω–∞—è –ø–ª–∞–≤–Ω–∞—è –ª–∏–Ω–∏—è, —Å–ª–æ–≤–Ω–æ —Å–æ–∑–¥–∞–Ω–Ω–∞—è –∏—Å–∫—É—Å–Ω—ã–º —Å–∫—É–ª—å–ø—Ç–æ—Ä–æ–º...",
            "–í–æ—Å—Ö–∏—â–∞—é—Å—å –∏—Å–∫—Ä—è—â–∏–º—Å—è –æ—Ç—Ä–∞–∂–µ–Ω–∏–µ–º —Å–≤–µ—Ç–∞ –≤ —Ç–≤–æ—ë–º –≤–∑–≥–ª—è–¥–µ...",
            "–í—Å–ª—É—à–∏–≤–∞—é—Å—å –≤ —Ç—ë–ø–ª—ã–π –±–∞—Ä—Ö–∞—Ç —Ç–≤–æ–µ–≥–æ –≥–æ–ª–æ—Å–∞, —Ö–æ—Ç—è –∏ –Ω–µ —Å–ª—ã—à—É –µ–≥–æ...",
            "–û—â—É—â–∞—é –º—è–≥–∫–æ—Å—Ç—å —Ç–≤–æ–µ–π —É–ª—ã–±–∫–∏, –∫–∞–∫ –≤–µ—Å–µ–Ω–Ω–∏–π —Ä–∞—Å—Å–≤–µ—Ç...",
            "–ò–∑—É—á–∞—é –∫–æ–Ω—Ç—É—Ä —Ç–≤–æ–∏—Ö –≥—É–± - –æ–Ω–∏ —Å–ª–æ–≤–Ω–æ –ª–µ–ø–µ—Å—Ç–∫–∏ —Ä–æ–∑—ã, –≥–æ—Ç–æ–≤—ã–µ —à–µ–ø—Ç–∞—Ç—å —Å–µ–∫—Ä–µ—Ç—ã...",
            "–†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—é, –∫–∞–∫ —Å–≤–µ—Ç –∏–≥—Ä–∞–µ—Ç –Ω–∞ —Ç–≤–æ–∏—Ö —Å–∫—É–ª–∞—Ö...",
            "–¢–æ–Ω—É –≤ –æ–∫–µ–∞–Ω–µ —Ç–≤–æ–µ–≥–æ –≤–∑–≥–ª—è–¥–∞ - —Ç–∞–∫–æ–π –≥–ª—É–±–æ–∫–∏–π, —á—Ç–æ —Ç–µ—Ä—è—é—Å—å...",
            "–ó–∞–º–µ—á–∞—é, –∫–∞–∫ —Ç—Ä–µ–ø–µ—â—É—Ç —Ç–≤–æ–∏ —Ä–µ—Å–Ω–∏—Ü—ã –ø—Ä–∏ –∫–∞–∂–¥–æ–º –º–æ—Ä–≥–∞–Ω–∏–∏...",
            "–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –º–∏–º–∏–∫—É - –∫–∞–∂–¥–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Ç–¥–µ–ª—å–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é...",
            "–í–æ—Å—Ö–∏—â–∞—é—Å—å –Ω–µ–∂–Ω–æ—Å—Ç—å—é —Ç–≤–æ–∏—Ö —â—ë–∫ - –æ–Ω–∏ —Å–ª–æ–≤–Ω–æ —Ç—Ä–æ–Ω—É—Ç—ã —É—Ç—Ä–µ–Ω–Ω–∏–º —Ä—É–º—è–Ω—Ü–µ–º...",
            "–í–≥–ª—è–¥—ã–≤–∞—é—Å—å –≤ —Ä–∞–¥—É–∂–∫—É —Ç–≤–æ–∏—Ö –≥–ª–∞–∑ - —Ç–∞–º —Å–ø—Ä—è—Ç–∞–Ω—ã –≤—Å–µ –æ—Ç—Ç–µ–Ω–∫–∏ –Ω–µ–±–∞...",
            "–°–ø–ª–µ—Ç–∞—é —Å–ª–æ–≤–∞ –≤ –≥–ª–∞–≤—ã, —á—Ç–æ–±—ã –æ–ø–∏—Å–∞—Ç—å —Ç–≤–æ—é –Ω–µ–ø–æ–≤—Ç–æ—Ä–∏–º—É—é –∫—Ä–∞—Å–æ—Ç—É...",
            "–ü–µ—Ä–µ–ø–ª–µ—Ç–∞—é –≤–∞—à–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –≤ —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫—É—é –ª–µ—Ç–æ–ø–∏—Å—å...",
            "–î–æ–±–∞–≤–ª—è—é –ø–æ—Å–ª–µ–¥–Ω–∏–µ —à—Ç—Ä–∏—Ö–∏ –≤ –∫–Ω–∏–≥—É –æ –≤–∞—à–µ–π –∫—Ä–∞—Å–æ—Ç–µ..."
        ]
        message = random.choice(romantic_generation_messages)
    elif data_collected:
        # –î–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –∞–Ω–∞–ª–∏–∑–µ —á–µ—Ä—Ç –ª–∏—Ü–∞
        detailed_analysis_messages = [
            "–ò–∑—É—á–∞—é –≥–ª—É–±–∏–Ω—É –≤–∞—à–∏—Ö –≥–ª–∞–∑... –í –Ω–∏—Ö —Ü–µ–ª–∞—è –≤—Å–µ–ª–µ–Ω–Ω–∞—è —ç–º–æ—Ü–∏–π",
            "–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∏–∑–≥–∏–± –≤–∞—à–µ–π —É–ª—ã–±–∫–∏ - –æ–Ω–∞ –æ—Å–≤–µ—â–∞–µ—Ç –∫–∞–∂–¥—ã–π –∫–∞–¥—Ä",
            "–†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—é —Ç–æ—á—ë–Ω—ã–µ —á–µ—Ä—Ç—ã –≤–∞—à–µ–≥–æ –Ω–æ—Å–∞, —Ç–∞–∫–∏–µ –≥–∞—Ä–º–æ–Ω–∏—á–Ω—ã–µ...",
            "–í–æ—Å—Ö–∏—â–∞—é—Å—å –ª–∏–Ω–∏–µ–π –≤–∞—à–∏—Ö –≥—É–± - –æ–Ω–∏ —Å–ª–æ–≤–Ω–æ —Å–æ–∑–¥–∞–Ω—ã –¥–ª—è –ø–æ—ç–∑–∏–∏",
            "–ò–∑—É—á–∞—é –æ–≤–∞–ª –≤–∞—à–µ–≥–æ –ª–∏—Ü–∞ - –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–µ –ø—Ä–æ–ø–æ—Ä—Ü–∏–∏ –∫—Ä–∞—Å–æ—Ç—ã",
            "–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –≤–∞—à–∏—Ö –≥–ª–∞–∑ –Ω–∞ –∫–∞–∂–¥–æ–º —Ñ–æ—Ç–æ...",
            "–†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—é, –∫–∞–∫ —Å–≤–µ—Ç –∏–≥—Ä–∞–µ—Ç –Ω–∞ –≤–∞—à–∏—Ö —Å–∫—É–ª–∞—Ö",
            "–ò–∑—É—á–∞—é –º–∏–º–∏–∫—É - –∫–∞–∂–¥–∞—è —ç–º–æ—Ü–∏—è —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é",
            "–¢–æ–Ω—É –≤ –≥–ª—É–±–∏–Ω–µ –≤–∞—à–µ–≥–æ –≤–∑–≥–ª—è–¥–∞, –∏—â—É —Å–∫—Ä—ã—Ç—ã–µ —Ç–∞–π–Ω—ã –¥—É—à–∏",
            "–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Å–∏–º–º–µ—Ç—Ä–∏—é —á–µ—Ä—Ç - –ø—Ä–∏—Ä–æ–¥–∞ —Å–æ–∑–¥–∞–ª–∞ —à–µ–¥–µ–≤—Ä",
            "–ò–∑—É—á–∞—é, –∫–∞–∫ –≤–∞—à–∏ –±—Ä–æ–≤–∏ –æ–±—Ä–∞–º–ª—è—é—Ç –∑–∞–≥–∞–¥–æ—á–Ω—ã–µ –≥–ª–∞–∑–∞",
            "–†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—é –Ω–µ–∂–Ω–æ—Å—Ç—å –≤–∞—à–∏—Ö —â—ë–∫ - –æ–Ω–∏ —Å–ª–æ–≤–Ω–æ –ª–µ–ø–µ—Å—Ç–∫–∏ —Ä–æ–∑",
            "–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ñ–æ—Ä–º—É –≤–∞—à–µ–≥–æ –ø–æ–¥–±–æ—Ä–æ–¥–∫–∞ -—Ç–∞–∫–∞—è —ç–ª–µ–≥–∞–Ω—Ç–Ω–∞—è –ª–∏–Ω–∏—è",
            "–ò–∑—É—á–∞—é, –∫–∞–∫ –≤—ã –ø—Ä–∏—â—É—Ä–∏–≤–∞–µ—Ç–µ –≥–ª–∞–∑–∞ –ø—Ä–∏ —É–ª—ã–±–∫–µ...",
            "–†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—é –∏–∑—è—â–µ—Å—Ç–≤–æ –≤–∞—à–∏—Ö —Ä–µ—Å–Ω–∏—Ü -–æ–Ω–∏ –∫–∞–∫ –∫—Ä—ã–ª—å—è –±–∞–±–æ—á–∫–∏",
            "–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ü–≤–µ—Ç –≤–∞—à–∏—Ö –≥–ª–∞–∑ - –≤ –Ω–∏—Ö –æ—Ç—Ä–∞–∂–∞–µ—Ç—Å—è –Ω–µ–±–æ",
            "–ò–∑—É—á–∞—é –±–ª–µ—Å–∫ –≤ –≤–∞—à–∏—Ö –≥–ª–∞–∑–∞—Ö - –æ–Ω —è—Ä—á–µ –≤—Å–µ—Ö –±—Ä–∏–ª–ª–∏–∞–Ω—Ç–æ–≤",
            "–†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—é –Ω–µ–∂–Ω–æ—Å—Ç—å –≤–∞—à–µ–π –∫–æ–∂–∏ - –æ–Ω–∞ —Å–ª–æ–≤–Ω–æ —Ñ–∞—Ä—Ñ–æ—Ä",
            "–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Å—Ç—Ä–∞—Å—Ç—å –≤ –≤–∞—à–µ–º –≤–∑–≥–ª—è–¥–µ –Ω–∞ –æ—Ç–∫—Ä–æ–≤–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ...",
            "–ò–∑—É—á–∞—é, –∫–∞–∫ –≤—ã –Ω–∞–∫–ª–æ–Ω—è–µ—Ç–µ –≥–æ–ª–æ–≤—É - –∫–∞–∂–¥—ã–π –∂–µ—Å—Ç –∏–∑—è—â–µ–Ω"
        ]
        message = random.choice(detailed_analysis_messages)
    
    status_info = {
        "runId": run_id,
        "message": message,
        "stages": {
            "data_collected": data_collected,
            "images_downloaded": images_downloaded,
            "book_generated": book_generated
        },
        "files": {}
    }
    
    if html_file.exists():
        status_info["files"]["html"] = f"/view/{run_id}/book.html"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ—Ñ–∏–ª–µ –µ—Å–ª–∏ –µ—Å—Ç—å
    if posts_json.exists():
        try:
            posts_data = json.loads(posts_json.read_text(encoding="utf-8"))
            if posts_data:
                profile = posts_data[0]
                status_info["profile"] = {
                    "username": profile.get("username"),
                    "fullName": profile.get("fullName"),
                    "followers": profile.get("followersCount"),
                    "posts": len(profile.get("latestPosts", []))
                }
        except:
            pass
    
    log.info(f"Status response: {status_info}")
    return status_info


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ /download/{run_id}/{filename} ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
@app.get("/download/{run_id}/{filename}")
def download_file(run_id: str, filename: str):
    """–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≥–æ—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ (PDF, HTML)"""
    run_dir = Path("data") / run_id
    file_path = run_dir / filename
    
    if not file_path.exists():
        raise HTTPException(404, f"–§–∞–π–ª {filename} –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º MIME —Ç–∏–ø
    media_type = "application/pdf" if filename.endswith(".pdf") else "text/html"
    
    return FileResponse(
        path=file_path,
        media_type=media_type,
        filename=filename
    )


@app.get("/view/{run_id}/book.html")
def view_book_html(run_id: str):
    """–ü—Ä–æ—Å–º–æ—Ç—Ä HTML –≤–µ—Ä—Å–∏–∏ –∫–Ω–∏–≥–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ"""
    run_dir = Path("data") / run_id
    html_file = run_dir / "book.html"
    
    if not html_file.exists():
        raise HTTPException(404, "HTML –≤–µ—Ä—Å–∏—è –∫–Ω–∏–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    
    html_content = html_file.read_text(encoding="utf-8")
    return HTMLResponse(content=html_content)


# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ / (–≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞) ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
@app.get("/")
def home():
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º"""
    static_dir = Path("static")
    index_file = static_dir / "index.html"
    
    if index_file.exists():
        html_content = index_file.read_text(encoding="utf-8")
        return HTMLResponse(content=html_content)
    else:
        return HTMLResponse(content="""
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è –õ–µ—Ç–æ–ø–∏—Å—å –õ—é–±–≤–∏</title>
    <link href="https://fonts.googleapis.com/css2?family=Dancing+Script:wght@400;700&family=Playfair+Display:wght@400;700&family=Inter:wght@300;400;500;600&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Inter', sans-serif;
            line-height: 1.6;
            color: #2c3e50;
            background: linear-gradient(135deg, #ff9a9e 0%, #fecfef 50%, #fecfef 100%);
            min-height: 100vh;
            padding: 20px;
        }
        
        .container {
            max-width: 1000px;
            margin: 0 auto;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            box-shadow: 0 20px 60px rgba(0,0,0,0.15);
            overflow: hidden;
        }
        
        .header {
            background: linear-gradient(135deg, #ff6b9d 0%, #c44569 100%);
            padding: 60px 40px;
            text-align: center;
            color: white;
            position: relative;
        }
        
        .header::before {
            content: "üíï";
            position: absolute;
            top: 20px;
            left: 40px;
            font-size: 2em;
            animation: float 3s ease-in-out infinite;
        }
        
        .header::after {
            content: "üíñ";
            position: absolute;
            top: 30px;
            right: 40px;
            font-size: 1.5em;
            animation: float 3s ease-in-out infinite reverse;
        }
        
        @keyframes float {
            0%, 100% { transform: translateY(0px); }
            50% { transform: translateY(-10px); }
        }
        
        .main-title {
            font-family: 'Dancing Script', cursive;
            font-size: 4em;
            font-weight: 700;
            margin-bottom: 20px;
            text-shadow: 2px 2px 4px rgba(0,0,0,0.2);
        }
        
        .subtitle {
            font-family: 'Playfair Display', serif;
            font-size: 1.6em;
            opacity: 0.9;
            margin-bottom: 30px;
        }
        
        .heart-decoration {
            font-size: 2.5em;
            animation: heartbeat 2s ease-in-out infinite;
        }
        
        @keyframes heartbeat {
            0% { transform: scale(1); }
            50% { transform: scale(1.1); }
            100% { transform: scale(1); }
        }
        
        .content {
            padding: 60px 40px;
        }
        
        .love-form {
            background: linear-gradient(135deg, #ffeaa7 0%, #fab1a0 100%);
            padding: 40px;
            border-radius: 15px;
            margin-bottom: 40px;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }
        
        .form-title {
            font-family: 'Dancing Script', cursive;
            font-size: 2.5em;
            color: #d63031;
            text-align: center;
            margin-bottom: 30px;
        }
        
        .input-group {
            margin-bottom: 25px;
        }
        
        .input-label {
            display: block;
            font-weight: 600;
            color: #2d3436;
            margin-bottom: 8px;
            font-size: 1.1em;
        }
        
        .input-field {
            width: 100%;
            padding: 15px 20px;
            border: 2px solid #fdcb6e;
            border-radius: 12px;
            font-size: 1em;
            transition: all 0.3s ease;
            font-family: 'Inter', sans-serif;
        }
        
        .input-field:focus {
            outline: none;
            border-color: #e17055;
            box-shadow: 0 0 0 3px rgba(225, 112, 85, 0.2);
        }
        
        .love-button {
            width: 100%;
            background: linear-gradient(135deg, #fd79a8 0%, #e84393 100%);
            color: white;
            border: none;
            padding: 20px 40px;
            border-radius: 12px;
            font-size: 1.2em;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            font-family: 'Inter', sans-serif;
            margin-top: 20px;
        }
        
        .love-button:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 30px rgba(232, 67, 147, 0.3);
        }
        
        .features {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 30px;
            margin-top: 40px;
        }
        
        .feature-card {
            background: white;
            padding: 30px;
            border-radius: 15px;
            text-align: center;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            transition: transform 0.3s ease;
        }
        
        .feature-card:hover {
            transform: translateY(-5px);
        }
        
        .feature-icon {
            font-size: 3em;
            margin-bottom: 20px;
        }
        
        .feature-title {
            font-family: 'Playfair Display', serif;
            font-size: 1.3em;
            color: #2d3436;
            margin-bottom: 15px;
        }
        
        .feature-text {
            color: #636e72;
            line-height: 1.6;
        }
        
        @media (max-width: 768px) {
            .content {
                padding: 40px 20px;
            }
            
            .header {
                padding: 40px 20px;
            }
            
            .main-title {
                font-size: 2.5em;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1 class="main-title">–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è –õ–µ—Ç–æ–ø–∏—Å—å –õ—é–±–≤–∏</h1>
            <p class="subtitle">–°–æ–∑–¥–∞–π—Ç–µ –∫—Ä–∞—Å–∏–≤—É—é –∫–Ω–∏–≥—É –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–π –¥–ª—è –≤–∞—à–µ–≥–æ –ª—é–±–∏–º–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞</p>
            <div class="heart-decoration">üíù</div>
        </div>
        
        <div class="content">
            <div class="love-form">
                <h2 class="form-title">–°–æ–∑–¥–∞—Ç—å –ö–Ω–∏–≥—É –õ—é–±–≤–∏</h2>
                <form id="loveBookForm">
                    <div class="input-group">
                        <label class="input-label" for="instagramUrl">Instagram –ø—Ä–æ—Ñ–∏–ª—å –≤–∞—à–µ–≥–æ –ª—é–±–∏–º–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ üíï</label>
                        <input type="url" id="instagramUrl" class="input-field" placeholder="https://www.instagram.com/username" required>
                    </div>
                    
                    <button type="submit" class="love-button">
                        –°–æ–∑–¥–∞—Ç—å –†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫—É—é –ö–Ω–∏–≥—É ‚ù§Ô∏è
                    </button>
                </form>
            </div>
            
            <div class="features">
                <div class="feature-card">
                    <div class="feature-icon">üìñ</div>
                    <h3 class="feature-title">–ö—Ä–∞—Å–∏–≤–∞—è –õ–µ—Ç–æ–ø–∏—Å—å</h3>
                    <p class="feature-text">–°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Å–∏–≤—É—é –∫–Ω–∏–≥—É —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏ –∏ —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–º–∏ —Ç–µ–∫—Å—Ç–∞–º–∏ –æ –≤–∞—à–µ–º –ª—é–±–∏–º–æ–º —á–µ–ª–æ–≤–µ–∫–µ</p>
                </div>
                
                <div class="feature-card">
                    <div class="feature-icon">üíå</div>
                    <h3 class="feature-title">–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–µ –ü–æ—Å–ª–∞–Ω–∏—è</h3>
                    <p class="feature-text">–î–æ–±–∞–≤–ª—è–µ–º —Ç—Ä–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ç–µ–∫—Å—Ç—ã –∏ —Ü–∏—Ç–∞—Ç—ã –æ –ª—é–±–≤–∏ –º–µ–∂–¥—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏</p>
                </div>
                
                <div class="feature-card">
                    <div class="feature-icon">üé®</div>
                    <h3 class="feature-title">–≠–ª–µ–≥–∞–Ω—Ç–Ω—ã–π –î–∏–∑–∞–π–Ω</h3>
                    <p class="feature-text">–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Å —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–º–∏ —Ü–≤–µ—Ç–∞–º–∏ –∏ —à—Ä–∏—Ñ—Ç–∞–º–∏</p>
                </div>
                
                <div class="feature-card">
                    <div class="feature-icon">üì±</div>
                    <h3 class="feature-title">–ü—Ä–æ—Å—Ç–æ –∏ –ë—ã—Å—Ç—Ä–æ</h3>
                    <p class="feature-text">–ü—Ä–æ—Å—Ç–æ —É–∫–∞–∂–∏—Ç–µ Instagram –ø—Ä–æ—Ñ–∏–ª—å - –º—ã —Å–¥–µ–ª–∞–µ–º –≤—Å—ë –æ—Å—Ç–∞–ª—å–Ω–æ–µ –∑–∞ –≤–∞—Å</p>
                </div>
            </div>
        </div>
    </div>
    
    <script>
        document.getElementById('loveBookForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const url = document.getElementById('instagramUrl').value;
            const button = document.querySelector('.love-button');
            
            button.disabled = true;
            button.innerHTML = '–°–æ–∑–¥–∞–µ–º –∫–Ω–∏–≥—É... üíï';
            
            try {
                const response = await fetch(`/start-scrape?url=${encodeURIComponent(url)}`);
                const result = await response.json();
                
                if (response.ok) {
                    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å—Ç–∞—Ç—É—Å–∞
                    window.location.href = `/status-page?runId=${result.runId}`;
                } else {
                    throw new Error(result.message || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
                }
            } catch (error) {
                alert('–û—à–∏–±–∫–∞: ' + error.message);
                button.disabled = false;
                button.innerHTML = '–°–æ–∑–¥–∞—Ç—å –†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫—É—é –ö–Ω–∏–≥—É ‚ù§Ô∏è';
            }   
        });
    </script>
</body>
</html>
        """)

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ /status-page ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
@app.get("/status-page")
def status_page(runId: str):
    """–°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–Ω–∏–≥–∏"""
    return HTMLResponse(content=f"""
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–°–æ–∑–¥–∞–Ω–∏–µ –†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–π –ö–Ω–∏–≥–∏</title>
    <link href="https://fonts.googleapis.com/css2?family=Dancing+Script:wght@400;700&family=Playfair+Display:wght@400;700&family=Inter:wght@300;400;500;600&display=swap" rel="stylesheet">
    <style>
        * {{
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }}
        
        body {{
            font-family: 'Inter', sans-serif;
            background: linear-gradient(135deg, #ff9a9e 0%, #fecfef 100%);
            min-height: 100vh;
            padding: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
        }}
        
        .status-container {{
            max-width: 600px;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            padding: 60px 40px;
            text-align: center;
            box-shadow: 0 20px 60px rgba(0,0,0,0.15);
        }}
        
        .status-title {{
            font-family: 'Dancing Script', cursive;
            font-size: 3em;
            color: #e84393;
            margin-bottom: 30px;
        }}
        
        .status-message {{
            font-size: 1.2em;
            color: #2d3436;
            margin-bottom: 40px;
            line-height: 1.6;
        }}
        
        .progress-container {{
            margin: 40px 0;
        }}
        
        .progress-bar {{
            width: 100%;
            height: 12px;
            background: #ddd;
            border-radius: 6px;
            overflow: hidden;
            margin-bottom: 20px;
        }}
        
        .progress-fill {{
            height: 100%;
            background: linear-gradient(135deg, #fd79a8 0%, #e84393 100%);
            width: 0%;
            transition: width 0.3s ease;
            border-radius: 6px;
        }}
        
        .progress-text {{
            color: #636e72;
            font-style: italic;
        }}
        
        .heart-loading {{
            font-size: 4em;
            margin: 30px 0;
            animation: heartbeat 1.5s ease-in-out infinite;
        }}
        
        @keyframes heartbeat {{
            0%, 100% {{ transform: scale(1) rotate(0deg); }}
            50% {{ transform: scale(1.2) rotate(5deg); }}
        }}
        
        .result-container {{
            display: none;
            margin-top: 30px;
        }}
        
        .success-title {{
            font-family: 'Dancing Script', cursive;
            font-size: 2.5em;
            color: #00b894;
            margin-bottom: 20px;
        }}
        
        .download-buttons {{
            display: flex;
            gap: 20px;
            justify-content: center;
            flex-wrap: wrap;
            margin-top: 30px;
        }}
        
        .download-btn {{
            padding: 15px 30px;
            border: none;
            border-radius: 10px;
            font-weight: 600;
            text-decoration: none;
            transition: all 0.3s ease;
            cursor: pointer;
        }}
        
        .btn-view {{
            background: linear-gradient(135deg, #74b9ff 0%, #0984e3 100%);
            color: white;
        }}
        
        .btn-download {{
            background: linear-gradient(135deg, #fd79a8 0%, #e84393 100%);
            color: white;
        }}
        
        .download-btn:hover {{
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
        }}
        
        @media (max-width: 768px) {{
            .status-container {{
                padding: 40px 20px;
            }}
            
            .download-buttons {{
                flex-direction: column;
                align-items: center;
            }}
        }}
    </style>
</head>
<body>
    <div class="status-container">
        <h1 class="status-title">–°–æ–∑–¥–∞–µ–º –í–∞—à—É –ö–Ω–∏–≥—É –õ—é–±–≤–∏</h1>
        <p class="status-message">–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ... –ú—ã —Å–æ–±–∏—Ä–∞–µ–º —Å–∞–º—ã–µ –∫—Ä–∞—Å–∏–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã –∏ —Å–æ–∑–¥–∞–µ–º —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫—É—é –∫–Ω–∏–≥—É –¥–ª—è –≤–∞—à–µ–≥–æ –ª—é–±–∏–º–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ ‚ù§Ô∏è</p>
        
        <div class="heart-loading">üíï</div>
        
        <div class="progress-container">
            <div class="progress-bar">
                <div class="progress-fill" id="progressFill"></div>
            </div>
            <p class="progress-text" id="progressText">–°–æ–±–∏—Ä–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏...</p>
        </div>
        
        <div class="result-container" id="resultContainer">
            <h2 class="success-title">–í–∞—à–∞ –∫–Ω–∏–≥–∞ –≥–æ—Ç–æ–≤–∞! </h2>
            <p>–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏–ª–∏ —Å–∫–∞—á–∞—Ç—å —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫—É—é –∫–Ω–∏–≥—É</p>
            <div class="download-buttons" id="downloadButtons">
                
            </div>
        </div>
    </div>
    
    <script>
        const runId = '{runId}';
        const progressFill = document.getElementById('progressFill');
        const progressText = document.getElementById('progressText');
        const resultContainer = document.getElementById('resultContainer');
        const downloadButtons = document.getElementById('downloadButtons');
        
        const stages = [
            {{ text: ' –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∏–∑–≥–∏–± —Ç–≤–æ–µ–≥–æ –Ω–æ—Å–∞: –Ω–µ–∂–Ω–∞—è –ø–ª–∞–≤–Ω–∞—è –ª–∏–Ω–∏—è, —Å–ª–æ–≤–Ω–æ —Å–æ–∑–¥–∞–Ω–Ω–∞—è –∏—Å–∫—É—Å–Ω—ã–º —Å–∫—É–ª—å–ø—Ç–æ—Ä–æ–º...', progress: 15 }},
            {{ text: ' –¢–æ–Ω—É –≤ –æ–∫–µ–∞–Ω–µ —Ç–≤–æ–µ–≥–æ –≤–∑–≥–ª—è–¥–∞ -—Ç–∞–∫–æ–π –≥–ª—É–±–æ–∫–∏–π, —á—Ç–æ —Ç–µ—Ä—è—é—Å—å –≤ –µ–≥–æ –±–µ–∑–¥–æ–Ω–Ω–æ—Å—Ç–∏...', progress: 25 }},
            {{ text: '–ò–∑—É—á–∞—é –∫–æ–Ω—Ç—É—Ä —Ç–≤–æ–∏—Ö –≥—É–± - –æ–Ω–∏ —Å–ª–æ–≤–Ω–æ –ª–µ–ø–µ—Å—Ç–∫–∏ —Ä–æ–∑—ã, –≥–æ—Ç–æ–≤—ã–µ —à–µ–ø—Ç–∞—Ç—å —Å–µ–∫—Ä–µ—Ç—ã...', progress: 35 }},
            {{ text: '–û—â—É—â–∞—é –º—è–≥–∫–æ—Å—Ç—å —Ç–≤–æ–µ–π —É–ª—ã–±–∫–∏, –∫–∞–∫ –≤–µ—Å–µ–Ω–Ω–∏–π —Ä–∞—Å—Å–≤–µ—Ç –Ω–∞ –≥–æ—Ä–∏–∑–æ–Ω—Ç–µ...', progress: 45 }},
            {{ text: ' –ó–∞–º–µ—á–∞—é, –∫–∞–∫ —Ç—Ä–µ–ø–µ—â—É—Ç —Ç–≤–æ–∏ —Ä–µ—Å–Ω–∏—Ü—ã –ø—Ä–∏ –∫–∞–∂–¥–æ–º –º–æ—Ä–≥–∞–Ω–∏–∏ - —Å–ª–æ–≤–Ω–æ –∫—Ä—ã–ª—å—è –±–∞–±–æ—á–∫–∏...', progress: 55 }},
            {{ text: ' –†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞—é, –∫–∞–∫ —Å–≤–µ—Ç –∏–≥—Ä–∞–µ—Ç –Ω–∞ —Ç–≤–æ–∏—Ö —Å–∫—É–ª–∞—Ö, —Å–æ–∑–¥–∞–≤–∞—è –∏–¥–µ–∞–ª—å–Ω—ã–µ —Ç–µ–Ω–∏...', progress: 65 }},
            {{ text: '–í–æ—Å—Ö–∏—â–∞—é—Å—å –Ω–µ–∂–Ω–æ—Å—Ç—å—é —Ç–≤–æ–∏—Ö —â—ë–∫ - –æ–Ω–∏ —Å–ª–æ–≤–Ω–æ —Ç—Ä–æ–Ω—É—Ç—ã —É—Ç—Ä–µ–Ω–Ω–∏–º —Ä—É–º—è–Ω—Ü–µ–º...', progress: 75 }},
            {{ text: '–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –º–∏–º–∏–∫—É - –∫–∞–∂–¥–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç –æ—Ç–¥–µ–ª—å–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é —Ç–≤–æ–µ–π –¥—É—à–∏...', progress: 85 }},
            {{ text: '–°–ø–ª–µ—Ç–∞—é —Å–ª–æ–≤–∞ –≤ –≥–ª–∞–≤—ã, —á—Ç–æ–±—ã –æ–ø–∏—Å–∞—Ç—å —Ç–≤–æ—é –Ω–µ–ø–æ–≤—Ç–æ—Ä–∏–º—É—é –∫—Ä–∞—Å–æ—Ç—É...', progress: 95 }}
        ];
        
        let currentStage = 0;
        
        function updateProgress() {{
            if (currentStage < stages.length) {{
                const stage = stages[currentStage];
                progressFill.style.width = stage.progress + '%';
                progressText.textContent = stage.text;
                currentStage++;
                setTimeout(updateProgress, 3000);
            }}
        }}
        
        async function checkStatus() {{
            try {{
                const response = await fetch(`/status/${{runId}}`);
                const status = await response.json();
                
                // –ù–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è stages, –ø–æ–∫–∞ –∫–Ω–∏–≥–∞ –Ω–µ –≥–æ—Ç–æ–≤–∞
                
                if (status.stages.book_generated) {{
                    progressFill.style.width = '100%';
                    progressText.textContent = '–ì–æ—Ç–æ–≤–æ! ‚ú®';
                    
                    setTimeout(() => {{
                        document.querySelector('.progress-container').style.display = 'none';
                        document.querySelector('.heart-loading').style.display = 'none';
                        document.querySelector('.status-message').textContent = '–†–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è –∫–Ω–∏–≥–∞ —Å–æ–∑–¥–∞–Ω–∞ —Å –ª—é–±–æ–≤—å—é! üíù';
                        resultContainer.style.display = 'block';
                        
                        if (status.files.html) {{
                            const viewBtn = document.createElement('a');
                            viewBtn.href = status.files.html;
                            viewBtn.className = 'download-btn btn-view';
                            viewBtn.textContent = '–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–Ω–∏–≥—É üëÄ';
                            viewBtn.target = '_blank';
                            downloadButtons.appendChild(viewBtn);
                        }}
                        
                        if (status.files.pdf) {{
                            const downloadBtn = document.createElement('a');
                            downloadBtn.href = status.files.pdf;
                            downloadBtn.className = 'download-btn btn-download';
                            downloadBtn.textContent = '–°–∫–∞—á–∞—Ç—å PDF üíï';
                            downloadBtn.download = 'romantic_book.pdf';
                            downloadButtons.appendChild(downloadBtn);
                        }}
                    }}, 1000);
                }} else {{
                    setTimeout(checkStatus, 3000);
                }}
            }} catch (error) {{
                setTimeout(checkStatus, 5000);
            }}
        }}
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∫—É —Å—Ç–∞—Ç—É—Å–∞
        updateProgress();
        setTimeout(checkStatus, 5000);
    </script>
</body>
</html>
    """)

@app.post("/create-book")
async def create_book(request: Request, background: BackgroundTasks):
    """–°–æ–∑–¥–∞–µ—Ç —Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫—É—é –∫–Ω–∏–≥—É –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–∏–ª—è"""
    try:
        body = await request.json()
        run_id = body.get("runId")
        book_format = body.get("format", "classic")  # "classic" –∏–ª–∏ "zine"
        
        if not run_id:
            raise HTTPException(400, "runId –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
        run_dir = Path("data") / run_id
        if not run_dir.exists():
            raise HTTPException(404, f"–î–∞–Ω–Ω—ã–µ –¥–ª—è runId {run_id} –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
    except Exception as e:
        raise HTTPException(400, f"–û—à–∏–±–∫–∞ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö –∑–∞–ø—Ä–æ—Å–∞: {e}")

    async def _build():
        # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        images_dir = run_dir / "images"
        for attempt in range(10):  # –ú–∞–∫—Å–∏–º—É–º 20 —Å–µ–∫—É–Ω–¥ –æ–∂–∏–¥–∞–Ω–∏—è
            if images_dir.exists() and any(images_dir.glob("*")):
                print(f"üì∏ –ù–∞–π–¥–µ–Ω—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –ø–∞–ø–∫–µ {images_dir}")
                break
            print(f"‚è≥ –ü–æ–ø—ã—Ç–∫–∞ {attempt + 1}/10: –∂–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
            await asyncio.sleep(2)

        imgs      = await process_folder(images_dir)
        comments  = collect_texts(run_dir / "posts.json")
        build_romantic_book(run_id, imgs, comments, book_format)

    background.add_task(lambda: anyio.run(_build))

    format_name = "–∫–ª–∞—Å—Å–∏—á–µ—Å–∫—É—é –∫–Ω–∏–≥—É" if book_format == "classic" else "–º–æ–∑–∞–∏—á–Ω—ã–π –∑–∏–Ω"
    return {"status": "processing", "runId": run_id, "format": book_format, "message": f"–°–æ–∑–¥–∞–Ω–∏–µ {format_name} –Ω–∞—á–∞–ª–æ—Å—å! üíï"}
