import { useEffect, useState } from 'react';
import { useSearchParams, useNavigate } from 'react-router-dom';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { CheckCircle, Sparkles, ArrowRight } from 'lucide-react';
import { useAuth } from '@clerk/clerk-react';
import { payments } from '@/lib/api';
import { useToast } from '@/hooks/use-toast';

export function PaymentSuccessPage() {
  const [searchParams] = useSearchParams();
  const navigate = useNavigate();
  const { getToken } = useAuth();
  const { toast } = useToast();
  const [isLoading, setIsLoading] = useState(true);
  const [checkoutStatus, setCheckoutStatus] = useState<any>(null);

  const checkoutId = searchParams.get('checkout_id');

  useEffect(() => {
    if (checkoutId) {
      verifyPayment();
    } else {
      setIsLoading(false);
    }
  }, [checkoutId]);

  const verifyPayment = async () => {
    try {
      const token = await getToken();
      if (!token || !checkoutId) return;

      const response = await payments.getCheckoutStatus(checkoutId, token);
      setCheckoutStatus(response.status);
      
      toast({
        title: "üéâ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!",
        description: "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Pro! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–∏–≥.",
      });
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞:', error);
      toast({
        title: "–û—à–∏–±–∫–∞",
        description: "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã",
        variant: "destructive",
      });
    } finally {
      setIsLoading(false);
    }
  };

  if (isLoading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-purple-50 to-pink-50 flex items-center justify-center p-4">
        <div className="text-center">
          <div className="animate-spin rounded-full h-12 w-12 border-b-2 border-purple-600 mx-auto mb-4"></div>
          <p className="text-gray-600">–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã...</p>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-50 to-pink-50 flex items-center justify-center p-4">
      <Card className="w-full max-w-md text-center">
        <CardHeader>
          <div className="mx-auto w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mb-4">
            <CheckCircle className="h-8 w-8 text-green-600" />
          </div>
          <CardTitle className="text-2xl font-bold text-green-600">
            –û–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–∞!
          </CardTitle>
          <CardDescription>
            –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Mythic Pro
          </CardDescription>
        </CardHeader>
        <CardContent className="space-y-6">
          <div className="bg-purple-50 p-4 rounded-lg">
            <div className="flex items-center justify-center gap-2 mb-2">
              <Sparkles className="h-5 w-5 text-purple-600" />
              <span className="font-semibold text-purple-800">Pro –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!</span>
            </div>
            <p className="text-sm text-purple-600">
              –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–µ–æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–Ω–∏–≥
            </p>
          </div>

          {checkoutStatus && (
            <div className="text-sm text-gray-600 space-y-1">
              <p><strong>Checkout ID:</strong> {checkoutStatus.id}</p>
              <p><strong>–°—Ç–∞—Ç—É—Å:</strong> {checkoutStatus.status}</p>
              {checkoutStatus.customer_email && (
                <p><strong>Email:</strong> {checkoutStatus.customer_email}</p>
              )}
            </div>
          )}

          <div className="space-y-3">
            <Button onClick={() => navigate('/generate')} className="w-full">
              <ArrowRight className="mr-2 h-4 w-4" />
              –°–æ–∑–¥–∞—Ç—å –ø–µ—Ä–≤—É—é Pro –∫–Ω–∏–≥—É
            </Button>
            <Button variant="outline" onClick={() => navigate('/library')} className="w-full">
              –ü–µ—Ä–µ–π—Ç–∏ –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫—É
            </Button>
          </div>
        </CardContent>
      </Card>
    </div>
  );
} 